

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Oct 14 15:39:21 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text6_split_1,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0009                     	;# 
   376  000A                     	;# 
   377  000B                     	;# 
   378  000C                     	;# 
   379  000D                     	;# 
   380  000E                     	;# 
   381  000E                     	;# 
   382  000F                     	;# 
   383  0010                     	;# 
   384  0011                     	;# 
   385  0012                     	;# 
   386  0013                     	;# 
   387  0014                     	;# 
   388  0015                     	;# 
   389  0015                     	;# 
   390  0016                     	;# 
   391  0017                     	;# 
   392  0018                     	;# 
   393  0019                     	;# 
   394  001A                     	;# 
   395  001B                     	;# 
   396  001B                     	;# 
   397  001C                     	;# 
   398  001D                     	;# 
   399  001E                     	;# 
   400  001F                     	;# 
   401  0081                     	;# 
   402  0085                     	;# 
   403  0086                     	;# 
   404  0087                     	;# 
   405  0089                     	;# 
   406  008C                     	;# 
   407  008D                     	;# 
   408  008E                     	;# 
   409  008F                     	;# 
   410  0090                     	;# 
   411  0091                     	;# 
   412  0092                     	;# 
   413  0093                     	;# 
   414  0093                     	;# 
   415  0093                     	;# 
   416  0094                     	;# 
   417  0095                     	;# 
   418  0096                     	;# 
   419  0097                     	;# 
   420  0098                     	;# 
   421  0099                     	;# 
   422  009A                     	;# 
   423  009B                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  0105                     	;# 
   429  0107                     	;# 
   430  0108                     	;# 
   431  0109                     	;# 
   432  010C                     	;# 
   433  010C                     	;# 
   434  010D                     	;# 
   435  010E                     	;# 
   436  010F                     	;# 
   437  0185                     	;# 
   438  0187                     	;# 
   439  0188                     	;# 
   440  0189                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443                           
   444                           	psect	idataBANK2
   445  0000'                    __pidataBANK2:	
   446                           
   447                           ;initializer for temp_voltage@F1739
   448  0000' 34CE               	retlw	206
   449  0001' 348C               	retlw	140
   450  0002' 34C1               	retlw	193
   451  0003' 34AF               	retlw	175
   452  0004' 341B               	retlw	27
   453  0005' 3442               	retlw	66
   454  0006' 3409               	retlw	9
   455  0007' 3498               	retlw	152
   456  0008' 343C               	retlw	60
   457  0009' 3494               	retlw	148
   458  000A' 34D0               	retlw	208
   459  000B' 34B8               	retlw	184
   460  000C' 341B               	retlw	27
   461  000D' 34AB               	retlw	171
   462  000E' 3434               	retlw	52
   463  000F' 3422               	retlw	34
   464  0010' 341A               	retlw	26
   465  0011' 34B0               	retlw	176
   466  0012' 34D6               	retlw	214
   467  0013' 341D               	retlw	29
   468  0014' 342B               	retlw	43
   469  0015' 3496               	retlw	150
   470  0016' 34B8               	retlw	184
   471  0017' 34A5               	retlw	165
   472  0018' 3464               	retlw	100
   473  0019' 34E5               	retlw	229
   474  001A' 341F               	retlw	31
   475  001B' 3424               	retlw	36
   476  001C' 346A               	retlw	106
   477  001D' 3499               	retlw	153
   478                           
   479                           ;initializer for voltage_temp@F1744
   480  001E' 3439               	retlw	57
   481  001F' 34CE               	retlw	206
   482  0020' 343C               	retlw	60
   483  0021' 3489               	retlw	137
   484  0022' 349C               	retlw	156
   485  0023' 34B5               	retlw	181
   486  0024' 34E5               	retlw	229
   487  0025' 3494               	retlw	148
   488  0026' 34B0               	retlw	176
   489  0027' 34B1               	retlw	177
   490  0028' 347C               	retlw	124
   491  0029' 34AB               	retlw	171
   492  002A' 3444               	retlw	68
   493  002B' 34D7               	retlw	215
   494  002C' 34A5               	retlw	165
   495  002D' 348E               	retlw	142
   496  002E' 34CC               	retlw	204
   497  002F' 349F               	retlw	159
   498  0030' 3425               	retlw	37
   499  0031' 344A               	retlw	74
   500  0032' 3499               	retlw	153
   501  0033' 348B               	retlw	139
   502  0034' 3424               	retlw	36
   503  0035' 3492               	retlw	146
   504                           
   505                           	psect	strings
   506  0000'                    __pstrings:	
   507  0000'                    stringtab:	
   508  0000'                    __stringtab:	
   509  0000'                    stringcode:	
   510                           ;	String table - string pointers are 1 byte each
   511                           
   512  0000'                    stringdir:	
   513  0000' 3000'              	movlw	high stringdir
   514  0001' 008A               	movwf	10
   515  0002' 0804               	movf	4,w
   516  0003' 0A84               	incf	4,f
   517  0004' 0782               	addwf	2,f
   518  0005'                    __stringbase:	
   519  0005' 3400               	retlw	0
   520  0006'                    __end_of__stringtab:	
   521  0006'                    _dpowers:	
   522  0006' 3401               	retlw	1
   523  0007' 3400               	retlw	0
   524  0008' 3400               	retlw	0
   525  0009' 3400               	retlw	0
   526  000A' 340A               	retlw	10
   527  000B' 3400               	retlw	0
   528  000C' 3400               	retlw	0
   529  000D' 3400               	retlw	0
   530  000E' 3464               	retlw	100
   531  000F' 3400               	retlw	0
   532  0010' 3400               	retlw	0
   533  0011' 3400               	retlw	0
   534  0012' 34E8               	retlw	232
   535  0013' 3403               	retlw	3
   536  0014' 3400               	retlw	0
   537  0015' 3400               	retlw	0
   538  0016' 3410               	retlw	16
   539  0017' 3427               	retlw	39
   540  0018' 3400               	retlw	0
   541  0019' 3400               	retlw	0
   542  001A' 34A0               	retlw	160
   543  001B' 3486               	retlw	134
   544  001C' 3401               	retlw	1
   545  001D' 3400               	retlw	0
   546  001E' 3440               	retlw	64
   547  001F' 3442               	retlw	66
   548  0020' 340F               	retlw	15
   549  0021' 3400               	retlw	0
   550  0022' 3480               	retlw	128
   551  0023' 3496               	retlw	150
   552  0024' 3498               	retlw	152
   553  0025' 3400               	retlw	0
   554  0026' 3400               	retlw	0
   555  0027' 34E1               	retlw	225
   556  0028' 34F5               	retlw	245
   557  0029' 3405               	retlw	5
   558  002A' 3400               	retlw	0
   559  002B' 34CA               	retlw	202
   560  002C' 349A               	retlw	154
   561  002D' 343B               	retlw	59
   562  002E'                    __end_of_dpowers:	
   563  002E'                    __npowers_:	
   564  002E' 3400               	retlw	0
   565  002F' 3480               	retlw	128
   566  0030' 343F               	retlw	63
   567  0031' 34CD               	retlw	205
   568  0032' 34CC               	retlw	204
   569  0033' 343D               	retlw	61
   570  0034' 34D7               	retlw	215
   571  0035' 3423               	retlw	35
   572  0036' 343C               	retlw	60
   573  0037' 3412               	retlw	18
   574  0038' 3483               	retlw	131
   575  0039' 343A               	retlw	58
   576  003A' 34B7               	retlw	183
   577  003B' 34D1               	retlw	209
   578  003C' 3438               	retlw	56
   579  003D' 34C6               	retlw	198
   580  003E' 3427               	retlw	39
   581  003F' 3437               	retlw	55
   582  0040' 3438               	retlw	56
   583  0041' 3486               	retlw	134
   584  0042' 3435               	retlw	53
   585  0043' 34C0               	retlw	192
   586  0044' 34D6               	retlw	214
   587  0045' 3433               	retlw	51
   588  0046' 34CC               	retlw	204
   589  0047' 342B               	retlw	43
   590  0048' 3432               	retlw	50
   591  0049' 3470               	retlw	112
   592  004A' 3489               	retlw	137
   593  004B' 3430               	retlw	48
   594  004C' 34E7               	retlw	231
   595  004D' 34DB               	retlw	219
   596  004E' 342E               	retlw	46
   597  004F' 34E5               	retlw	229
   598  0050' 343C               	retlw	60
   599  0051' 341E               	retlw	30
   600  0052' 3442               	retlw	66
   601  0053' 34A2               	retlw	162
   602  0054' 340D               	retlw	13
   603  0055'                    __end_of__npowers_:	
   604  0055'                    __powers_:	
   605  0055' 3400               	retlw	0
   606  0056' 3480               	retlw	128
   607  0057' 343F               	retlw	63
   608  0058' 3400               	retlw	0
   609  0059' 3420               	retlw	32
   610  005A' 3441               	retlw	65
   611  005B' 3400               	retlw	0
   612  005C' 34C8               	retlw	200
   613  005D' 3442               	retlw	66
   614  005E' 3400               	retlw	0
   615  005F' 347A               	retlw	122
   616  0060' 3444               	retlw	68
   617  0061' 3440               	retlw	64
   618  0062' 341C               	retlw	28
   619  0063' 3446               	retlw	70
   620  0064' 3450               	retlw	80
   621  0065' 34C3               	retlw	195
   622  0066' 3447               	retlw	71
   623  0067' 3424               	retlw	36
   624  0068' 3474               	retlw	116
   625  0069' 3449               	retlw	73
   626  006A' 3497               	retlw	151
   627  006B' 3418               	retlw	24
   628  006C' 344B               	retlw	75
   629  006D' 34BC               	retlw	188
   630  006E' 34BE               	retlw	190
   631  006F' 344C               	retlw	76
   632  0070' 346B               	retlw	107
   633  0071' 346E               	retlw	110
   634  0072' 344E               	retlw	78
   635  0073' 3403               	retlw	3
   636  0074' 3415               	retlw	21
   637  0075' 3450               	retlw	80
   638  0076' 3479               	retlw	121
   639  0077' 34AD               	retlw	173
   640  0078' 3460               	retlw	96
   641  0079' 34F3               	retlw	243
   642  007A' 3449               	retlw	73
   643  007B' 3471               	retlw	113
   644  007C'                    __end_of__powers_:	
   645  007C'                    exp@coeff:	
   646  007C' 3400               	retlw	0
   647  007D' 3480               	retlw	128
   648  007E' 343F               	retlw	63
   649  007F' 3472               	retlw	114
   650  0080' 3431               	retlw	49
   651  0081' 343F               	retlw	63
   652  0082' 34FE               	retlw	254
   653  0083' 3475               	retlw	117
   654  0084' 343E               	retlw	62
   655  0085' 3458               	retlw	88
   656  0086' 3463               	retlw	99
   657  0087' 343D               	retlw	61
   658  0088' 3495               	retlw	149
   659  0089' 341D               	retlw	29
   660  008A' 343C               	retlw	60
   661  008B' 34C5               	retlw	197
   662  008C' 34AE               	retlw	174
   663  008D' 343A               	retlw	58
   664  008E' 3479               	retlw	121
   665  008F' 3421               	retlw	33
   666  0090' 3439               	retlw	57
   667  0091' 3494               	retlw	148
   668  0092' 3480               	retlw	128
   669  0093' 3437               	retlw	55
   670  0094' 3493               	retlw	147
   671  0095' 34A7               	retlw	167
   672  0096' 3435               	retlw	53
   673  0097' 3456               	retlw	86
   674  0098' 3415               	retlw	21
   675  0099' 3434               	retlw	52
   676  009A'                    __end_ofexp@coeff:	
   677  009A'                    log@coeff:	
   678  009A' 3400               	retlw	0
   679  009B' 3400               	retlw	0
   680  009C' 3400               	retlw	0
   681  009D' 3400               	retlw	0
   682  009E' 3480               	retlw	128
   683  009F' 343F               	retlw	63
   684  00A0' 34F0               	retlw	240
   685  00A1' 34FF               	retlw	255
   686  00A2' 34BE               	retlw	190
   687  00A3' 34E2               	retlw	226
   688  00A4' 34A9               	retlw	169
   689  00A5' 343E               	retlw	62
   690  00A6' 3483               	retlw	131
   691  00A7' 3476               	retlw	118
   692  00A8' 34BE               	retlw	190
   693  00A9' 34AE               	retlw	174
   694  00AA' 342B               	retlw	43
   695  00AB' 343E               	retlw	62
   696  00AC' 343C               	retlw	60
   697  00AD' 34C3               	retlw	195
   698  00AE' 34BD               	retlw	189
   699  00AF' 34D2               	retlw	210
   700  00B0' 3413               	retlw	19
   701  00B1' 343D               	retlw	61
   702  00B2' 3478               	retlw	120
   703  00B3' 34D3               	retlw	211
   704  00B4' 34BB               	retlw	187
   705  00B5'                    __end_oflog@coeff:	
   706  0005                     _PORTA	set	5
   707  0006                     _PORTBbits	set	6
   708  0007                     _PORTCbits	set	7
   709  0013                     _SSPBUF	set	19
   710  0014                     _SSPCONbits	set	20
   711  008F                     _OSCCONbits	set	143
   712  0090                     _OSCTUNEbits	set	144
   713  0094                     _SSPSTATbits	set	148
   714  0085                     _TRISA	set	133
   715  0086                     _TRISB	set	134
   716  0087                     _TRISCbits	set	135
   717  0089                     _TRISEbits	set	137
   718  00B5'                    __stringdata:	
   719  00B5'                    STR_1:	
   720  00B5' 3425               	retlw	37	;'%'
   721  00B6' 3430               	retlw	48	;'0'
   722  00B7' 3435               	retlw	53	;'5'
   723  00B8' 342E               	retlw	46	;'.'
   724  00B9' 3431               	retlw	49	;'1'
   725  00BA' 3466               	retlw	102	;'f'
   726  00BB' 3400               	retlw	0
   727  00BC'                    __end_of__stringdata:	
   728                           
   729                           ; #config settings
   730  0000                     
   731                           	psect	cinit
   732  0000'                    start_initialization:	
   733  0000'                    __initialization:	
   734                           
   735                           ; Clear objects allocated to COMMON
   736  0000' 0180'              	clrf	__pbssCOMMON& (0+127)
   737  0001' 0180'              	clrf	(__pbssCOMMON+1)& (0+127)
   738                           
   739                           ; Clear objects allocated to BANK3
   740  0002' 1683               	bsf	3,5	;RP0=1, select bank3
   741  0003' 1703               	bsf	3,6	;RP1=1, select bank3
   742  0004' 0180'              	clrf	__pbssBANK3& (0+127)
   743  0005' 0180'              	clrf	(__pbssBANK3+1)& (0+127)
   744  0006' 0180'              	clrf	(__pbssBANK3+2)& (0+127)
   745  0007' 0180'              	clrf	(__pbssBANK3+3)& (0+127)
   746                           
   747                           ; Clear objects allocated to BANK2
   748  0008' 1783               	bsf	3,7	;select IRP bank2
   749  0009' 3000'              	movlw	low __pbssBANK2
   750  000A' 0084               	movwf	4
   751  000B' 3000'              	movlw	low (__pbssBANK2+18)
   752  000C' 120A' 118A' 2000' 120A' 118A' 	fcall	clear_ram0
   753                           
   754                           ; Initialize objects allocated to BANK2
   755  0011' 3000'              	movlw	low (__pdataBANK2+54)
   756  0012' 00FD               	movwf	btemp+-1
   757  0013' 3000'              	movlw	high __pidataBANK2
   758  0014' 00FE               	movwf	btemp
   759  0015' 3000'              	movlw	low __pidataBANK2
   760  0016' 00FF               	movwf	btemp+1
   761  0017' 3000'              	movlw	low __pdataBANK2
   762  0018' 0084               	movwf	4
   763  0019' 120A' 118A' 2000'  	fcall	init_ram0
   764  001C'                    end_of_initialization:	
   765                           ;End of C runtime variable initialization code
   766                           
   767  001C'                    __end_of__initialization:	
   768  001C' 0183               	clrf	3
   769  001D' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   770                           
   771                           	psect	bssCOMMON
   772  0000'                    __pbssCOMMON:	
   773  0000'                    _errno:	
   774  0000'                    	ds	2
   775                           
   776                           	psect	bssBANK3
   777  0000'                    __pbssBANK3:	
   778  0000'                    wait_ms@timel:	
   779  0000'                    	ds	4
   780                           
   781                           	psect	bssBANK2
   782  0000'                    __pbssBANK2:	
   783  0000'                    display_number@str:	
   784  0000'                    	ds	9
   785  0009'                    seven_segment@str:	
   786  0009'                    	ds	9
   787                           
   788                           	psect	dataBANK2
   789  0000'                    __pdataBANK2:	
   790  0000'                    temp_voltage@F1739:	
   791  0000'                    	ds	30
   792  001E'                    voltage_temp@F1744:	
   793  001E'                    	ds	24
   794                           
   795                           	psect	clrtext
   796  0000'                    clear_ram0:	
   797                           ;	Called with FSR containing the base address, and
   798                           ;	W with the last address+1
   799                           
   800  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   801  0001'                    clrloop0:	
   802  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   803  0002' 0A84               	incf	4,f	;increment pointer
   804  0003' 0604               	xorwf	4,w	;XOR with final address
   805  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   806  0005' 3400               	retlw	0	;all done for this memory range, return
   807  0006' 0604               	xorwf	4,w	;XOR again to restore value
   808  0007' 2800'              	goto	clrloop0	;do the next byte
   809                           
   810                           	psect	inittext
   811  0000'                    init_fetch0:	
   812                           ;	Called with low address in FSR and high address in W
   813                           
   814  0000' 087E               	movf	126,w
   815  0001' 008A               	movwf	10
   816  0002' 087F               	movf	127,w
   817  0003' 0082               	movwf	2
   818  0004'                    init_ram0:	
   819                           ;Called with:
   820                           ;	high address of idata address in btemp 
   821                           ;	low address of idata address in btemp+1 
   822                           ;	low address of data in FSR
   823                           ;	high address + 1 of data in btemp-1
   824                           
   825  0004' 2000' 120A' 118A'  	fcall	init_fetch0
   826  0007' 0080               	movwf	0
   827  0008' 0A84               	incf	4,f
   828  0009' 0804               	movf	4,w
   829  000A' 067D               	xorwf	125,w
   830  000B' 1903               	btfsc	3,2
   831  000C' 3400               	retlw	0
   832  000D' 0AFF               	incf	127,f
   833  000E' 1903               	btfsc	3,2
   834  000F' 0AFE               	incf	126,f
   835  0010' 2800'              	goto	init_ram0
   836                           
   837                           	psect	cstackBANK3
   838  0000'                    __pcstackBANK3:	
   839  0000'                    ?_seven_segment:	
   840  0000'                    seven_segment@number:	
   841                           ; 0 bytes @ 0x0
   842                           
   843  0000'                    temp_voltage@c_const:	
   844                           ; 3 bytes @ 0x0
   845                           
   846                           
   847                           ; 30 bytes @ 0x0
   848  0000'                    	ds	3
   849  0003'                    seven_segment@sel:	
   850                           
   851                           ; 2 bytes @ 0x3
   852  0003'                    	ds	27
   853  001E'                    _temp_voltage$1008:	
   854                           
   855                           ; 3 bytes @ 0x1E
   856  001E'                    	ds	3
   857  0021'                    _temp_voltage$1010:	
   858                           
   859                           ; 3 bytes @ 0x21
   860  0021'                    	ds	3
   861  0024'                    _temp_voltage$1011:	
   862                           
   863                           ; 3 bytes @ 0x24
   864  0024'                    	ds	3
   865  0027'                    _temp_voltage$1012:	
   866                           
   867                           ; 3 bytes @ 0x27
   868  0027'                    	ds	3
   869  002A'                    temp_voltage@microvolt:	
   870                           
   871                           ; 3 bytes @ 0x2A
   872  002A'                    	ds	3
   873  002D'                    _temp_voltage$1009:	
   874                           
   875                           ; 3 bytes @ 0x2D
   876  002D'                    	ds	3
   877  0030'                    temp_voltage@i:	
   878                           
   879                           ; 2 bytes @ 0x30
   880  0030'                    	ds	2
   881  0032'                    ??_main:	
   882                           
   883                           ; 0 bytes @ 0x32
   884  0032'                    	ds	4
   885  0036'                    main@result:	
   886                           
   887                           ; 2 bytes @ 0x36
   888  0036'                    	ds	2
   889  0038'                    main@strval:	
   890                           
   891                           ; 5 bytes @ 0x38
   892  0038'                    	ds	5
   893  003D'                    main@thermo_v:	
   894                           
   895                           ; 3 bytes @ 0x3D
   896  003D'                    	ds	3
   897  0040'                    main@tc:	
   898                           
   899                           ; 3 bytes @ 0x40
   900  0040'                    	ds	3
   901  0043'                    _main$1005:	
   902                           
   903                           ; 3 bytes @ 0x43
   904  0043'                    	ds	3
   905  0046'                    _main$1004:	
   906                           
   907                           ; 2 bytes @ 0x46
   908  0046'                    	ds	2
   909  0048'                    main@junc_temp:	
   910                           
   911                           ; 3 bytes @ 0x48
   912  0048'                    	ds	3
   913  004B'                    main@str:	
   914                           
   915                           ; 1 bytes @ 0x4B
   916  004B'                    	ds	1
   917  004C'                    main@digit:	
   918                           
   919                           ; 1 bytes @ 0x4C
   920  004C'                    	ds	1
   921  004D'                    main@junc_bin:	
   922                           
   923                           ; 2 bytes @ 0x4D
   924  004D'                    	ds	2
   925  004F'                    main@not_ready:	
   926                           
   927                           ; 2 bytes @ 0x4F
   928  004F'                    	ds	2
   929  0051'                    main@loop_counter:	
   930                           
   931                           ; 2 bytes @ 0x51
   932  0051'                    	ds	2
   933  0053'                    main@val:	
   934                           
   935                           ; 2 bytes @ 0x53
   936  0053'                    	ds	2
   937  0055'                    main@i:	
   938                           
   939                           ; 2 bytes @ 0x55
   940  0055'                    	ds	2
   941  0057'                    main@thermo_sel:	
   942                           
   943                           ; 2 bytes @ 0x57
   944  0057'                    	ds	2
   945  0059'                    main@i_135:	
   946                           
   947                           ; 2 bytes @ 0x59
   948  0059'                    	ds	2
   949                           
   950                           	psect	cstackBANK1
   951  0000'                    __pcstackBANK1:	
   952  0000'                    _ldexp$715:	
   953  0000'                    _sprintf$1018:	
   954                           ; 3 bytes @ 0x0
   955                           
   956                           
   957                           ; 3 bytes @ 0x0
   958  0000'                    	ds	3
   959  0003'                    ?_exp:	
   960  0003'                    exp@x:	
   961                           ; 3 bytes @ 0x3
   962                           
   963  0003'                    _sprintf$500:	
   964                           ; 3 bytes @ 0x3
   965                           
   966                           
   967                           ; 4 bytes @ 0x3
   968  0003'                    	ds	3
   969  0006'                    _exp$1019:	
   970                           
   971                           ; 3 bytes @ 0x6
   972  0006'                    	ds	1
   973  0007'                    sprintf@ap:	
   974                           
   975                           ; 1 bytes @ 0x7
   976  0007'                    	ds	1
   977  0008'                    sprintf@vd:	
   978                           
   979                           ; 4 bytes @ 0x8
   980  0008'                    	ds	1
   981  0009'                    _exp$668:	
   982                           
   983                           ; 3 bytes @ 0x9
   984  0009'                    	ds	3
   985  000C'                    exp@exponent:	
   986  000C'                    sprintf@vd_502:	
   987                           ; 2 bytes @ 0xC
   988                           
   989                           
   990                           ; 4 bytes @ 0xC
   991  000C'                    	ds	2
   992  000E'                    exp@sign:	
   993                           
   994                           ; 1 bytes @ 0xE
   995  000E'                    	ds	1
   996  000F'                    ?_pow:	
   997  000F'                    pow@x:	
   998                           ; 3 bytes @ 0xF
   999                           
  1000                           
  1001                           ; 3 bytes @ 0xF
  1002  000F'                    	ds	1
  1003  0010'                    sprintf@integ:	
  1004                           
  1005                           ; 3 bytes @ 0x10
  1006  0010'                    	ds	2
  1007  0012'                    pow@y:	
  1008                           
  1009                           ; 3 bytes @ 0x12
  1010  0012'                    	ds	1
  1011  0013'                    sprintf@_val:	
  1012                           
  1013                           ; 4 bytes @ 0x13
  1014  0013'                    	ds	2
  1015  0015'                    _pow$1020:	
  1016                           
  1017                           ; 3 bytes @ 0x15
  1018  0015'                    	ds	2
  1019  0017'                    sprintf@exp:	
  1020                           
  1021                           ; 2 bytes @ 0x17
  1022  0017'                    	ds	1
  1023  0018'                    _pow$1021:	
  1024                           
  1025                           ; 3 bytes @ 0x18
  1026  0018'                    	ds	1
  1027  0019'                    sprintf@flag:	
  1028                           
  1029                           ; 2 bytes @ 0x19
  1030  0019'                    	ds	2
  1031  001B'                    pow@sign:	
  1032  001B'                    sprintf@width:	
  1033                           ; 1 bytes @ 0x1B
  1034                           
  1035                           
  1036                           ; 2 bytes @ 0x1B
  1037  001B'                    	ds	1
  1038  001C'                    pow@yi:	
  1039                           
  1040                           ; 4 bytes @ 0x1C
  1041  001C'                    	ds	1
  1042  001D'                    sprintf@fval:	
  1043                           
  1044                           ; 3 bytes @ 0x1D
  1045  001D'                    	ds	3
  1046  0020'                    ?_binary_decimal:	
  1047  0020'                    ?_temp_voltage:	
  1048                           ; 2 bytes @ 0x20
  1049                           
  1050  0020'                    ?_voltage_temp:	
  1051                           ; 3 bytes @ 0x20
  1052                           
  1053  0020'                    binary_decimal@n:	
  1054                           ; 3 bytes @ 0x20
  1055                           
  1056  0020'                    sprintf@prec:	
  1057                           ; 2 bytes @ 0x20
  1058                           
  1059  0020'                    temp_voltage@temp:	
  1060                           ; 2 bytes @ 0x20
  1061                           
  1062  0020'                    voltage_temp@millivolt:	
  1063                           ; 3 bytes @ 0x20
  1064                           
  1065                           
  1066                           ; 3 bytes @ 0x20
  1067  0020'                    	ds	2
  1068  0022'                    sprintf@sp:	
  1069  0022'                    _binary_decimal$1006:	
  1070                           ; 1 bytes @ 0x22
  1071                           
  1072                           
  1073                           ; 3 bytes @ 0x22
  1074  0022'                    	ds	1
  1075  0023'                    ??_temp_voltage:	
  1076  0023'                    ??_voltage_temp:	
  1077                           ; 0 bytes @ 0x23
  1078                           
  1079  0023'                    sprintf@c:	
  1080                           ; 0 bytes @ 0x23
  1081                           
  1082                           
  1083                           ; 1 bytes @ 0x23
  1084  0023'                    	ds	1
  1085  0024'                    ??_display_number:	
  1086                           
  1087                           ; 0 bytes @ 0x24
  1088  0024'                    	ds	1
  1089  0025'                    _binary_decimal$1007:	
  1090                           
  1091                           ; 3 bytes @ 0x25
  1092  0025'                    	ds	2
  1093  0027'                    voltage_temp@c_const:	
  1094                           
  1095                           ; 24 bytes @ 0x27
  1096  0027'                    	ds	1
  1097  0028'                    binary_decimal@rem:	
  1098                           
  1099                           ; 2 bytes @ 0x28
  1100  0028'                    	ds	2
  1101  002A'                    binary_decimal@decimal:	
  1102                           
  1103                           ; 2 bytes @ 0x2A
  1104  002A'                    	ds	2
  1105  002C'                    binary_decimal@i:	
  1106                           
  1107                           ; 2 bytes @ 0x2C
  1108  002C'                    	ds	19
  1109  003F'                    voltage_temp@microvolt:	
  1110                           
  1111                           ; 3 bytes @ 0x3F
  1112  003F'                    	ds	3
  1113  0042'                    _voltage_temp$1013:	
  1114                           
  1115                           ; 3 bytes @ 0x42
  1116  0042'                    	ds	3
  1117  0045'                    _voltage_temp$1014:	
  1118                           
  1119                           ; 3 bytes @ 0x45
  1120  0045'                    	ds	3
  1121  0048'                    voltage_temp@temp:	
  1122                           
  1123                           ; 3 bytes @ 0x48
  1124  0048'                    	ds	3
  1125  004B'                    voltage_temp@i:	
  1126                           
  1127                           ; 2 bytes @ 0x4B
  1128  004B'                    	ds	2
  1129  004D'                    ??_seven_segment:	
  1130                           
  1131                           ; 0 bytes @ 0x4D
  1132  004D'                    	ds	1
  1133  004E'                    seven_segment@digit:	
  1134                           
  1135                           ; 2 bytes @ 0x4E
  1136  004E'                    	ds	2
  1137                           
  1138                           	psect	cstackCOMMON
  1139  0000'                    __pcstackCOMMON:	
  1140  0000'                    ?_ConfigureOscillator:	
  1141  0000'                    ?_InitApp:	
  1142                           ; 0 bytes @ 0x0
  1143                           
  1144  0000'                    ?_buf_wait:	
  1145                           ; 0 bytes @ 0x0
  1146                           
  1147  0000'                    ?_isdigit:	
  1148                           ; 0 bytes @ 0x0
  1149                           
  1150  0000'                    ?_isr:	
  1151                           ; 1 bit 
  1152                           
  1153  0000'                    ??_isr:	
  1154                           ; 0 bytes @ 0x0
  1155                           
  1156  0000'                    ?_main:	
  1157                           ; 0 bytes @ 0x0
  1158                           
  1159  0000'                    ?_init_SPI:	
  1160                           ; 0 bytes @ 0x0
  1161                           
  1162                           
  1163                           ; 0 bytes @ 0x0
  1164  0000'                    	ds	4
  1165  0004'                    ??_ConfigureOscillator:	
  1166  0004'                    ??_InitApp:	
  1167                           ; 0 bytes @ 0x4
  1168                           
  1169  0004'                    ?_select_chip:	
  1170                           ; 0 bytes @ 0x4
  1171                           
  1172  0004'                    ??_buf_wait:	
  1173                           ; 0 bytes @ 0x4
  1174                           
  1175  0004'                    ??_isdigit:	
  1176                           ; 0 bytes @ 0x4
  1177                           
  1178  0004'                    ??__tdiv_to_l_:	
  1179                           ; 0 bytes @ 0x4
  1180                           
  1181  0004'                    ??___ftpack:	
  1182                           ; 0 bytes @ 0x4
  1183                           
  1184  0004'                    ??_init_SPI:	
  1185                           ; 0 bytes @ 0x4
  1186                           
  1187  0004'                    ??___aldiv:	
  1188                           ; 0 bytes @ 0x4
  1189                           
  1190  0004'                    ??___lldiv:	
  1191                           ; 0 bytes @ 0x4
  1192                           
  1193  0004'                    ??___llmod:	
  1194                           ; 0 bytes @ 0x4
  1195                           
  1196  0004'                    ?___wmul:	
  1197                           ; 0 bytes @ 0x4
  1198                           
  1199  0004'                    ?___awmod:	
  1200                           ; 2 bytes @ 0x4
  1201                           
  1202  0004'                    ?_frexp:	
  1203                           ; 2 bytes @ 0x4
  1204                           
  1205  0004'                    ?___ftneg:	
  1206                           ; 3 bytes @ 0x4
  1207                           
  1208  0004'                    _isdigit$762:	
  1209                           ; 3 bytes @ 0x4
  1210                           
  1211  0004'                    select_chip@chip_sel:	
  1212                           ; 1 bytes @ 0x4
  1213                           
  1214  0004'                    ___wmul@multiplier:	
  1215                           ; 2 bytes @ 0x4
  1216                           
  1217  0004'                    ___awmod@divisor:	
  1218                           ; 2 bytes @ 0x4
  1219                           
  1220  0004'                    frexp@value:	
  1221                           ; 2 bytes @ 0x4
  1222                           
  1223  0004'                    ___ftneg@f1:	
  1224                           ; 3 bytes @ 0x4
  1225                           
  1226                           
  1227                           ; 3 bytes @ 0x4
  1228  0004'                    	ds	1
  1229  0005'                    isdigit@c:	
  1230  0005'                    ___llmod@counter:	
  1231                           ; 1 bytes @ 0x5
  1232                           
  1233                           
  1234                           ; 1 bytes @ 0x5
  1235  0005'                    	ds	1
  1236  0006'                    ??_select_chip:	
  1237  0006'                    ___wmul@multiplicand:	
  1238                           ; 0 bytes @ 0x6
  1239                           
  1240  0006'                    ___awmod@dividend:	
  1241                           ; 2 bytes @ 0x6
  1242                           
  1243                           
  1244                           ; 2 bytes @ 0x6
  1245  0006'                    	ds	1
  1246  0007'                    ??___ftneg:	
  1247  0007'                    ??___lltoft:	
  1248                           ; 0 bytes @ 0x7
  1249                           
  1250  0007'                    ___awtoft@sign:	
  1251                           ; 0 bytes @ 0x7
  1252                           
  1253  0007'                    frexp@eptr:	
  1254                           ; 1 bytes @ 0x7
  1255                           
  1256                           
  1257                           ; 1 bytes @ 0x7
  1258  0007'                    	ds	1
  1259  0008'                    ??_binary_decimal:	
  1260  0008'                    ??___wmul:	
  1261                           ; 0 bytes @ 0x8
  1262                           
  1263  0008'                    ??___ftsub:	
  1264                           ; 0 bytes @ 0x8
  1265                           
  1266                           
  1267                           	psect	cstackBANK0
  1268  0000'                    __pcstackBANK0:	
  1269                           ; 0 bytes @ 0x8
  1270                           
  1271  0000'                    ??_frexp:	
  1272  0000'                    ??___awmod:	
  1273                           ; 0 bytes @ 0x0
  1274                           
  1275  0000'                    ?___ftge:	
  1276                           ; 0 bytes @ 0x0
  1277                           
  1278  0000'                    ?___ftpack:	
  1279                           ; 1 bit 
  1280                           
  1281  0000'                    ?__tdiv_to_l_:	
  1282                           ; 3 bytes @ 0x0
  1283                           
  1284  0000'                    ?__div_to_l_:	
  1285                           ; 4 bytes @ 0x0
  1286                           
  1287  0000'                    ?___aldiv:	
  1288                           ; 4 bytes @ 0x0
  1289                           
  1290  0000'                    ?___lldiv:	
  1291                           ; 4 bytes @ 0x0
  1292                           
  1293  0000'                    ?___llmod:	
  1294                           ; 4 bytes @ 0x0
  1295                           
  1296  0000'                    ___wmul@product:	
  1297                           ; 4 bytes @ 0x0
  1298                           
  1299  0000'                    __div_to_l_@f1:	
  1300                           ; 2 bytes @ 0x0
  1301                           
  1302  0000'                    ___ftpack@arg:	
  1303                           ; 3 bytes @ 0x0
  1304                           
  1305  0000'                    __tdiv_to_l_@f1:	
  1306                           ; 3 bytes @ 0x0
  1307                           
  1308  0000'                    ___ftge@ff1:	
  1309                           ; 3 bytes @ 0x0
  1310                           
  1311  0000'                    ___aldiv@divisor:	
  1312                           ; 3 bytes @ 0x0
  1313                           
  1314  0000'                    ___lldiv@divisor:	
  1315                           ; 4 bytes @ 0x0
  1316                           
  1317  0000'                    ___llmod@divisor:	
  1318                           ; 4 bytes @ 0x0
  1319                           
  1320                           
  1321                           ; 4 bytes @ 0x0
  1322  0000'                    	ds	1
  1323  0001'                    ___awmod@counter:	
  1324                           
  1325                           ; 1 bytes @ 0x1
  1326  0001'                    	ds	1
  1327  0002'                    ___awmod@sign:	
  1328                           
  1329                           ; 1 bytes @ 0x2
  1330  0002'                    	ds	1
  1331  0003'                    ?___awdiv:	
  1332  0003'                    ___ftpack@exp:	
  1333                           ; 2 bytes @ 0x3
  1334                           
  1335  0003'                    ___awdiv@divisor:	
  1336                           ; 1 bytes @ 0x3
  1337                           
  1338  0003'                    __div_to_l_@f2:	
  1339                           ; 2 bytes @ 0x3
  1340                           
  1341  0003'                    __tdiv_to_l_@f2:	
  1342                           ; 3 bytes @ 0x3
  1343                           
  1344  0003'                    ___ftge@ff2:	
  1345                           ; 3 bytes @ 0x3
  1346                           
  1347                           
  1348                           ; 3 bytes @ 0x3
  1349  0003'                    	ds	1
  1350  0004'                    ___ftpack@sign:	
  1351  0004'                    ___aldiv@dividend:	
  1352                           ; 1 bytes @ 0x4
  1353                           
  1354  0004'                    ___lldiv@dividend:	
  1355                           ; 4 bytes @ 0x4
  1356                           
  1357  0004'                    ___llmod@dividend:	
  1358                           ; 4 bytes @ 0x4
  1359                           
  1360                           
  1361                           ; 4 bytes @ 0x4
  1362  0004'                    	ds	1
  1363  0005'                    ?___awtoft:	
  1364  0005'                    ?___lltoft:	
  1365                           ; 3 bytes @ 0x5
  1366                           
  1367  0005'                    ___awdiv@dividend:	
  1368                           ; 3 bytes @ 0x5
  1369                           
  1370  0005'                    ___awtoft@c:	
  1371                           ; 2 bytes @ 0x5
  1372                           
  1373  0005'                    ___lltoft@c:	
  1374                           ; 2 bytes @ 0x5
  1375                           
  1376                           
  1377                           ; 4 bytes @ 0x5
  1378  0005'                    	ds	1
  1379  0006'                    ??__div_to_l_:	
  1380  0006'                    ??___ftge:	
  1381                           ; 0 bytes @ 0x6
  1382                           
  1383  0006'                    __tdiv_to_l_@quot:	
  1384                           ; 0 bytes @ 0x6
  1385                           
  1386                           
  1387                           ; 4 bytes @ 0x6
  1388  0006'                    	ds	1
  1389  0007'                    ??___awdiv:	
  1390                           
  1391                           ; 0 bytes @ 0x7
  1392  0007'                    	ds	1
  1393  0008'                    ??___awtoft:	
  1394  0008'                    ___aldiv@counter:	
  1395                           ; 0 bytes @ 0x8
  1396                           
  1397  0008'                    ___awdiv@counter:	
  1398                           ; 1 bytes @ 0x8
  1399                           
  1400  0008'                    ___lldiv@quotient:	
  1401                           ; 1 bytes @ 0x8
  1402                           
  1403                           
  1404                           ; 4 bytes @ 0x8
  1405  0008'                    	ds	1
  1406  0009'                    ___aldiv@sign:	
  1407  0009'                    ___awdiv@sign:	
  1408                           ; 1 bytes @ 0x9
  1409                           
  1410  0009'                    ___lltoft@exp:	
  1411                           ; 1 bytes @ 0x9
  1412                           
  1413                           
  1414                           ; 1 bytes @ 0x9
  1415  0009'                    	ds	1
  1416  000A'                    ?___ftdiv:	
  1417  000A'                    __tdiv_to_l_@cntr:	
  1418                           ; 3 bytes @ 0xA
  1419                           
  1420  000A'                    ___awdiv@quotient:	
  1421                           ; 1 bytes @ 0xA
  1422                           
  1423  000A'                    ___ftdiv@f2:	
  1424                           ; 2 bytes @ 0xA
  1425                           
  1426  000A'                    ___aldiv@quotient:	
  1427                           ; 3 bytes @ 0xA
  1428                           
  1429                           
  1430                           ; 4 bytes @ 0xA
  1431  000A'                    	ds	1
  1432  000B'                    __tdiv_to_l_@exp1:	
  1433                           
  1434                           ; 1 bytes @ 0xB
  1435  000B'                    	ds	1
  1436  000C'                    ?___bmul:	
  1437  000C'                    ___bmul@multiplicand:	
  1438                           ; 1 bytes @ 0xC
  1439                           
  1440  000C'                    ___lldiv@counter:	
  1441                           ; 1 bytes @ 0xC
  1442                           
  1443                           
  1444                           ; 1 bytes @ 0xC
  1445  000C'                    	ds	1
  1446  000D'                    ??___bmul:	
  1447  000D'                    ___ftdiv@f1:	
  1448                           ; 0 bytes @ 0xD
  1449                           
  1450                           
  1451                           ; 3 bytes @ 0xD
  1452  000D'                    	ds	1
  1453  000E'                    ___bmul@product:	
  1454  000E'                    __div_to_l_@quot:	
  1455                           ; 1 bytes @ 0xE
  1456                           
  1457                           
  1458                           ; 4 bytes @ 0xE
  1459  000E'                    	ds	1
  1460  000F'                    ___bmul@multiplier:	
  1461                           
  1462                           ; 1 bytes @ 0xF
  1463  000F'                    	ds	1
  1464  0010'                    ??___ftdiv:	
  1465  0010'                    ?___ftmul:	
  1466                           ; 0 bytes @ 0x10
  1467                           
  1468  0010'                    ___ftmul@f1:	
  1469                           ; 3 bytes @ 0x10
  1470                           
  1471                           
  1472                           ; 3 bytes @ 0x10
  1473  0010'                    	ds	2
  1474  0012'                    __div_to_l_@cntr:	
  1475                           
  1476                           ; 1 bytes @ 0x12
  1477  0012'                    	ds	1
  1478  0013'                    __div_to_l_@exp1:	
  1479  0013'                    ___ftmul@f2:	
  1480                           ; 1 bytes @ 0x13
  1481                           
  1482                           
  1483                           ; 3 bytes @ 0x13
  1484  0013'                    	ds	1
  1485  0014'                    ___ftdiv@cntr:	
  1486                           
  1487                           ; 1 bytes @ 0x14
  1488  0014'                    	ds	1
  1489  0015'                    ___ftdiv@f3:	
  1490                           
  1491                           ; 3 bytes @ 0x15
  1492  0015'                    	ds	1
  1493  0016'                    ??___ftmul:	
  1494                           
  1495                           ; 0 bytes @ 0x16
  1496  0016'                    	ds	2
  1497  0018'                    ___ftdiv@exp:	
  1498                           
  1499                           ; 1 bytes @ 0x18
  1500  0018'                    	ds	1
  1501  0019'                    ___ftdiv@sign:	
  1502                           
  1503                           ; 1 bytes @ 0x19
  1504  0019'                    	ds	1
  1505  001A'                    ___ftmul@exp:	
  1506                           
  1507                           ; 1 bytes @ 0x1A
  1508  001A'                    	ds	1
  1509  001B'                    ___ftmul@f3_as_product:	
  1510                           
  1511                           ; 3 bytes @ 0x1B
  1512  001B'                    	ds	3
  1513  001E'                    ___ftmul@cntr:	
  1514                           
  1515                           ; 1 bytes @ 0x1E
  1516  001E'                    	ds	1
  1517  001F'                    ___ftmul@sign:	
  1518                           
  1519                           ; 1 bytes @ 0x1F
  1520  001F'                    	ds	1
  1521  0020'                    ?_fround:	
  1522  0020'                    ?_scale:	
  1523                           ; 3 bytes @ 0x20
  1524                           
  1525                           
  1526                           ; 3 bytes @ 0x20
  1527  0020'                    	ds	3
  1528  0023'                    ??_fround:	
  1529  0023'                    ??_scale:	
  1530                           ; 0 bytes @ 0x23
  1531                           
  1532                           
  1533                           ; 0 bytes @ 0x23
  1534  0023'                    	ds	2
  1535  0025'                    _scale$1017:	
  1536                           
  1537                           ; 3 bytes @ 0x25
  1538  0025'                    	ds	3
  1539  0028'                    scale@scl:	
  1540                           
  1541                           ; 1 bytes @ 0x28
  1542  0028'                    	ds	1
  1543  0029'                    ?___fttol:	
  1544  0029'                    ___fttol@f1:	
  1545                           ; 4 bytes @ 0x29
  1546                           
  1547  0029'                    _fround$1016:	
  1548                           ; 3 bytes @ 0x29
  1549                           
  1550                           
  1551                           ; 3 bytes @ 0x29
  1552  0029'                    	ds	3
  1553  002C'                    _fround$1015:	
  1554                           
  1555                           ; 3 bytes @ 0x2C
  1556  002C'                    	ds	1
  1557  002D'                    ??___fttol:	
  1558                           
  1559                           ; 0 bytes @ 0x2D
  1560  002D'                    	ds	2
  1561  002F'                    fround@prec:	
  1562                           
  1563                           ; 1 bytes @ 0x2F
  1564  002F'                    	ds	1
  1565  0030'                    ?___ftadd:	
  1566  0030'                    ___ftadd@f1:	
  1567                           ; 3 bytes @ 0x30
  1568                           
  1569                           
  1570                           ; 3 bytes @ 0x30
  1571  0030'                    	ds	1
  1572  0031'                    ___fttol@sign1:	
  1573                           
  1574                           ; 1 bytes @ 0x31
  1575  0031'                    	ds	1
  1576  0032'                    ___fttol@lval:	
  1577                           
  1578                           ; 4 bytes @ 0x32
  1579  0032'                    	ds	1
  1580  0033'                    ___ftadd@f2:	
  1581                           
  1582                           ; 3 bytes @ 0x33
  1583  0033'                    	ds	3
  1584  0036'                    ??___ftadd:	
  1585  0036'                    ___fttol@exp1:	
  1586                           ; 0 bytes @ 0x36
  1587                           
  1588                           
  1589                           ; 1 bytes @ 0x36
  1590  0036'                    	ds	1
  1591  0037'                    ?___altoft:	
  1592  0037'                    ___altoft@c:	
  1593                           ; 3 bytes @ 0x37
  1594                           
  1595                           
  1596                           ; 4 bytes @ 0x37
  1597  0037'                    	ds	3
  1598  003A'                    ___ftadd@sign:	
  1599                           
  1600                           ; 1 bytes @ 0x3A
  1601  003A'                    	ds	1
  1602  003B'                    ??___altoft:	
  1603  003B'                    ___ftadd@exp2:	
  1604                           ; 0 bytes @ 0x3B
  1605                           
  1606                           
  1607                           ; 1 bytes @ 0x3B
  1608  003B'                    	ds	1
  1609  003C'                    ___ftadd@exp1:	
  1610                           
  1611                           ; 1 bytes @ 0x3C
  1612  003C'                    	ds	1
  1613  003D'                    ?_eval_poly:	
  1614  003D'                    ?___ftsub:	
  1615                           ; 3 bytes @ 0x3D
  1616                           
  1617  003D'                    ___altoft@exp:	
  1618                           ; 3 bytes @ 0x3D
  1619                           
  1620  003D'                    ___ftsub@f2:	
  1621                           ; 1 bytes @ 0x3D
  1622                           
  1623  003D'                    eval_poly@x:	
  1624                           ; 3 bytes @ 0x3D
  1625                           
  1626                           
  1627                           ; 3 bytes @ 0x3D
  1628  003D'                    	ds	1
  1629  003E'                    ___altoft@sign:	
  1630                           
  1631                           ; 1 bytes @ 0x3E
  1632  003E'                    	ds	1
  1633  003F'                    ?_floor:	
  1634  003F'                    floor@x:	
  1635                           ; 3 bytes @ 0x3F
  1636                           
  1637                           
  1638                           ; 3 bytes @ 0x3F
  1639  003F'                    	ds	1
  1640  0040'                    eval_poly@d:	
  1641  0040'                    ___ftsub@f1:	
  1642                           ; 1 bytes @ 0x40
  1643                           
  1644                           
  1645                           ; 3 bytes @ 0x40
  1646  0040'                    	ds	1
  1647  0041'                    eval_poly@n:	
  1648                           
  1649                           ; 2 bytes @ 0x41
  1650  0041'                    	ds	1
  1651  0042'                    ??_floor:	
  1652                           
  1653                           ; 0 bytes @ 0x42
  1654  0042'                    	ds	1
  1655  0043'                    ??_eval_poly:	
  1656  0043'                    ?_sprintf:	
  1657                           ; 0 bytes @ 0x43
  1658                           
  1659  0043'                    sprintf@f:	
  1660                           ; 2 bytes @ 0x43
  1661                           
  1662  0043'                    floor@i:	
  1663                           ; 1 bytes @ 0x43
  1664                           
  1665                           
  1666                           ; 3 bytes @ 0x43
  1667  0043'                    	ds	1
  1668  0044'                    eval_poly@res:	
  1669                           
  1670                           ; 3 bytes @ 0x44
  1671  0044'                    	ds	2
  1672  0046'                    floor@expon:	
  1673                           
  1674                           ; 2 bytes @ 0x46
  1675  0046'                    	ds	1
  1676  0047'                    ??_sprintf:	
  1677  0047'                    ?_ldexp:	
  1678                           ; 0 bytes @ 0x47
  1679                           
  1680  0047'                    ?_log:	
  1681                           ; 3 bytes @ 0x47
  1682                           
  1683  0047'                    ldexp@value:	
  1684                           ; 3 bytes @ 0x47
  1685                           
  1686  0047'                    log@x:	
  1687                           ; 3 bytes @ 0x47
  1688                           
  1689                           
  1690                           ; 3 bytes @ 0x47
  1691  0047'                    	ds	3
  1692  004A'                    ??_log:	
  1693  004A'                    ldexp@newexp:	
  1694                           ; 0 bytes @ 0x4A
  1695                           
  1696                           
  1697                           ; 2 bytes @ 0x4A
  1698  004A'                    	ds	1
  1699  004B'                    log@exponent:	
  1700                           
  1701                           ; 2 bytes @ 0x4B
  1702  004B'                    	ds	1
  1703  004C'                    ??_ldexp:	
  1704                           
  1705                           ; 0 bytes @ 0x4C
  1706  004C'                    	ds	1
  1707  004D'                    ?_display_number:	
  1708  004D'                    display_number@number:	
  1709                           ; 1 bytes @ 0x4D
  1710                           
  1711                           
  1712                           ; 3 bytes @ 0x4D
  1713  004D'                    	ds	1
  1714  004E'                    ??_exp:	
  1715                           
  1716                           ; 0 bytes @ 0x4E
  1717  004E'                    	ds	1
  1718  004F'                    ??_pow:	
  1719                           
  1720                           ; 0 bytes @ 0x4F
  1721  004F'                    	ds	1
  1722                           
  1723                           	psect	maintext
  1724  0000'                    __pmaintext:	
  1725 ;;
  1726 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1727 ;;
  1728 ;; *************** function _main *****************
  1729 ;; Defined at:
  1730 ;;		line 27 in file "main.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;		None
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  i               2   85[BANK3 ] int 
  1735 ;;  tc              3   64[BANK3 ] float 
  1736 ;;  thermo_v        3   61[BANK3 ] float 
  1737 ;;  not_ready       2   79[BANK3 ] int 
  1738 ;;  i               2   89[BANK3 ] int 
  1739 ;;  thermo_sel      2   87[BANK3 ] int 
  1740 ;;  strval          5   56[BANK3 ] unsigned char [5]
  1741 ;;  val             2   83[BANK3 ] int 
  1742 ;;  result          2   54[BANK3 ] int 
  1743 ;;  digit           1   76[BANK3 ] unsigned char 
  1744 ;;  str             1   75[BANK3 ] PTR unsigned char 
  1745 ;;		 -> display_number@str(9), 
  1746 ;;  junc_temp       3   72[BANK3 ] float 
  1747 ;;  loop_counter    2   81[BANK3 ] int 
  1748 ;;  junc_bin        2   77[BANK3 ] int 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;		None               void
  1751 ;; Registers used:
  1752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 17F/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1758 ;;      Params:         0       0       0       0       0
  1759 ;;      Locals:         0       0       0      37       0
  1760 ;;      Temps:          0       0       0       4       0
  1761 ;;      Totals:         0       0       0      41       0
  1762 ;;Total ram usage:       41 bytes
  1763 ;; Hardware stack levels required when called:    7
  1764 ;; This function calls:
  1765 ;;		_ConfigureOscillator
  1766 ;;		_InitApp
  1767 ;;		___aldiv
  1768 ;;		___awdiv
  1769 ;;		___awtoft
  1770 ;;		___ftadd
  1771 ;;		___ftdiv
  1772 ;;		_binary_decimal
  1773 ;;		_buf_wait
  1774 ;;		_display_number
  1775 ;;		_select_chip
  1776 ;;		_seven_segment
  1777 ;;		_temp_voltage
  1778 ;;		_voltage_temp
  1779 ;; This function is called by:
  1780 ;;		Startup code after reset
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           
  1785                           ;psect for function _main
  1786  0000'                    _main:	
  1787                           
  1788                           ;main.c: 30: ConfigureOscillator();
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1792  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	_ConfigureOscillator
  1793                           
  1794                           ;main.c: 33: InitApp();
  1795  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_InitApp
  1796                           
  1797                           ;main.c: 34: select_chip(1);
  1798  000A' 3001               	movlw	1
  1799  000B' 0084'              	movwf	select_chip@chip_sel
  1800  000C' 3000               	movlw	0
  1801  000D' 0085'              	movwf	select_chip@chip_sel+1
  1802  000E' 120A' 118A' 2000' 120A' 118A' 	fcall	_select_chip
  1803                           
  1804                           ;main.c: 36: SSPBUF = 0b00001000;
  1805  0013' 3008               	movlw	8
  1806  0014' 1283               	bcf	3,5	;RP0=0, select bank0
  1807  0015' 1303               	bcf	3,6	;RP1=0, select bank0
  1808  0016' 0093               	movwf	19	;volatile
  1809                           
  1810                           ;main.c: 37: buf_wait();
  1811  0017' 120A' 118A' 2000' 120A' 118A' 	fcall	_buf_wait
  1812                           
  1813                           ;main.c: 38: SSPBUF = 0b00000000;
  1814  001C' 1283               	bcf	3,5	;RP0=0, select bank0
  1815  001D' 1303               	bcf	3,6	;RP1=0, select bank0
  1816  001E' 0193               	clrf	19	;volatile
  1817                           
  1818                           ;main.c: 39: buf_wait();
  1819  001F' 120A' 118A' 2000' 120A' 118A' 	fcall	_buf_wait
  1820                           
  1821                           ;main.c: 41: select_chip(2);
  1822  0024' 3002               	movlw	2
  1823  0025' 0084'              	movwf	select_chip@chip_sel
  1824  0026' 3000               	movlw	0
  1825  0027' 0085'              	movwf	select_chip@chip_sel+1
  1826  0028' 120A' 118A' 2000' 120A' 118A' 	fcall	_select_chip
  1827                           
  1828                           ;main.c: 43: SSPBUF = 0b00001000;
  1829  002D' 3008               	movlw	8
  1830  002E' 1283               	bcf	3,5	;RP0=0, select bank0
  1831  002F' 1303               	bcf	3,6	;RP1=0, select bank0
  1832  0030' 0093               	movwf	19	;volatile
  1833                           
  1834                           ;main.c: 44: buf_wait();
  1835  0031' 120A' 118A' 2000' 120A' 118A' 	fcall	_buf_wait
  1836                           
  1837                           ;main.c: 45: SSPBUF = 0b00000000;
  1838  0036' 1283               	bcf	3,5	;RP0=0, select bank0
  1839  0037' 1303               	bcf	3,6	;RP1=0, select bank0
  1840  0038' 0193               	clrf	19	;volatile
  1841                           
  1842                           ;main.c: 46: buf_wait();
  1843  0039' 120A' 118A' 2000' 120A' 118A' 	fcall	_buf_wait
  1844                           
  1845                           ;main.c: 47: SSPBUF = 0b11000001;
  1846  003E' 30C1               	movlw	193
  1847  003F' 1283               	bcf	3,5	;RP0=0, select bank0
  1848  0040' 1303               	bcf	3,6	;RP1=0, select bank0
  1849  0041' 0093               	movwf	19	;volatile
  1850                           
  1851                           ;main.c: 48: buf_wait();
  1852  0042' 120A' 118A' 2000' 120A' 118A' 	fcall	_buf_wait
  1853                           
  1854                           ;main.c: 50: select_chip(1);
  1855  0047' 3001               	movlw	1
  1856  0048' 0084'              	movwf	select_chip@chip_sel
  1857  0049' 3000               	movlw	0
  1858  004A' 0085'              	movwf	select_chip@chip_sel+1
  1859  004B' 120A' 118A' 2000' 120A' 118A' 	fcall	_select_chip
  1860                           
  1861                           ;main.c: 52: SSPBUF = 0b01010000;
  1862  0050' 3050               	movlw	80
  1863  0051' 1283               	bcf	3,5	;RP0=0, select bank0
  1864  0052' 1303               	bcf	3,6	;RP1=0, select bank0
  1865  0053' 0093               	movwf	19	;volatile
  1866                           
  1867                           ;main.c: 53: buf_wait();
  1868  0054' 120A' 118A' 2000' 120A' 118A' 	fcall	_buf_wait
  1869                           
  1870                           ;main.c: 54: int junc_bin = SSPBUF/1000;
  1871  0059' 30E8               	movlw	232
  1872  005A' 1283               	bcf	3,5	;RP0=0, select bank0
  1873  005B' 1303               	bcf	3,6	;RP1=0, select bank0
  1874  005C' 0083'              	movwf	___awdiv@divisor
  1875  005D' 3003               	movlw	3
  1876  005E' 0084'              	movwf	___awdiv@divisor+1
  1877  005F' 0813               	movf	19,w	;volatile
  1878  0060' 1683               	bsf	3,5	;RP0=1, select bank3
  1879  0061' 1703               	bsf	3,6	;RP1=1, select bank3
  1880  0062' 0080'              	movwf	??_main^(0+384)
  1881  0063' 0181'              	clrf	(??_main^(0+384)+1)
  1882  0064' 0800'              	movf	??_main^(0+384),w
  1883  0065' 1283               	bcf	3,5	;RP0=0, select bank0
  1884  0066' 1303               	bcf	3,6	;RP1=0, select bank0
  1885  0067' 0085'              	movwf	___awdiv@dividend
  1886  0068' 1683               	bsf	3,5	;RP0=1, select bank3
  1887  0069' 1703               	bsf	3,6	;RP1=1, select bank3
  1888  006A' 0800'              	movf	(??_main+1)^(0+384),w
  1889  006B' 1283               	bcf	3,5	;RP0=0, select bank0
  1890  006C' 1303               	bcf	3,6	;RP1=0, select bank0
  1891  006D' 0086'              	movwf	___awdiv@dividend+1
  1892  006E' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  1893  0073' 1283               	bcf	3,5	;RP0=0, select bank0
  1894  0074' 1303               	bcf	3,6	;RP1=0, select bank0
  1895  0075' 0804'              	movf	?___awdiv+1,w
  1896  0076' 1683               	bsf	3,5	;RP0=1, select bank3
  1897  0077' 1703               	bsf	3,6	;RP1=1, select bank3
  1898  0078' 0180'              	clrf	(main@junc_bin+1)^(0+384)
  1899  0079' 0780'              	addwf	(main@junc_bin+1)^(0+384),f
  1900  007A' 1283               	bcf	3,5	;RP0=0, select bank0
  1901  007B' 1303               	bcf	3,6	;RP1=0, select bank0
  1902  007C' 0803'              	movf	?___awdiv,w
  1903  007D' 1683               	bsf	3,5	;RP0=1, select bank3
  1904  007E' 1703               	bsf	3,6	;RP1=1, select bank3
  1905  007F' 0180'              	clrf	main@junc_bin^(0+384)
  1906  0080' 0780'              	addwf	main@junc_bin^(0+384),f
  1907                           
  1908                           ;main.c: 55: float junc_temp = 25;
  1909  0081' 3000               	movlw	0
  1910  0082' 0080'              	movwf	main@junc_temp^(0+384)
  1911  0083' 30C8               	movlw	200
  1912  0084' 0080'              	movwf	(main@junc_temp+1)^(0+384)
  1913  0085' 3041               	movlw	65
  1914  0086' 0080'              	movwf	(main@junc_temp+2)^(0+384)
  1915                           
  1916                           ;main.c: 57: int loop_counter = 0;
  1917  0087' 0180'              	clrf	main@loop_counter^(0+384)
  1918  0088' 0180'              	clrf	(main@loop_counter+1)^(0+384)
  1919  0089'                    l5557:	
  1920                           ;main.c: 59: while(1)
  1921                           
  1922                           
  1923                           ;main.c: 60: {
  1924                           ;main.c: 61: PORTCbits.RC6 = 0b1;
  1925  0089' 1283               	bcf	3,5	;RP0=0, select bank0
  1926  008A' 1303               	bcf	3,6	;RP1=0, select bank0
  1927  008B' 1707               	bsf	7,6	;volatile
  1928                           
  1929                           ;main.c: 62: PORTCbits.RC7 = 0b1;
  1930  008C' 1787               	bsf	7,7	;volatile
  1931                           
  1932                           ;main.c: 63: PORTBbits.RB5 = 0b1;
  1933  008D' 1686               	bsf	6,5	;volatile
  1934                           
  1935                           ;main.c: 64: PORTBbits.RB4 = 0b1;
  1936  008E' 1606               	bsf	6,4	;volatile
  1937                           
  1938                           ;main.c: 65: PORTBbits.RB3 = 0b1;
  1939  008F' 1586               	bsf	6,3	;volatile
  1940                           
  1941                           ;main.c: 66: PORTBbits.RB2 = 0b1;
  1942  0090' 1506               	bsf	6,2	;volatile
  1943                           
  1944                           ;main.c: 67: PORTBbits.RB1 = 0b1;
  1945  0091' 1486               	bsf	6,1	;volatile
  1946                           
  1947                           ;main.c: 68: PORTBbits.RB0 = 0b1;
  1948  0092' 1406               	bsf	6,0	;volatile
  1949                           
  1950                           ;main.c: 70: PORTA = 0b11110111;
  1951  0093' 30F7               	movlw	247
  1952  0094' 0085               	movwf	5	;volatile
  1953                           
  1954                           ;main.c: 72: for (int thermo_sel = 1; thermo_sel < 3; thermo_sel++)
  1955  0095' 3001               	movlw	1
  1956  0096' 1683               	bsf	3,5	;RP0=1, select bank3
  1957  0097' 1703               	bsf	3,6	;RP1=1, select bank3
  1958  0098' 0080'              	movwf	main@thermo_sel^(0+384)
  1959  0099' 3000               	movlw	0
  1960  009A' 0081'              	movwf	(main@thermo_sel^(0+384)+1)
  1961  009B' 0800'              	movf	(main@thermo_sel+1)^(0+384),w
  1962  009C' 3A80               	xorlw	128
  1963  009D' 00FF               	movwf	127
  1964  009E' 3080               	movlw	128
  1965  009F' 027F               	subwf	127,w
  1966  00A0' 1D03               	skipz
  1967  00A1' 2800'              	goto	u7745
  1968  00A2' 3003               	movlw	3
  1969  00A3' 0200'              	subwf	main@thermo_sel^(0+384),w
  1970  00A4'                    u7745:	
  1971  00A4' 1803               	btfsc	3,0
  1972  00A5' 2800'              	goto	l5637
  1973  00A6'                    l5581:	
  1974                           
  1975                           ;main.c: 73: {
  1976                           ;main.c: 74: select_chip(2);
  1977  00A6' 3002               	movlw	2
  1978  00A7' 0084'              	movwf	select_chip@chip_sel
  1979  00A8' 3000               	movlw	0
  1980  00A9' 0085'              	movwf	select_chip@chip_sel+1
  1981  00AA' 120A' 118A' 2000' 120A' 118A' 	fcall	_select_chip
  1982                           
  1983                           ;main.c: 76: SSPBUF = 0b00010000;
  1984  00AF' 3010               	movlw	16
  1985  00B0' 1283               	bcf	3,5	;RP0=0, select bank0
  1986  00B1' 1303               	bcf	3,6	;RP1=0, select bank0
  1987  00B2' 0093               	movwf	19	;volatile
  1988                           
  1989                           ;main.c: 77: buf_wait();
  1990  00B3' 120A' 118A' 2000' 120A' 118A' 	fcall	_buf_wait
  1991                           
  1992                           ;main.c: 78: SSPBUF = 0b01000110;
  1993  00B8' 3046               	movlw	70
  1994  00B9' 1283               	bcf	3,5	;RP0=0, select bank0
  1995  00BA' 1303               	bcf	3,6	;RP1=0, select bank0
  1996  00BB' 0093               	movwf	19	;volatile
  1997                           
  1998                           ;main.c: 79: buf_wait();
  1999  00BC' 120A' 118A' 2000' 120A' 118A' 	fcall	_buf_wait
  2000                           
  2001                           ;main.c: 80: switch (thermo_sel)
  2002  00C1' 2800'              	goto	l5599
  2003  00C2'                    l5589:	
  2004                           ;main.c: 81: {
  2005                           ;main.c: 82: case 1:
  2006                           
  2007                           
  2008                           ;main.c: 83: SSPBUF = 0b10010000;
  2009  00C2' 3090               	movlw	144
  2010  00C3' 1283               	bcf	3,5	;RP0=0, select bank0
  2011  00C4' 1303               	bcf	3,6	;RP1=0, select bank0
  2012  00C5' 0093               	movwf	19	;volatile
  2013                           
  2014                           ;main.c: 84: buf_wait();
  2015  00C6' 120A' 118A' 2000' 120A' 118A' 	fcall	_buf_wait
  2016                           
  2017                           ;main.c: 85: break;
  2018  00CB' 2800'              	goto	l5601
  2019  00CC'                    l5593:	
  2020                           ;main.c: 86: case 2:
  2021                           
  2022                           
  2023                           ;main.c: 87: SSPBUF = 0b10010001;
  2024  00CC' 3091               	movlw	145
  2025  00CD' 1283               	bcf	3,5	;RP0=0, select bank0
  2026  00CE' 1303               	bcf	3,6	;RP1=0, select bank0
  2027  00CF' 0093               	movwf	19	;volatile
  2028                           
  2029                           ;main.c: 88: buf_wait();
  2030  00D0' 120A' 118A' 2000' 120A' 118A' 	fcall	_buf_wait
  2031                           
  2032                           ;main.c: 91: }
  2033                           
  2034                           ;main.c: 89: break;
  2035  00D5' 2800'              	goto	l5601
  2036  00D6'                    l5599:	
  2037                           
  2038                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2039                           ; Switch size 1, requested type "space"
  2040                           ; Number of cases is 1, Range of values is 0 to 0
  2041                           ; switch strategies available:
  2042                           ; Name         Instructions Cycles
  2043                           ; simple_byte            4     3 (average)
  2044                           ; direct_byte           11     8 (fixed)
  2045                           ; jumptable            260     6 (fixed)
  2046                           ;	Chosen strategy is simple_byte
  2047  00D6' 1683               	bsf	3,5	;RP0=1, select bank3
  2048  00D7' 1703               	bsf	3,6	;RP1=1, select bank3
  2049  00D8' 0800'              	movf	(main@thermo_sel+1)^(0+384),w
  2050  00D9' 3A00               	xorlw	0	; case 0
  2051  00DA' 1903               	skipnz
  2052  00DB' 2800'              	goto	l5797
  2053  00DC' 2800'              	goto	l5601
  2054  00DD'                    l5797:	
  2055                           
  2056                           ; Switch size 1, requested type "space"
  2057                           ; Number of cases is 2, Range of values is 1 to 2
  2058                           ; switch strategies available:
  2059                           ; Name         Instructions Cycles
  2060                           ; simple_byte            7     4 (average)
  2061                           ; direct_byte           17    11 (fixed)
  2062                           ; jumptable            263     9 (fixed)
  2063                           ;	Chosen strategy is simple_byte
  2064  00DD' 0800'              	movf	main@thermo_sel^(0+384),w
  2065  00DE' 3A01               	xorlw	1	; case 1
  2066  00DF' 1903               	skipnz
  2067  00E0' 2800'              	goto	l5589
  2068  00E1' 3A03               	xorlw	3	; case 2
  2069  00E2' 1903               	skipnz
  2070  00E3' 2800'              	goto	l5593
  2071  00E4' 2800'              	goto	l5601
  2072  00E5'                    l5601:	
  2073                           
  2074                           ;main.c: 93: int not_ready = 1;
  2075  00E5' 3001               	movlw	1
  2076  00E6' 1683               	bsf	3,5	;RP0=1, select bank3
  2077  00E7' 1703               	bsf	3,6	;RP1=1, select bank3
  2078  00E8' 0080'              	movwf	main@not_ready^(0+384)
  2079  00E9' 3000               	movlw	0
  2080  00EA' 0081'              	movwf	(main@not_ready^(0+384)+1)
  2081  00EB'                    l5607:	
  2082                           ;main.c: 95: while (not_ready == 1)
  2083                           
  2084  00EB' 3001               	movlw	1
  2085  00EC' 0600'              	xorwf	main@not_ready^(0+384),w
  2086  00ED' 0400'              	iorwf	(main@not_ready+1)^(0+384),w
  2087  00EE' 1D03               	btfss	3,2
  2088  00EF' 2800'              	goto	l5609
  2089                           
  2090                           ;main.c: 96: {
  2091                           ;main.c: 97: SSPBUF = 0b01000000;
  2092  00F0' 3040               	movlw	64
  2093  00F1' 1283               	bcf	3,5	;RP0=0, select bank0
  2094  00F2' 1303               	bcf	3,6	;RP1=0, select bank0
  2095  00F3' 0093               	movwf	19	;volatile
  2096                           
  2097                           ;main.c: 98: buf_wait();
  2098  00F4' 120A' 118A' 2000' 120A' 118A' 	fcall	_buf_wait
  2099                           
  2100                           ;main.c: 99: not_ready = SSPBUF/10000000;
  2101  00F9' 3000               	movlw	0
  2102  00FA' 1283               	bcf	3,5	;RP0=0, select bank0
  2103  00FB' 1303               	bcf	3,6	;RP1=0, select bank0
  2104  00FC' 0083'              	movwf	___aldiv@divisor+3
  2105  00FD' 3098               	movlw	152
  2106  00FE' 0082'              	movwf	___aldiv@divisor+2
  2107  00FF' 3096               	movlw	150
  2108  0100' 0081'              	movwf	___aldiv@divisor+1
  2109  0101' 3080               	movlw	128
  2110  0102' 0080'              	movwf	___aldiv@divisor
  2111  0103' 0813               	movf	19,w	;volatile
  2112  0104' 1683               	bsf	3,5	;RP0=1, select bank3
  2113  0105' 1703               	bsf	3,6	;RP1=1, select bank3
  2114  0106' 0080'              	movwf	??_main^(0+384)
  2115  0107' 0181'              	clrf	(??_main^(0+384)+1)
  2116  0108' 0182'              	clrf	(??_main^(0+384)+2)
  2117  0109' 0183'              	clrf	(??_main^(0+384)+3)
  2118  010A' 0800'              	movf	(??_main+3)^(0+384),w
  2119  010B' 1283               	bcf	3,5	;RP0=0, select bank0
  2120  010C' 1303               	bcf	3,6	;RP1=0, select bank0
  2121  010D' 0087'              	movwf	___aldiv@dividend+3
  2122  010E' 1683               	bsf	3,5	;RP0=1, select bank3
  2123  010F' 1703               	bsf	3,6	;RP1=1, select bank3
  2124  0110' 0800'              	movf	(??_main+2)^(0+384),w
  2125  0111' 1283               	bcf	3,5	;RP0=0, select bank0
  2126  0112' 1303               	bcf	3,6	;RP1=0, select bank0
  2127  0113' 0086'              	movwf	___aldiv@dividend+2
  2128  0114' 1683               	bsf	3,5	;RP0=1, select bank3
  2129  0115' 1703               	bsf	3,6	;RP1=1, select bank3
  2130  0116' 0800'              	movf	(??_main+1)^(0+384),w
  2131  0117' 1283               	bcf	3,5	;RP0=0, select bank0
  2132  0118' 1303               	bcf	3,6	;RP1=0, select bank0
  2133  0119' 0085'              	movwf	___aldiv@dividend+1
  2134  011A' 1683               	bsf	3,5	;RP0=1, select bank3
  2135  011B' 1703               	bsf	3,6	;RP1=1, select bank3
  2136  011C' 0800'              	movf	??_main^(0+384),w
  2137  011D' 1283               	bcf	3,5	;RP0=0, select bank0
  2138  011E' 1303               	bcf	3,6	;RP1=0, select bank0
  2139  011F' 0084'              	movwf	___aldiv@dividend
  2140  0120' 120A' 118A' 2000' 120A' 118A' 	fcall	___aldiv
  2141  0125' 1283               	bcf	3,5	;RP0=0, select bank0
  2142  0126' 1303               	bcf	3,6	;RP1=0, select bank0
  2143  0127' 0801'              	movf	?___aldiv+1,w
  2144  0128' 1683               	bsf	3,5	;RP0=1, select bank3
  2145  0129' 1703               	bsf	3,6	;RP1=1, select bank3
  2146  012A' 0180'              	clrf	(main@not_ready+1)^(0+384)
  2147  012B' 0780'              	addwf	(main@not_ready+1)^(0+384),f
  2148  012C' 1283               	bcf	3,5	;RP0=0, select bank0
  2149  012D' 1303               	bcf	3,6	;RP1=0, select bank0
  2150  012E' 0800'              	movf	?___aldiv,w
  2151  012F' 1683               	bsf	3,5	;RP0=1, select bank3
  2152  0130' 1703               	bsf	3,6	;RP1=1, select bank3
  2153  0131' 0180'              	clrf	main@not_ready^(0+384)
  2154  0132' 0780'              	addwf	main@not_ready^(0+384),f
  2155  0133' 2800'              	goto	l5607
  2156  0134'                    l5609:	
  2157                           
  2158                           ;main.c: 100: }
  2159                           ;main.c: 102: SSPBUF = 0b01011000;
  2160  0134' 3058               	movlw	88
  2161  0135' 1283               	bcf	3,5	;RP0=0, select bank0
  2162  0136' 1303               	bcf	3,6	;RP1=0, select bank0
  2163  0137' 0093               	movwf	19	;volatile
  2164                           
  2165                           ;main.c: 103: buf_wait();
  2166  0138' 120A' 118A' 2000' 120A' 118A' 	fcall	_buf_wait
  2167                           
  2168                           ;main.c: 105: float thermo_v = 0;
  2169  013D' 3000               	movlw	0
  2170  013E' 1683               	bsf	3,5	;RP0=1, select bank3
  2171  013F' 1703               	bsf	3,6	;RP1=1, select bank3
  2172  0140' 0080'              	movwf	main@thermo_v^(0+384)
  2173  0141' 3000               	movlw	0
  2174  0142' 0080'              	movwf	(main@thermo_v+1)^(0+384)
  2175  0143' 3000               	movlw	0
  2176  0144' 0080'              	movwf	(main@thermo_v+2)^(0+384)
  2177                           
  2178                           ;main.c: 106: for (int i=0; i<3; i++)
  2179  0145' 0180'              	clrf	main@i^(0+384)
  2180  0146' 0180'              	clrf	(main@i+1)^(0+384)
  2181  0147' 0800'              	movf	(main@i+1)^(0+384),w
  2182  0148' 3A80               	xorlw	128
  2183  0149' 00FF               	movwf	127
  2184  014A' 3080               	movlw	128
  2185  014B' 027F               	subwf	127,w
  2186  014C' 1D03               	skipz
  2187  014D' 2800'              	goto	u7765
  2188  014E' 3003               	movlw	3
  2189  014F' 0200'              	subwf	main@i^(0+384),w
  2190  0150'                    u7765:	
  2191  0150' 1803               	btfsc	3,0
  2192  0151' 2800'              	goto	l5625
  2193  0152'                    l5621:	
  2194                           
  2195                           ;main.c: 107: {
  2196  0152' 3001               	movlw	1
  2197  0153' 1683               	bsf	3,5	;RP0=1, select bank3
  2198  0154' 1703               	bsf	3,6	;RP1=1, select bank3
  2199  0155' 0780'              	addwf	main@i^(0+384),f
  2200  0156' 1803               	skipnc
  2201  0157' 0A80'              	incf	(main@i+1)^(0+384),f
  2202  0158' 3000               	movlw	0
  2203  0159' 0780'              	addwf	(main@i+1)^(0+384),f
  2204  015A' 0800'              	movf	(main@i+1)^(0+384),w
  2205  015B' 3A80               	xorlw	128
  2206  015C' 00FF               	movwf	127
  2207  015D' 3080               	movlw	128
  2208  015E' 027F               	subwf	127,w
  2209  015F' 1D03               	skipz
  2210  0160' 2800'              	goto	u7775
  2211  0161' 3003               	movlw	3
  2212  0162' 0200'              	subwf	main@i^(0+384),w
  2213  0163'                    u7775:	
  2214  0163' 1C03               	skipc
  2215  0164' 2800'              	goto	l5621
  2216  0165'                    l5625:	
  2217                           
  2218                           ;main.c: 109: }
  2219                           ;main.c: 111: junc_temp = (binary_decimal(junc_bin))/16.0;
  2220  0165' 1683               	bsf	3,5	;RP0=1, select bank3
  2221  0166' 1703               	bsf	3,6	;RP1=1, select bank3
  2222  0167' 0800'              	movf	(main@junc_bin+1)^(0+384),w
  2223  0168' 1683               	bsf	3,5	;RP0=1, select bank1
  2224  0169' 1303               	bcf	3,6	;RP1=0, select bank1
  2225  016A' 0180'              	clrf	(binary_decimal@n+1)^(0+128)
  2226  016B' 0780'              	addwf	(binary_decimal@n+1)^(0+128),f
  2227  016C' 1683               	bsf	3,5	;RP0=1, select bank3
  2228  016D' 1703               	bsf	3,6	;RP1=1, select bank3
  2229  016E' 0800'              	movf	main@junc_bin^(0+384),w
  2230  016F' 1683               	bsf	3,5	;RP0=1, select bank1
  2231  0170' 1303               	bcf	3,6	;RP1=0, select bank1
  2232  0171' 0180'              	clrf	binary_decimal@n^(0+128)
  2233  0172' 0780'              	addwf	binary_decimal@n^(0+128),f
  2234  0173' 120A' 118A' 2000' 120A' 118A' 	fcall	_binary_decimal
  2235  0178' 1683               	bsf	3,5	;RP0=1, select bank1
  2236  0179' 1303               	bcf	3,6	;RP1=0, select bank1
  2237  017A' 0800'              	movf	(?_binary_decimal+1)^(0+128),w
  2238  017B' 1683               	bsf	3,5	;RP0=1, select bank3
  2239  017C' 1703               	bsf	3,6	;RP1=1, select bank3
  2240  017D' 0180'              	clrf	(_main$1004+1)^(0+384)
  2241  017E' 0780'              	addwf	(_main$1004+1)^(0+384),f
  2242  017F' 1683               	bsf	3,5	;RP0=1, select bank1
  2243  0180' 1303               	bcf	3,6	;RP1=0, select bank1
  2244  0181' 0800'              	movf	?_binary_decimal^(0+128),w
  2245  0182' 1683               	bsf	3,5	;RP0=1, select bank3
  2246  0183' 1703               	bsf	3,6	;RP1=1, select bank3
  2247  0184' 0180'              	clrf	_main$1004^(0+384)
  2248  0185' 0780'              	addwf	_main$1004^(0+384),f
  2249                           
  2250                           ;main.c: 109: }
  2251                           ;main.c: 111: junc_temp = (binary_decimal(junc_bin))/16.0;
  2252  0186' 3000               	movlw	0
  2253  0187' 1283               	bcf	3,5	;RP0=0, select bank0
  2254  0188' 1303               	bcf	3,6	;RP1=0, select bank0
  2255  0189' 008A'              	movwf	___ftdiv@f2
  2256  018A' 3080               	movlw	128
  2257  018B' 008B'              	movwf	___ftdiv@f2+1
  2258  018C' 3041               	movlw	65
  2259  018D' 008C'              	movwf	___ftdiv@f2+2
  2260  018E' 1683               	bsf	3,5	;RP0=1, select bank3
  2261  018F' 1703               	bsf	3,6	;RP1=1, select bank3
  2262  0190' 0800'              	movf	(_main$1004+1)^(0+384),w
  2263  0191' 1283               	bcf	3,5	;RP0=0, select bank0
  2264  0192' 1303               	bcf	3,6	;RP1=0, select bank0
  2265  0193' 0186'              	clrf	___awtoft@c+1
  2266  0194' 0786'              	addwf	___awtoft@c+1,f
  2267  0195' 1683               	bsf	3,5	;RP0=1, select bank3
  2268  0196' 1703               	bsf	3,6	;RP1=1, select bank3
  2269  0197' 0800'              	movf	_main$1004^(0+384),w
  2270  0198' 1283               	bcf	3,5	;RP0=0, select bank0
  2271  0199' 1303               	bcf	3,6	;RP1=0, select bank0
  2272  019A' 0185'              	clrf	___awtoft@c
  2273  019B' 0785'              	addwf	___awtoft@c,f
  2274  019C' 120A' 118A' 2000' 120A' 118A' 	fcall	___awtoft
  2275  01A1' 1283               	bcf	3,5	;RP0=0, select bank0
  2276  01A2' 1303               	bcf	3,6	;RP1=0, select bank0
  2277  01A3' 0805'              	movf	?___awtoft,w
  2278  01A4' 008D'              	movwf	___ftdiv@f1
  2279  01A5' 0806'              	movf	?___awtoft+1,w
  2280  01A6' 008E'              	movwf	___ftdiv@f1+1
  2281  01A7' 0807'              	movf	?___awtoft+2,w
  2282  01A8' 008F'              	movwf	___ftdiv@f1+2
  2283  01A9' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftdiv
  2284  01AE' 1283               	bcf	3,5	;RP0=0, select bank0
  2285  01AF' 1303               	bcf	3,6	;RP1=0, select bank0
  2286  01B0' 080A'              	movf	?___ftdiv,w
  2287  01B1' 1683               	bsf	3,5	;RP0=1, select bank3
  2288  01B2' 1703               	bsf	3,6	;RP1=1, select bank3
  2289  01B3' 0080'              	movwf	main@junc_temp^(0+384)
  2290  01B4' 1283               	bcf	3,5	;RP0=0, select bank0
  2291  01B5' 1303               	bcf	3,6	;RP1=0, select bank0
  2292  01B6' 080B'              	movf	?___ftdiv+1,w
  2293  01B7' 1683               	bsf	3,5	;RP0=1, select bank3
  2294  01B8' 1703               	bsf	3,6	;RP1=1, select bank3
  2295  01B9' 0080'              	movwf	(main@junc_temp+1)^(0+384)
  2296  01BA' 1283               	bcf	3,5	;RP0=0, select bank0
  2297  01BB' 1303               	bcf	3,6	;RP1=0, select bank0
  2298  01BC' 080C'              	movf	?___ftdiv+2,w
  2299  01BD' 1683               	bsf	3,5	;RP0=1, select bank3
  2300  01BE' 1703               	bsf	3,6	;RP1=1, select bank3
  2301  01BF' 0080'              	movwf	(main@junc_temp+2)^(0+384)
  2302                           
  2303                           ;main.c: 115: float tc = temp_voltage(junc_temp) + thermo_v;
  2304  01C0' 0800'              	movf	main@junc_temp^(0+384),w
  2305  01C1' 1683               	bsf	3,5	;RP0=1, select bank1
  2306  01C2' 1303               	bcf	3,6	;RP1=0, select bank1
  2307  01C3' 0080'              	movwf	temp_voltage@temp^(0+128)
  2308  01C4' 1683               	bsf	3,5	;RP0=1, select bank3
  2309  01C5' 1703               	bsf	3,6	;RP1=1, select bank3
  2310  01C6' 0800'              	movf	(main@junc_temp+1)^(0+384),w
  2311  01C7' 1683               	bsf	3,5	;RP0=1, select bank1
  2312  01C8' 1303               	bcf	3,6	;RP1=0, select bank1
  2313  01C9' 0080'              	movwf	(temp_voltage@temp+1)^(0+128)
  2314  01CA' 1683               	bsf	3,5	;RP0=1, select bank3
  2315  01CB' 1703               	bsf	3,6	;RP1=1, select bank3
  2316  01CC' 0800'              	movf	(main@junc_temp+2)^(0+384),w
  2317  01CD' 1683               	bsf	3,5	;RP0=1, select bank1
  2318  01CE' 1303               	bcf	3,6	;RP1=0, select bank1
  2319  01CF' 0080'              	movwf	(temp_voltage@temp+2)^(0+128)
  2320  01D0' 120A' 118A' 2000' 120A' 118A' 	fcall	_temp_voltage
  2321  01D5' 1683               	bsf	3,5	;RP0=1, select bank1
  2322  01D6' 1303               	bcf	3,6	;RP1=0, select bank1
  2323  01D7' 0800'              	movf	?_temp_voltage^(0+128),w
  2324  01D8' 1683               	bsf	3,5	;RP0=1, select bank3
  2325  01D9' 1703               	bsf	3,6	;RP1=1, select bank3
  2326  01DA' 0080'              	movwf	_main$1005^(0+384)
  2327  01DB' 1683               	bsf	3,5	;RP0=1, select bank1
  2328  01DC' 1303               	bcf	3,6	;RP1=0, select bank1
  2329  01DD' 0800'              	movf	(?_temp_voltage+1)^(0+128),w
  2330  01DE' 1683               	bsf	3,5	;RP0=1, select bank3
  2331  01DF' 1703               	bsf	3,6	;RP1=1, select bank3
  2332  01E0' 0080'              	movwf	(_main$1005+1)^(0+384)
  2333  01E1' 1683               	bsf	3,5	;RP0=1, select bank1
  2334  01E2' 1303               	bcf	3,6	;RP1=0, select bank1
  2335  01E3' 0800'              	movf	(?_temp_voltage+2)^(0+128),w
  2336  01E4' 1683               	bsf	3,5	;RP0=1, select bank3
  2337  01E5' 1703               	bsf	3,6	;RP1=1, select bank3
  2338  01E6' 0080'              	movwf	(_main$1005+2)^(0+384)
  2339                           
  2340                           ;main.c: 115: float tc = temp_voltage(junc_temp) + thermo_v;
  2341  01E7' 0800'              	movf	main@thermo_v^(0+384),w
  2342  01E8' 1283               	bcf	3,5	;RP0=0, select bank0
  2343  01E9' 1303               	bcf	3,6	;RP1=0, select bank0
  2344  01EA' 00B0'              	movwf	___ftadd@f1
  2345  01EB' 1683               	bsf	3,5	;RP0=1, select bank3
  2346  01EC' 1703               	bsf	3,6	;RP1=1, select bank3
  2347  01ED' 0800'              	movf	(main@thermo_v+1)^(0+384),w
  2348  01EE' 1283               	bcf	3,5	;RP0=0, select bank0
  2349  01EF' 1303               	bcf	3,6	;RP1=0, select bank0
  2350  01F0' 00B1'              	movwf	___ftadd@f1+1
  2351  01F1' 1683               	bsf	3,5	;RP0=1, select bank3
  2352  01F2' 1703               	bsf	3,6	;RP1=1, select bank3
  2353  01F3' 0800'              	movf	(main@thermo_v+2)^(0+384),w
  2354  01F4' 1283               	bcf	3,5	;RP0=0, select bank0
  2355  01F5' 1303               	bcf	3,6	;RP1=0, select bank0
  2356  01F6' 00B2'              	movwf	___ftadd@f1+2
  2357  01F7' 1683               	bsf	3,5	;RP0=1, select bank3
  2358  01F8' 1703               	bsf	3,6	;RP1=1, select bank3
  2359  01F9' 0800'              	movf	_main$1005^(0+384),w
  2360  01FA' 1283               	bcf	3,5	;RP0=0, select bank0
  2361  01FB' 1303               	bcf	3,6	;RP1=0, select bank0
  2362  01FC' 00B3'              	movwf	___ftadd@f2
  2363  01FD' 1683               	bsf	3,5	;RP0=1, select bank3
  2364  01FE' 1703               	bsf	3,6	;RP1=1, select bank3
  2365  01FF' 0800'              	movf	(_main$1005+1)^(0+384),w
  2366  0200' 1283               	bcf	3,5	;RP0=0, select bank0
  2367  0201' 1303               	bcf	3,6	;RP1=0, select bank0
  2368  0202' 00B4'              	movwf	___ftadd@f2+1
  2369  0203' 1683               	bsf	3,5	;RP0=1, select bank3
  2370  0204' 1703               	bsf	3,6	;RP1=1, select bank3
  2371  0205' 0800'              	movf	(_main$1005+2)^(0+384),w
  2372  0206' 1283               	bcf	3,5	;RP0=0, select bank0
  2373  0207' 1303               	bcf	3,6	;RP1=0, select bank0
  2374  0208' 00B5'              	movwf	___ftadd@f2+2
  2375  0209' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftadd
  2376  020E' 1283               	bcf	3,5	;RP0=0, select bank0
  2377  020F' 1303               	bcf	3,6	;RP1=0, select bank0
  2378  0210' 0830'              	movf	?___ftadd,w
  2379  0211' 1683               	bsf	3,5	;RP0=1, select bank3
  2380  0212' 1703               	bsf	3,6	;RP1=1, select bank3
  2381  0213' 0080'              	movwf	main@tc^(0+384)
  2382  0214' 1283               	bcf	3,5	;RP0=0, select bank0
  2383  0215' 1303               	bcf	3,6	;RP1=0, select bank0
  2384  0216' 0831'              	movf	?___ftadd+1,w
  2385  0217' 1683               	bsf	3,5	;RP0=1, select bank3
  2386  0218' 1703               	bsf	3,6	;RP1=1, select bank3
  2387  0219' 0080'              	movwf	(main@tc+1)^(0+384)
  2388  021A' 1283               	bcf	3,5	;RP0=0, select bank0
  2389  021B' 1303               	bcf	3,6	;RP1=0, select bank0
  2390  021C' 0832'              	movf	?___ftadd+2,w
  2391  021D' 1683               	bsf	3,5	;RP0=1, select bank3
  2392  021E' 1703               	bsf	3,6	;RP1=1, select bank3
  2393  021F' 0080'              	movwf	(main@tc+2)^(0+384)
  2394                           
  2395                           ;main.c: 117: seven_segment(voltage_temp(tc), thermo_sel);
  2396  0220' 0800'              	movf	main@tc^(0+384),w
  2397  0221' 1683               	bsf	3,5	;RP0=1, select bank1
  2398  0222' 1303               	bcf	3,6	;RP1=0, select bank1
  2399  0223' 0080'              	movwf	voltage_temp@millivolt^(0+128)
  2400  0224' 1683               	bsf	3,5	;RP0=1, select bank3
  2401  0225' 1703               	bsf	3,6	;RP1=1, select bank3
  2402  0226' 0800'              	movf	(main@tc+1)^(0+384),w
  2403  0227' 1683               	bsf	3,5	;RP0=1, select bank1
  2404  0228' 1303               	bcf	3,6	;RP1=0, select bank1
  2405  0229' 0080'              	movwf	(voltage_temp@millivolt+1)^(0+128)
  2406  022A' 1683               	bsf	3,5	;RP0=1, select bank3
  2407  022B' 1703               	bsf	3,6	;RP1=1, select bank3
  2408  022C' 0800'              	movf	(main@tc+2)^(0+384),w
  2409  022D' 1683               	bsf	3,5	;RP0=1, select bank1
  2410  022E' 1303               	bcf	3,6	;RP1=0, select bank1
  2411  022F' 0080'              	movwf	(voltage_temp@millivolt+2)^(0+128)
  2412  0230' 120A' 118A' 2000' 120A' 118A' 	fcall	_voltage_temp
  2413  0235' 1683               	bsf	3,5	;RP0=1, select bank1
  2414  0236' 1303               	bcf	3,6	;RP1=0, select bank1
  2415  0237' 0800'              	movf	?_voltage_temp^(0+128),w
  2416  0238' 1683               	bsf	3,5	;RP0=1, select bank3
  2417  0239' 1703               	bsf	3,6	;RP1=1, select bank3
  2418  023A' 0080'              	movwf	seven_segment@number^(0+384)
  2419  023B' 1683               	bsf	3,5	;RP0=1, select bank1
  2420  023C' 1303               	bcf	3,6	;RP1=0, select bank1
  2421  023D' 0800'              	movf	(?_voltage_temp+1)^(0+128),w
  2422  023E' 1683               	bsf	3,5	;RP0=1, select bank3
  2423  023F' 1703               	bsf	3,6	;RP1=1, select bank3
  2424  0240' 0080'              	movwf	(seven_segment@number+1)^(0+384)
  2425  0241' 1683               	bsf	3,5	;RP0=1, select bank1
  2426  0242' 1303               	bcf	3,6	;RP1=0, select bank1
  2427  0243' 0800'              	movf	(?_voltage_temp+2)^(0+128),w
  2428  0244' 1683               	bsf	3,5	;RP0=1, select bank3
  2429  0245' 1703               	bsf	3,6	;RP1=1, select bank3
  2430  0246' 0080'              	movwf	(seven_segment@number+2)^(0+384)
  2431  0247' 0800'              	movf	(main@thermo_sel+1)^(0+384),w
  2432  0248' 0180'              	clrf	(seven_segment@sel+1)^(0+384)
  2433  0249' 0780'              	addwf	(seven_segment@sel+1)^(0+384),f
  2434  024A' 0800'              	movf	main@thermo_sel^(0+384),w
  2435  024B' 0180'              	clrf	seven_segment@sel^(0+384)
  2436  024C' 0780'              	addwf	seven_segment@sel^(0+384),f
  2437  024D' 120A' 118A' 2000' 120A' 118A' 	fcall	_seven_segment
  2438  0252' 3001               	movlw	1
  2439  0253' 1683               	bsf	3,5	;RP0=1, select bank3
  2440  0254' 1703               	bsf	3,6	;RP1=1, select bank3
  2441  0255' 0780'              	addwf	main@thermo_sel^(0+384),f
  2442  0256' 1803               	skipnc
  2443  0257' 0A80'              	incf	(main@thermo_sel+1)^(0+384),f
  2444  0258' 3000               	movlw	0
  2445  0259' 0780'              	addwf	(main@thermo_sel+1)^(0+384),f
  2446  025A' 0800'              	movf	(main@thermo_sel+1)^(0+384),w
  2447  025B' 3A80               	xorlw	128
  2448  025C' 00FF               	movwf	127
  2449  025D' 3080               	movlw	128
  2450  025E' 027F               	subwf	127,w
  2451  025F' 1D03               	skipz
  2452  0260' 2800'              	goto	u7785
  2453  0261' 3003               	movlw	3
  2454  0262' 0200'              	subwf	main@thermo_sel^(0+384),w
  2455  0263'                    u7785:	
  2456  0263' 1C03               	skipc
  2457  0264' 2800'              	goto	l5581
  2458  0265'                    l5637:	
  2459                           
  2460                           ;main.c: 118: }
  2461                           ;main.c: 120: loop_counter++;
  2462  0265' 3001               	movlw	1
  2463  0266' 1683               	bsf	3,5	;RP0=1, select bank3
  2464  0267' 1703               	bsf	3,6	;RP1=1, select bank3
  2465  0268' 0780'              	addwf	main@loop_counter^(0+384),f
  2466  0269' 1803               	skipnc
  2467  026A' 0A80'              	incf	(main@loop_counter+1)^(0+384),f
  2468  026B' 3000               	movlw	0
  2469  026C' 0780'              	addwf	(main@loop_counter+1)^(0+384),f
  2470                           
  2471                           ;main.c: 122: if (loop_counter > 100)
  2472  026D' 0800'              	movf	(main@loop_counter+1)^(0+384),w
  2473  026E' 3A80               	xorlw	128
  2474  026F' 00FF               	movwf	127
  2475  0270' 3080               	movlw	128
  2476  0271' 027F               	subwf	127,w
  2477  0272' 1D03               	skipz
  2478  0273' 2800'              	goto	u7795
  2479  0274' 3065               	movlw	101
  2480  0275' 0200'              	subwf	main@loop_counter^(0+384),w
  2481  0276'                    u7795:	
  2482  0276' 1C03               	skipc
  2483  0277' 2800'              	goto	l5651
  2484                           
  2485                           ;main.c: 123: {
  2486                           ;main.c: 124: loop_counter = 0;
  2487  0278' 1683               	bsf	3,5	;RP0=1, select bank3
  2488  0279' 1703               	bsf	3,6	;RP1=1, select bank3
  2489  027A' 0180'              	clrf	main@loop_counter^(0+384)
  2490  027B' 0180'              	clrf	(main@loop_counter+1)^(0+384)
  2491                           
  2492                           ;main.c: 125: select_chip(1);
  2493  027C' 3001               	movlw	1
  2494  027D' 0084'              	movwf	select_chip@chip_sel
  2495  027E' 3000               	movlw	0
  2496  027F' 0085'              	movwf	select_chip@chip_sel+1
  2497  0280' 120A' 118A' 2000' 120A' 118A' 	fcall	_select_chip
  2498                           
  2499                           ;main.c: 126: SSPBUF = 0b01010000;
  2500  0285' 3050               	movlw	80
  2501  0286' 1283               	bcf	3,5	;RP0=0, select bank0
  2502  0287' 1303               	bcf	3,6	;RP1=0, select bank0
  2503  0288' 0093               	movwf	19	;volatile
  2504                           
  2505                           ;main.c: 127: buf_wait();
  2506  0289' 120A' 118A' 2000' 120A' 118A' 	fcall	_buf_wait
  2507                           
  2508                           ;main.c: 128: junc_bin = SSPBUF;
  2509  028E' 1283               	bcf	3,5	;RP0=0, select bank0
  2510  028F' 1303               	bcf	3,6	;RP1=0, select bank0
  2511  0290' 0813               	movf	19,w	;volatile
  2512  0291' 1683               	bsf	3,5	;RP0=1, select bank3
  2513  0292' 1703               	bsf	3,6	;RP1=1, select bank3
  2514  0293' 0080'              	movwf	??_main^(0+384)
  2515  0294' 0181'              	clrf	(??_main^(0+384)+1)
  2516  0295' 0800'              	movf	??_main^(0+384),w
  2517  0296' 0080'              	movwf	main@junc_bin^(0+384)
  2518  0297' 0800'              	movf	(??_main+1)^(0+384),w
  2519  0298' 0080'              	movwf	(main@junc_bin+1)^(0+384)
  2520  0299'                    l5651:	
  2521                           
  2522                           ;main.c: 129: }
  2523                           ;main.c: 131: char* str = display_number(216.98);
  2524  0299' 30FB               	movlw	251
  2525  029A' 1283               	bcf	3,5	;RP0=0, select bank0
  2526  029B' 1303               	bcf	3,6	;RP1=0, select bank0
  2527  029C' 00CD'              	movwf	display_number@number
  2528  029D' 3058               	movlw	88
  2529  029E' 00CE'              	movwf	display_number@number+1
  2530  029F' 3043               	movlw	67
  2531  02A0' 00CF'              	movwf	display_number@number+2
  2532  02A1' 120A' 118A' 2000' 120A' 118A' 	fcall	_display_number
  2533  02A6' 1683               	bsf	3,5	;RP0=1, select bank3
  2534  02A7' 1703               	bsf	3,6	;RP1=1, select bank3
  2535  02A8' 0080'              	movwf	??_main^(0+384)
  2536  02A9' 0800'              	movf	??_main^(0+384),w
  2537  02AA' 0080'              	movwf	main@str^(0+384)
  2538                           
  2539                           ;main.c: 132: char strval[5];
  2540                           ;main.c: 133: for (int i=0; i<6; i++) {strval[i] = *(str+i);}
  2541  02AB' 0180'              	clrf	main@i_135^(0+384)
  2542  02AC' 0180'              	clrf	(main@i_135+1)^(0+384)
  2543  02AD' 0800'              	movf	(main@i_135+1)^(0+384),w
  2544  02AE' 3A80               	xorlw	128
  2545  02AF' 00FF               	movwf	127
  2546  02B0' 3080               	movlw	128
  2547  02B1' 027F               	subwf	127,w
  2548  02B2' 1D03               	skipz
  2549  02B3' 2800'              	goto	u7805
  2550  02B4' 3006               	movlw	6
  2551  02B5' 0200'              	subwf	main@i_135^(0+384),w
  2552  02B6'                    u7805:	
  2553  02B6' 1803               	btfsc	3,0
  2554  02B7' 2800'              	goto	l5665
  2555  02B8'                    l5659:	
  2556  02B8' 1683               	bsf	3,5	;RP0=1, select bank3
  2557  02B9' 1703               	bsf	3,6	;RP1=1, select bank3
  2558  02BA' 0800'              	movf	main@i_135^(0+384),w
  2559  02BB' 0700'              	addwf	main@str^(0+384),w
  2560  02BC' 0080'              	movwf	??_main^(0+384)
  2561  02BD' 0800'              	movf	??_main^(0+384),w
  2562  02BE' 0084               	movwf	4
  2563  02BF' 1783               	bsf	3,7	;select IRP bank2
  2564  02C0' 0800               	movf	0,w
  2565  02C1' 0080'              	movwf	(??_main+1)^(0+384)
  2566  02C2' 0800'              	movf	main@i_135^(0+384),w
  2567  02C3' 3E00'              	addlw	main@strval& (0+255)
  2568  02C4' 0084               	movwf	4
  2569  02C5' 0800'              	movf	(??_main+1)^(0+384),w
  2570  02C6' 0080               	movwf	0
  2571  02C7' 3001               	movlw	1
  2572  02C8' 0780'              	addwf	main@i_135^(0+384),f
  2573  02C9' 1803               	skipnc
  2574  02CA' 0A80'              	incf	(main@i_135+1)^(0+384),f
  2575  02CB' 3000               	movlw	0
  2576  02CC' 0780'              	addwf	(main@i_135+1)^(0+384),f
  2577  02CD' 0800'              	movf	(main@i_135+1)^(0+384),w
  2578  02CE' 3A80               	xorlw	128
  2579  02CF' 00FF               	movwf	127
  2580  02D0' 3080               	movlw	128
  2581  02D1' 027F               	subwf	127,w
  2582  02D2' 1D03               	skipz
  2583  02D3' 2800'              	goto	u7815
  2584  02D4' 3006               	movlw	6
  2585  02D5' 0200'              	subwf	main@i_135^(0+384),w
  2586  02D6'                    u7815:	
  2587  02D6' 1C03               	skipc
  2588  02D7' 2800'              	goto	l5659
  2589  02D8'                    l5665:	
  2590                           
  2591                           ;main.c: 134: char digit = strval[0];
  2592  02D8' 1683               	bsf	3,5	;RP0=1, select bank3
  2593  02D9' 1703               	bsf	3,6	;RP1=1, select bank3
  2594  02DA' 0800'              	movf	main@strval^(0+384),w
  2595  02DB' 0080'              	movwf	??_main^(0+384)
  2596  02DC' 0800'              	movf	??_main^(0+384),w
  2597  02DD' 0080'              	movwf	main@digit^(0+384)
  2598                           
  2599                           ;main.c: 135: int val = 5;
  2600  02DE' 3005               	movlw	5
  2601  02DF' 0080'              	movwf	main@val^(0+384)
  2602  02E0' 3000               	movlw	0
  2603  02E1' 0081'              	movwf	(main@val^(0+384)+1)
  2604                           
  2605                           ;main.c: 136: switch (digit) {
  2606  02E2' 2800'              	goto	l5675
  2607  02E3'                    l5667:	
  2608                           ;main.c: 137: case 0x30:
  2609                           
  2610                           
  2611                           ;main.c: 138: val = 0;
  2612  02E3' 0180'              	clrf	main@val^(0+384)
  2613  02E4' 0180'              	clrf	(main@val+1)^(0+384)
  2614                           
  2615                           ;main.c: 139: break;
  2616  02E5' 2800'              	goto	l5677
  2617  02E6'                    l5669:	
  2618                           ;main.c: 140: case 0x31:
  2619                           
  2620                           
  2621                           ;main.c: 141: val = 1;
  2622  02E6' 3001               	movlw	1
  2623  02E7' 2800'              	goto	L1
  2624  02E8'                    l5671:	
  2625                           ;main.c: 143: case 0x32:
  2626                           
  2627                           ;main.c: 142: break;
  2628                           
  2629                           
  2630                           ;main.c: 144: val = 2;
  2631  02E8' 3002               	movlw	2
  2632  02E9'                    L1:	
  2633  02E9' 0080'              	movwf	main@val^(0+384)
  2634  02EA' 3000               	movlw	0
  2635  02EB' 0081'              	movwf	(main@val^(0+384)+1)
  2636                           
  2637                           ;main.c: 146: }
  2638                           
  2639                           ;main.c: 145: break;
  2640  02EC' 2800'              	goto	l5677
  2641  02ED'                    l5675:	
  2642  02ED' 0800'              	movf	main@digit^(0+384),w
  2643                           
  2644                           ; Switch size 1, requested type "space"
  2645                           ; Number of cases is 3, Range of values is 48 to 50
  2646                           ; switch strategies available:
  2647                           ; Name         Instructions Cycles
  2648                           ; simple_byte           10     6 (average)
  2649                           ; direct_byte           20    11 (fixed)
  2650                           ; jumptable            263     9 (fixed)
  2651                           ;	Chosen strategy is simple_byte
  2652  02EE' 3A30               	xorlw	48	; case 48
  2653  02EF' 1903               	skipnz
  2654  02F0' 2800'              	goto	l5667
  2655  02F1' 3A01               	xorlw	1	; case 49
  2656  02F2' 1903               	skipnz
  2657  02F3' 2800'              	goto	l5669
  2658  02F4' 3A03               	xorlw	3	; case 50
  2659  02F5' 1903               	skipnz
  2660  02F6' 2800'              	goto	l5671
  2661  02F7' 2800'              	goto	l5677
  2662  02F8'                    l5677:	
  2663                           
  2664                           ;main.c: 147: int result = val;
  2665  02F8' 0800'              	movf	(main@val+1)^(0+384),w
  2666  02F9' 0180'              	clrf	(main@result+1)^(0+384)
  2667  02FA' 0780'              	addwf	(main@result+1)^(0+384),f
  2668  02FB' 0800'              	movf	main@val^(0+384),w
  2669  02FC' 0180'              	clrf	main@result^(0+384)
  2670  02FD' 0780'              	addwf	main@result^(0+384),f
  2671  02FE' 2800'              	goto	l5557
  2672  02FF'                    __end_of_main:	
  2673                           
  2674                           	psect	text1
  2675  0000'                    __ptext1:	
  2676 ;; *************** function _voltage_temp *****************
  2677 ;; Defined at:
  2678 ;;		line 315 in file "user.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  millivolt       3   32[BANK1 ] float 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  i               2   75[BANK1 ] int 
  2683 ;;  c_const        24   39[BANK1 ] float [8]
  2684 ;;  temp            3   72[BANK1 ] float 
  2685 ;;  microvolt       3   63[BANK1 ] float 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  3   32[BANK1 ] float 
  2688 ;; Registers used:
  2689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2695 ;;      Params:         0       0       3       0       0
  2696 ;;      Locals:         0       0      38       0       0
  2697 ;;      Temps:          0       0       4       0       0
  2698 ;;      Totals:         0       0      45       0       0
  2699 ;;Total ram usage:       45 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    6
  2702 ;; This function calls:
  2703 ;;		___awtoft
  2704 ;;		___bmul
  2705 ;;		___ftadd
  2706 ;;		___ftmul
  2707 ;;		_pow
  2708 ;; This function is called by:
  2709 ;;		_main
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           
  2714                           ;psect for function _voltage_temp
  2715  0000'                    _voltage_temp:	
  2716                           
  2717                           ;user.c: 317: float c_const[8] = {2.5173462E-2,
  2718                           ;user.c: 318: -1.1662878E-6,
  2719                           ;user.c: 319: -1.0833638E-9,
  2720                           ;user.c: 320: -8.9773540E-13,
  2721                           ;user.c: 321: -3.7342377E-16,
  2722                           ;user.c: 322: -8.6632643E-20,
  2723                           ;user.c: 323: -1.0450598E-23,
  2724                           ;user.c: 324: -5.1920577E-28};
  2725                           
  2726                           ;incstack = 0
  2727                           ; Regs used in _voltage_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2728  0000' 3000'              	movlw	voltage_temp@c_const& (0+255)
  2729  0001' 0084               	movwf	4
  2730  0002' 3000'              	movlw	low voltage_temp@F1744
  2731  0003' 1683               	bsf	3,5	;RP0=1, select bank1
  2732  0004' 1303               	bcf	3,6	;RP1=0, select bank1
  2733  0005' 0080'              	movwf	??_voltage_temp^(0+128)
  2734  0006' 0804               	movf	4,w
  2735  0007' 0081'              	movwf	(??_voltage_temp^(0+128)+1)
  2736  0008' 3018               	movlw	24
  2737  0009' 0082'              	movwf	(??_voltage_temp^(0+128)+2)
  2738  000A'                    u7660:	
  2739  000A' 0800'              	movf	??_voltage_temp^(0+128),w
  2740  000B' 0084               	movwf	4
  2741  000C' 1783               	bsf	3,7	;select IRP bank2
  2742  000D' 0800               	movf	0,w
  2743  000E' 0083'              	movwf	(??_voltage_temp^(0+128)+3)
  2744  000F' 0A80'              	incf	??_voltage_temp^(0+128),f
  2745  0010' 0801'              	movf	(??_voltage_temp^(0+128)+1),w
  2746  0011' 0084               	movwf	4
  2747  0012' 1383               	bcf	3,7	;select IRP bank1
  2748  0013' 0803'              	movf	(??_voltage_temp^(0+128)+3),w
  2749  0014' 0080               	movwf	0
  2750  0015' 0A81'              	incf	(??_voltage_temp^(0+128)+1),f
  2751  0016' 0B82'              	decfsz	(??_voltage_temp^(0+128)+2),f
  2752  0017' 2800'              	goto	u7660
  2753                           
  2754                           ;user.c: 326: float microvolt = millivolt * 1000;
  2755  0018' 3000               	movlw	0
  2756  0019' 1283               	bcf	3,5	;RP0=0, select bank0
  2757  001A' 1303               	bcf	3,6	;RP1=0, select bank0
  2758  001B' 0090'              	movwf	___ftmul@f1
  2759  001C' 307A               	movlw	122
  2760  001D' 0091'              	movwf	___ftmul@f1+1
  2761  001E' 3044               	movlw	68
  2762  001F' 0092'              	movwf	___ftmul@f1+2
  2763  0020' 1683               	bsf	3,5	;RP0=1, select bank1
  2764  0021' 1303               	bcf	3,6	;RP1=0, select bank1
  2765  0022' 0800'              	movf	voltage_temp@millivolt^(0+128),w
  2766  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  2767  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  2768  0025' 0093'              	movwf	___ftmul@f2
  2769  0026' 1683               	bsf	3,5	;RP0=1, select bank1
  2770  0027' 1303               	bcf	3,6	;RP1=0, select bank1
  2771  0028' 0800'              	movf	(voltage_temp@millivolt+1)^(0+128),w
  2772  0029' 1283               	bcf	3,5	;RP0=0, select bank0
  2773  002A' 1303               	bcf	3,6	;RP1=0, select bank0
  2774  002B' 0094'              	movwf	___ftmul@f2+1
  2775  002C' 1683               	bsf	3,5	;RP0=1, select bank1
  2776  002D' 1303               	bcf	3,6	;RP1=0, select bank1
  2777  002E' 0800'              	movf	(voltage_temp@millivolt+2)^(0+128),w
  2778  002F' 1283               	bcf	3,5	;RP0=0, select bank0
  2779  0030' 1303               	bcf	3,6	;RP1=0, select bank0
  2780  0031' 0095'              	movwf	___ftmul@f2+2
  2781  0032' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  2782  0037' 1283               	bcf	3,5	;RP0=0, select bank0
  2783  0038' 1303               	bcf	3,6	;RP1=0, select bank0
  2784  0039' 0810'              	movf	?___ftmul,w
  2785  003A' 1683               	bsf	3,5	;RP0=1, select bank1
  2786  003B' 1303               	bcf	3,6	;RP1=0, select bank1
  2787  003C' 0080'              	movwf	voltage_temp@microvolt^(0+128)
  2788  003D' 1283               	bcf	3,5	;RP0=0, select bank0
  2789  003E' 1303               	bcf	3,6	;RP1=0, select bank0
  2790  003F' 0811'              	movf	?___ftmul+1,w
  2791  0040' 1683               	bsf	3,5	;RP0=1, select bank1
  2792  0041' 1303               	bcf	3,6	;RP1=0, select bank1
  2793  0042' 0080'              	movwf	(voltage_temp@microvolt+1)^(0+128)
  2794  0043' 1283               	bcf	3,5	;RP0=0, select bank0
  2795  0044' 1303               	bcf	3,6	;RP1=0, select bank0
  2796  0045' 0812'              	movf	?___ftmul+2,w
  2797  0046' 1683               	bsf	3,5	;RP0=1, select bank1
  2798  0047' 1303               	bcf	3,6	;RP1=0, select bank1
  2799  0048' 0080'              	movwf	(voltage_temp@microvolt+2)^(0+128)
  2800                           
  2801                           ;user.c: 328: float temp = 0;
  2802  0049' 3000               	movlw	0
  2803  004A' 0080'              	movwf	voltage_temp@temp^(0+128)
  2804  004B' 3000               	movlw	0
  2805  004C' 0080'              	movwf	(voltage_temp@temp+1)^(0+128)
  2806  004D' 3000               	movlw	0
  2807  004E' 0080'              	movwf	(voltage_temp@temp+2)^(0+128)
  2808                           
  2809                           ;user.c: 330: for (int i = 0; i < 9; i++)
  2810  004F' 0180'              	clrf	voltage_temp@i^(0+128)
  2811  0050' 0180'              	clrf	(voltage_temp@i+1)^(0+128)
  2812  0051' 0800'              	movf	(voltage_temp@i+1)^(0+128),w
  2813  0052' 3A80               	xorlw	128
  2814  0053' 00FF               	movwf	127
  2815  0054' 3080               	movlw	128
  2816  0055' 027F               	subwf	127,w
  2817  0056' 1D03               	skipz
  2818  0057' 2800'              	goto	u7675
  2819  0058' 3009               	movlw	9
  2820  0059' 0200'              	subwf	voltage_temp@i^(0+128),w
  2821  005A'                    u7675:	
  2822  005A' 1803               	btfsc	3,0
  2823  005B' 2800'              	goto	l5439
  2824  005C'                    l5429:	
  2825                           
  2826                           ;user.c: 331: {
  2827                           ;user.c: 332: temp += c_const[i] * pow(microvolt, i + 1);
  2828  005C' 1683               	bsf	3,5	;RP0=1, select bank1
  2829  005D' 1303               	bcf	3,6	;RP1=0, select bank1
  2830  005E' 0800'              	movf	voltage_temp@i^(0+128),w
  2831  005F' 3E01               	addlw	1
  2832  0060' 1283               	bcf	3,5	;RP0=0, select bank0
  2833  0061' 1303               	bcf	3,6	;RP1=0, select bank0
  2834  0062' 0085'              	movwf	___awtoft@c
  2835  0063' 1683               	bsf	3,5	;RP0=1, select bank1
  2836  0064' 1303               	bcf	3,6	;RP1=0, select bank1
  2837  0065' 0800'              	movf	(voltage_temp@i+1)^(0+128),w
  2838  0066' 1803               	skipnc
  2839  0067' 3E01               	addlw	1
  2840  0068' 3E00               	addlw	0
  2841  0069' 1283               	bcf	3,5	;RP0=0, select bank0
  2842  006A' 1303               	bcf	3,6	;RP1=0, select bank0
  2843  006B' 0086'              	movwf	___awtoft@c+1
  2844  006C' 120A' 118A' 2000' 120A' 118A' 	fcall	___awtoft
  2845  0071' 1283               	bcf	3,5	;RP0=0, select bank0
  2846  0072' 1303               	bcf	3,6	;RP1=0, select bank0
  2847  0073' 0805'              	movf	?___awtoft,w
  2848  0074' 1683               	bsf	3,5	;RP0=1, select bank1
  2849  0075' 1303               	bcf	3,6	;RP1=0, select bank1
  2850  0076' 0080'              	movwf	_voltage_temp$1013^(0+128)
  2851  0077' 1283               	bcf	3,5	;RP0=0, select bank0
  2852  0078' 1303               	bcf	3,6	;RP1=0, select bank0
  2853  0079' 0806'              	movf	?___awtoft+1,w
  2854  007A' 1683               	bsf	3,5	;RP0=1, select bank1
  2855  007B' 1303               	bcf	3,6	;RP1=0, select bank1
  2856  007C' 0080'              	movwf	(_voltage_temp$1013+1)^(0+128)
  2857  007D' 1283               	bcf	3,5	;RP0=0, select bank0
  2858  007E' 1303               	bcf	3,6	;RP1=0, select bank0
  2859  007F' 0807'              	movf	?___awtoft+2,w
  2860  0080' 1683               	bsf	3,5	;RP0=1, select bank1
  2861  0081' 1303               	bcf	3,6	;RP1=0, select bank1
  2862  0082' 0080'              	movwf	(_voltage_temp$1013+2)^(0+128)
  2863                           
  2864                           ;user.c: 331: {
  2865                           ;user.c: 332: temp += c_const[i] * pow(microvolt, i + 1);
  2866  0083' 0800'              	movf	_voltage_temp$1013^(0+128),w
  2867  0084' 0080'              	movwf	pow@y^(0+128)
  2868  0085' 0800'              	movf	(_voltage_temp$1013+1)^(0+128),w
  2869  0086' 0080'              	movwf	(pow@y+1)^(0+128)
  2870  0087' 0800'              	movf	(_voltage_temp$1013+2)^(0+128),w
  2871  0088' 0080'              	movwf	(pow@y+2)^(0+128)
  2872  0089' 0800'              	movf	voltage_temp@microvolt^(0+128),w
  2873  008A' 0080'              	movwf	pow@x^(0+128)
  2874  008B' 0800'              	movf	(voltage_temp@microvolt+1)^(0+128),w
  2875  008C' 0080'              	movwf	(pow@x+1)^(0+128)
  2876  008D' 0800'              	movf	(voltage_temp@microvolt+2)^(0+128),w
  2877  008E' 0080'              	movwf	(pow@x+2)^(0+128)
  2878  008F' 120A' 118A' 2000' 120A' 118A' 	fcall	_pow
  2879  0094' 1683               	bsf	3,5	;RP0=1, select bank1
  2880  0095' 1303               	bcf	3,6	;RP1=0, select bank1
  2881  0096' 0800'              	movf	?_pow^(0+128),w
  2882  0097' 0080'              	movwf	_voltage_temp$1014^(0+128)
  2883  0098' 0800'              	movf	(?_pow+1)^(0+128),w
  2884  0099' 0080'              	movwf	(_voltage_temp$1014+1)^(0+128)
  2885  009A' 0800'              	movf	(?_pow+2)^(0+128),w
  2886  009B' 0080'              	movwf	(_voltage_temp$1014+2)^(0+128)
  2887                           
  2888                           ;user.c: 331: {
  2889                           ;user.c: 332: temp += c_const[i] * pow(microvolt, i + 1);
  2890  009C' 0800'              	movf	_voltage_temp$1014^(0+128),w
  2891  009D' 1283               	bcf	3,5	;RP0=0, select bank0
  2892  009E' 1303               	bcf	3,6	;RP1=0, select bank0
  2893  009F' 0093'              	movwf	___ftmul@f2
  2894  00A0' 1683               	bsf	3,5	;RP0=1, select bank1
  2895  00A1' 1303               	bcf	3,6	;RP1=0, select bank1
  2896  00A2' 0800'              	movf	(_voltage_temp$1014+1)^(0+128),w
  2897  00A3' 1283               	bcf	3,5	;RP0=0, select bank0
  2898  00A4' 1303               	bcf	3,6	;RP1=0, select bank0
  2899  00A5' 0094'              	movwf	___ftmul@f2+1
  2900  00A6' 1683               	bsf	3,5	;RP0=1, select bank1
  2901  00A7' 1303               	bcf	3,6	;RP1=0, select bank1
  2902  00A8' 0800'              	movf	(_voltage_temp$1014+2)^(0+128),w
  2903  00A9' 1283               	bcf	3,5	;RP0=0, select bank0
  2904  00AA' 1303               	bcf	3,6	;RP1=0, select bank0
  2905  00AB' 0095'              	movwf	___ftmul@f2+2
  2906  00AC' 3003               	movlw	3
  2907  00AD' 1683               	bsf	3,5	;RP0=1, select bank1
  2908  00AE' 1303               	bcf	3,6	;RP1=0, select bank1
  2909  00AF' 0080'              	movwf	??_voltage_temp^(0+128)
  2910  00B0' 0800'              	movf	??_voltage_temp^(0+128),w
  2911  00B1' 1283               	bcf	3,5	;RP0=0, select bank0
  2912  00B2' 1303               	bcf	3,6	;RP1=0, select bank0
  2913  00B3' 008C'              	movwf	___bmul@multiplicand
  2914  00B4' 1683               	bsf	3,5	;RP0=1, select bank1
  2915  00B5' 1303               	bcf	3,6	;RP1=0, select bank1
  2916  00B6' 0800'              	movf	voltage_temp@i^(0+128),w
  2917  00B7' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  2918  00BC' 3E00'              	addlw	voltage_temp@c_const& (0+255)
  2919  00BD' 0084               	movwf	4
  2920  00BE' 1383               	bcf	3,7	;select IRP bank1
  2921  00BF' 0800               	movf	0,w
  2922  00C0' 1283               	bcf	3,5	;RP0=0, select bank0
  2923  00C1' 1303               	bcf	3,6	;RP1=0, select bank0
  2924  00C2' 0090'              	movwf	___ftmul@f1
  2925  00C3' 0A84               	incf	4,f
  2926  00C4' 0800               	movf	0,w
  2927  00C5' 0091'              	movwf	___ftmul@f1+1
  2928  00C6' 0A84               	incf	4,f
  2929  00C7' 0800               	movf	0,w
  2930  00C8' 0092'              	movwf	___ftmul@f1+2
  2931  00C9' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  2932  00CE' 1283               	bcf	3,5	;RP0=0, select bank0
  2933  00CF' 1303               	bcf	3,6	;RP1=0, select bank0
  2934  00D0' 0810'              	movf	?___ftmul,w
  2935  00D1' 00B0'              	movwf	___ftadd@f1
  2936  00D2' 0811'              	movf	?___ftmul+1,w
  2937  00D3' 00B1'              	movwf	___ftadd@f1+1
  2938  00D4' 0812'              	movf	?___ftmul+2,w
  2939  00D5' 00B2'              	movwf	___ftadd@f1+2
  2940  00D6' 1683               	bsf	3,5	;RP0=1, select bank1
  2941  00D7' 1303               	bcf	3,6	;RP1=0, select bank1
  2942  00D8' 0800'              	movf	voltage_temp@temp^(0+128),w
  2943  00D9' 1283               	bcf	3,5	;RP0=0, select bank0
  2944  00DA' 1303               	bcf	3,6	;RP1=0, select bank0
  2945  00DB' 00B3'              	movwf	___ftadd@f2
  2946  00DC' 1683               	bsf	3,5	;RP0=1, select bank1
  2947  00DD' 1303               	bcf	3,6	;RP1=0, select bank1
  2948  00DE' 0800'              	movf	(voltage_temp@temp+1)^(0+128),w
  2949  00DF' 1283               	bcf	3,5	;RP0=0, select bank0
  2950  00E0' 1303               	bcf	3,6	;RP1=0, select bank0
  2951  00E1' 00B4'              	movwf	___ftadd@f2+1
  2952  00E2' 1683               	bsf	3,5	;RP0=1, select bank1
  2953  00E3' 1303               	bcf	3,6	;RP1=0, select bank1
  2954  00E4' 0800'              	movf	(voltage_temp@temp+2)^(0+128),w
  2955  00E5' 1283               	bcf	3,5	;RP0=0, select bank0
  2956  00E6' 1303               	bcf	3,6	;RP1=0, select bank0
  2957  00E7' 00B5'              	movwf	___ftadd@f2+2
  2958  00E8' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftadd
  2959  00ED' 1283               	bcf	3,5	;RP0=0, select bank0
  2960  00EE' 1303               	bcf	3,6	;RP1=0, select bank0
  2961  00EF' 0830'              	movf	?___ftadd,w
  2962  00F0' 1683               	bsf	3,5	;RP0=1, select bank1
  2963  00F1' 1303               	bcf	3,6	;RP1=0, select bank1
  2964  00F2' 0080'              	movwf	voltage_temp@temp^(0+128)
  2965  00F3' 1283               	bcf	3,5	;RP0=0, select bank0
  2966  00F4' 1303               	bcf	3,6	;RP1=0, select bank0
  2967  00F5' 0831'              	movf	?___ftadd+1,w
  2968  00F6' 1683               	bsf	3,5	;RP0=1, select bank1
  2969  00F7' 1303               	bcf	3,6	;RP1=0, select bank1
  2970  00F8' 0080'              	movwf	(voltage_temp@temp+1)^(0+128)
  2971  00F9' 1283               	bcf	3,5	;RP0=0, select bank0
  2972  00FA' 1303               	bcf	3,6	;RP1=0, select bank0
  2973  00FB' 0832'              	movf	?___ftadd+2,w
  2974  00FC' 1683               	bsf	3,5	;RP0=1, select bank1
  2975  00FD' 1303               	bcf	3,6	;RP1=0, select bank1
  2976  00FE' 0080'              	movwf	(voltage_temp@temp+2)^(0+128)
  2977  00FF' 3001               	movlw	1
  2978  0100' 0780'              	addwf	voltage_temp@i^(0+128),f
  2979  0101' 1803               	skipnc
  2980  0102' 0A80'              	incf	(voltage_temp@i+1)^(0+128),f
  2981  0103' 3000               	movlw	0
  2982  0104' 0780'              	addwf	(voltage_temp@i+1)^(0+128),f
  2983  0105' 0800'              	movf	(voltage_temp@i+1)^(0+128),w
  2984  0106' 3A80               	xorlw	128
  2985  0107' 00FF               	movwf	127
  2986  0108' 3080               	movlw	128
  2987  0109' 027F               	subwf	127,w
  2988  010A' 1D03               	skipz
  2989  010B' 2800'              	goto	u7685
  2990  010C' 3009               	movlw	9
  2991  010D' 0200'              	subwf	voltage_temp@i^(0+128),w
  2992  010E'                    u7685:	
  2993  010E' 1C03               	skipc
  2994  010F' 2800'              	goto	l5429
  2995  0110'                    l5439:	
  2996                           
  2997                           ;user.c: 333: }
  2998                           ;user.c: 368: return temp;
  2999  0110' 1683               	bsf	3,5	;RP0=1, select bank1
  3000  0111' 1303               	bcf	3,6	;RP1=0, select bank1
  3001  0112' 0800'              	movf	voltage_temp@temp^(0+128),w
  3002  0113' 0080'              	movwf	?_voltage_temp^(0+128)
  3003  0114' 0800'              	movf	(voltage_temp@temp+1)^(0+128),w
  3004  0115' 0080'              	movwf	(?_voltage_temp+1)^(0+128)
  3005  0116' 0800'              	movf	(voltage_temp@temp+2)^(0+128),w
  3006  0117' 0080'              	movwf	(?_voltage_temp+2)^(0+128)
  3007  0118' 0008               	return
  3008  0119'                    __end_of_voltage_temp:	
  3009                           
  3010                           	psect	text2
  3011  0000'                    __ptext2:	
  3012 ;; *************** function _temp_voltage *****************
  3013 ;; Defined at:
  3014 ;;		line 274 in file "user.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  temp            3   32[BANK1 ] float 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  i               2   48[BANK3 ] int 
  3019 ;;  c_const        30    0[BANK3 ] float [10]
  3020 ;;  microvolt       3   42[BANK3 ] float 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  3   32[BANK1 ] float 
  3023 ;; Registers used:
  3024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3030 ;;      Params:         0       0       3       0       0
  3031 ;;      Locals:         0       0       0      50       0
  3032 ;;      Temps:          0       0       4       0       0
  3033 ;;      Totals:         0       0       7      50       0
  3034 ;;Total ram usage:       57 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    6
  3037 ;; This function calls:
  3038 ;;		___awtoft
  3039 ;;		___bmul
  3040 ;;		___ftadd
  3041 ;;		___ftdiv
  3042 ;;		___ftmul
  3043 ;;		_exp
  3044 ;;		_pow
  3045 ;; This function is called by:
  3046 ;;		_main
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           
  3051                           ;psect for function _temp_voltage
  3052  0000'                    _temp_voltage:	
  3053                           
  3054                           ;user.c: 276: float c_const[10] = {-1.7600413686E1,
  3055                           ;user.c: 277: 3.8921204975E1,
  3056                           ;user.c: 278: 1.8558770032E-2,
  3057                           ;user.c: 279: -9.9457592874E-5,
  3058                           ;user.c: 280: 3.1870945719E-7,
  3059                           ;user.c: 281: -5.6072844889E-10,
  3060                           ;user.c: 282: 5.6075059059E-13,
  3061                           ;user.c: 283: -3.2020720003E-16,
  3062                           ;user.c: 284: 9.7151147152E-20,
  3063                           ;user.c: 285: -1.2104721275E-23};
  3064                           
  3065                           ;incstack = 0
  3066                           ; Regs used in _temp_voltage: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3067  0000' 3000'              	movlw	temp_voltage@c_const& (0+255)
  3068  0001' 0084               	movwf	4
  3069  0002' 3000'              	movlw	low temp_voltage@F1739
  3070  0003' 1683               	bsf	3,5	;RP0=1, select bank1
  3071  0004' 1303               	bcf	3,6	;RP1=0, select bank1
  3072  0005' 0080'              	movwf	??_temp_voltage^(0+128)
  3073  0006' 0804               	movf	4,w
  3074  0007' 0081'              	movwf	(??_temp_voltage^(0+128)+1)
  3075  0008' 301E               	movlw	30
  3076  0009' 0082'              	movwf	(??_temp_voltage^(0+128)+2)
  3077  000A'                    u7630:	
  3078  000A' 0800'              	movf	??_temp_voltage^(0+128),w
  3079  000B' 0084               	movwf	4
  3080  000C' 1783               	bsf	3,7	;select IRP bank2
  3081  000D' 0800               	movf	0,w
  3082  000E' 0083'              	movwf	(??_temp_voltage^(0+128)+3)
  3083  000F' 0A80'              	incf	??_temp_voltage^(0+128),f
  3084  0010' 0801'              	movf	(??_temp_voltage^(0+128)+1),w
  3085  0011' 0084               	movwf	4
  3086  0012' 0803'              	movf	(??_temp_voltage^(0+128)+3),w
  3087  0013' 0080               	movwf	0
  3088  0014' 0A81'              	incf	(??_temp_voltage^(0+128)+1),f
  3089  0015' 0B82'              	decfsz	(??_temp_voltage^(0+128)+2),f
  3090  0016' 2800'              	goto	u7630
  3091                           
  3092                           ;user.c: 287: float microvolt = 1.185976E2 * exp(-1.183432E-4 * pow((temp - 126.9686),2)
      +                          );
  3093  0017' 30F0               	movlw	240
  3094  0018' 1283               	bcf	3,5	;RP0=0, select bank0
  3095  0019' 1303               	bcf	3,6	;RP1=0, select bank0
  3096  001A' 00B0'              	movwf	___ftadd@f1
  3097  001B' 30FD               	movlw	253
  3098  001C' 00B1'              	movwf	___ftadd@f1+1
  3099  001D' 30C2               	movlw	194
  3100  001E' 00B2'              	movwf	___ftadd@f1+2
  3101  001F' 1683               	bsf	3,5	;RP0=1, select bank1
  3102  0020' 1303               	bcf	3,6	;RP1=0, select bank1
  3103  0021' 0800'              	movf	temp_voltage@temp^(0+128),w
  3104  0022' 1283               	bcf	3,5	;RP0=0, select bank0
  3105  0023' 1303               	bcf	3,6	;RP1=0, select bank0
  3106  0024' 00B3'              	movwf	___ftadd@f2
  3107  0025' 1683               	bsf	3,5	;RP0=1, select bank1
  3108  0026' 1303               	bcf	3,6	;RP1=0, select bank1
  3109  0027' 0800'              	movf	(temp_voltage@temp+1)^(0+128),w
  3110  0028' 1283               	bcf	3,5	;RP0=0, select bank0
  3111  0029' 1303               	bcf	3,6	;RP1=0, select bank0
  3112  002A' 00B4'              	movwf	___ftadd@f2+1
  3113  002B' 1683               	bsf	3,5	;RP0=1, select bank1
  3114  002C' 1303               	bcf	3,6	;RP1=0, select bank1
  3115  002D' 0800'              	movf	(temp_voltage@temp+2)^(0+128),w
  3116  002E' 1283               	bcf	3,5	;RP0=0, select bank0
  3117  002F' 1303               	bcf	3,6	;RP1=0, select bank0
  3118  0030' 00B5'              	movwf	___ftadd@f2+2
  3119  0031' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftadd
  3120  0036' 1283               	bcf	3,5	;RP0=0, select bank0
  3121  0037' 1303               	bcf	3,6	;RP1=0, select bank0
  3122  0038' 0830'              	movf	?___ftadd,w
  3123  0039' 1683               	bsf	3,5	;RP0=1, select bank3
  3124  003A' 1703               	bsf	3,6	;RP1=1, select bank3
  3125  003B' 0080'              	movwf	_temp_voltage$1008^(0+384)
  3126  003C' 1283               	bcf	3,5	;RP0=0, select bank0
  3127  003D' 1303               	bcf	3,6	;RP1=0, select bank0
  3128  003E' 0831'              	movf	?___ftadd+1,w
  3129  003F' 1683               	bsf	3,5	;RP0=1, select bank3
  3130  0040' 1703               	bsf	3,6	;RP1=1, select bank3
  3131  0041' 0080'              	movwf	(_temp_voltage$1008+1)^(0+384)
  3132  0042' 1283               	bcf	3,5	;RP0=0, select bank0
  3133  0043' 1303               	bcf	3,6	;RP1=0, select bank0
  3134  0044' 0832'              	movf	?___ftadd+2,w
  3135  0045' 1683               	bsf	3,5	;RP0=1, select bank3
  3136  0046' 1703               	bsf	3,6	;RP1=1, select bank3
  3137  0047' 0080'              	movwf	(_temp_voltage$1008+2)^(0+384)
  3138                           
  3139                           ;user.c: 287: float microvolt = 1.185976E2 * exp(-1.183432E-4 * pow((temp - 126.9686),2)
      +                          );
  3140  0048' 3000               	movlw	0
  3141  0049' 1683               	bsf	3,5	;RP0=1, select bank1
  3142  004A' 1303               	bcf	3,6	;RP1=0, select bank1
  3143  004B' 0080'              	movwf	pow@y^(0+128)
  3144  004C' 3000               	movlw	0
  3145  004D' 0080'              	movwf	(pow@y+1)^(0+128)
  3146  004E' 3040               	movlw	64
  3147  004F' 0080'              	movwf	(pow@y+2)^(0+128)
  3148  0050' 1683               	bsf	3,5	;RP0=1, select bank3
  3149  0051' 1703               	bsf	3,6	;RP1=1, select bank3
  3150  0052' 0800'              	movf	_temp_voltage$1008^(0+384),w
  3151  0053' 1683               	bsf	3,5	;RP0=1, select bank1
  3152  0054' 1303               	bcf	3,6	;RP1=0, select bank1
  3153  0055' 0080'              	movwf	pow@x^(0+128)
  3154  0056' 1683               	bsf	3,5	;RP0=1, select bank3
  3155  0057' 1703               	bsf	3,6	;RP1=1, select bank3
  3156  0058' 0800'              	movf	(_temp_voltage$1008+1)^(0+384),w
  3157  0059' 1683               	bsf	3,5	;RP0=1, select bank1
  3158  005A' 1303               	bcf	3,6	;RP1=0, select bank1
  3159  005B' 0080'              	movwf	(pow@x+1)^(0+128)
  3160  005C' 1683               	bsf	3,5	;RP0=1, select bank3
  3161  005D' 1703               	bsf	3,6	;RP1=1, select bank3
  3162  005E' 0800'              	movf	(_temp_voltage$1008+2)^(0+384),w
  3163  005F' 1683               	bsf	3,5	;RP0=1, select bank1
  3164  0060' 1303               	bcf	3,6	;RP1=0, select bank1
  3165  0061' 0080'              	movwf	(pow@x+2)^(0+128)
  3166  0062' 120A' 118A' 2000' 120A' 118A' 	fcall	_pow
  3167  0067' 1683               	bsf	3,5	;RP0=1, select bank1
  3168  0068' 1303               	bcf	3,6	;RP1=0, select bank1
  3169  0069' 0800'              	movf	?_pow^(0+128),w
  3170  006A' 1683               	bsf	3,5	;RP0=1, select bank3
  3171  006B' 1703               	bsf	3,6	;RP1=1, select bank3
  3172  006C' 0080'              	movwf	_temp_voltage$1009^(0+384)
  3173  006D' 1683               	bsf	3,5	;RP0=1, select bank1
  3174  006E' 1303               	bcf	3,6	;RP1=0, select bank1
  3175  006F' 0800'              	movf	(?_pow+1)^(0+128),w
  3176  0070' 1683               	bsf	3,5	;RP0=1, select bank3
  3177  0071' 1703               	bsf	3,6	;RP1=1, select bank3
  3178  0072' 0080'              	movwf	(_temp_voltage$1009+1)^(0+384)
  3179  0073' 1683               	bsf	3,5	;RP0=1, select bank1
  3180  0074' 1303               	bcf	3,6	;RP1=0, select bank1
  3181  0075' 0800'              	movf	(?_pow+2)^(0+128),w
  3182  0076' 1683               	bsf	3,5	;RP0=1, select bank3
  3183  0077' 1703               	bsf	3,6	;RP1=1, select bank3
  3184  0078' 0080'              	movwf	(_temp_voltage$1009+2)^(0+384)
  3185                           
  3186                           ;user.c: 287: float microvolt = 1.185976E2 * exp(-1.183432E-4 * pow((temp - 126.9686),2)
      +                          );
  3187  0079' 302F               	movlw	47
  3188  007A' 1283               	bcf	3,5	;RP0=0, select bank0
  3189  007B' 1303               	bcf	3,6	;RP1=0, select bank0
  3190  007C' 0090'              	movwf	___ftmul@f1
  3191  007D' 30F8               	movlw	248
  3192  007E' 0091'              	movwf	___ftmul@f1+1
  3193  007F' 30B8               	movlw	184
  3194  0080' 0092'              	movwf	___ftmul@f1+2
  3195  0081' 1683               	bsf	3,5	;RP0=1, select bank3
  3196  0082' 1703               	bsf	3,6	;RP1=1, select bank3
  3197  0083' 0800'              	movf	_temp_voltage$1009^(0+384),w
  3198  0084' 1283               	bcf	3,5	;RP0=0, select bank0
  3199  0085' 1303               	bcf	3,6	;RP1=0, select bank0
  3200  0086' 0093'              	movwf	___ftmul@f2
  3201  0087' 1683               	bsf	3,5	;RP0=1, select bank3
  3202  0088' 1703               	bsf	3,6	;RP1=1, select bank3
  3203  0089' 0800'              	movf	(_temp_voltage$1009+1)^(0+384),w
  3204  008A' 1283               	bcf	3,5	;RP0=0, select bank0
  3205  008B' 1303               	bcf	3,6	;RP1=0, select bank0
  3206  008C' 0094'              	movwf	___ftmul@f2+1
  3207  008D' 1683               	bsf	3,5	;RP0=1, select bank3
  3208  008E' 1703               	bsf	3,6	;RP1=1, select bank3
  3209  008F' 0800'              	movf	(_temp_voltage$1009+2)^(0+384),w
  3210  0090' 1283               	bcf	3,5	;RP0=0, select bank0
  3211  0091' 1303               	bcf	3,6	;RP1=0, select bank0
  3212  0092' 0095'              	movwf	___ftmul@f2+2
  3213  0093' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  3214  0098' 1283               	bcf	3,5	;RP0=0, select bank0
  3215  0099' 1303               	bcf	3,6	;RP1=0, select bank0
  3216  009A' 0810'              	movf	?___ftmul,w
  3217  009B' 1683               	bsf	3,5	;RP0=1, select bank3
  3218  009C' 1703               	bsf	3,6	;RP1=1, select bank3
  3219  009D' 0080'              	movwf	_temp_voltage$1010^(0+384)
  3220  009E' 1283               	bcf	3,5	;RP0=0, select bank0
  3221  009F' 1303               	bcf	3,6	;RP1=0, select bank0
  3222  00A0' 0811'              	movf	?___ftmul+1,w
  3223  00A1' 1683               	bsf	3,5	;RP0=1, select bank3
  3224  00A2' 1703               	bsf	3,6	;RP1=1, select bank3
  3225  00A3' 0080'              	movwf	(_temp_voltage$1010+1)^(0+384)
  3226  00A4' 1283               	bcf	3,5	;RP0=0, select bank0
  3227  00A5' 1303               	bcf	3,6	;RP1=0, select bank0
  3228  00A6' 0812'              	movf	?___ftmul+2,w
  3229  00A7' 1683               	bsf	3,5	;RP0=1, select bank3
  3230  00A8' 1703               	bsf	3,6	;RP1=1, select bank3
  3231  00A9' 0080'              	movwf	(_temp_voltage$1010+2)^(0+384)
  3232                           
  3233                           ;user.c: 287: float microvolt = 1.185976E2 * exp(-1.183432E-4 * pow((temp - 126.9686),2)
      +                          );
  3234  00AA' 0800'              	movf	_temp_voltage$1010^(0+384),w
  3235  00AB' 1683               	bsf	3,5	;RP0=1, select bank1
  3236  00AC' 1303               	bcf	3,6	;RP1=0, select bank1
  3237  00AD' 0080'              	movwf	exp@x^(0+128)
  3238  00AE' 1683               	bsf	3,5	;RP0=1, select bank3
  3239  00AF' 1703               	bsf	3,6	;RP1=1, select bank3
  3240  00B0' 0800'              	movf	(_temp_voltage$1010+1)^(0+384),w
  3241  00B1' 1683               	bsf	3,5	;RP0=1, select bank1
  3242  00B2' 1303               	bcf	3,6	;RP1=0, select bank1
  3243  00B3' 0080'              	movwf	(exp@x+1)^(0+128)
  3244  00B4' 1683               	bsf	3,5	;RP0=1, select bank3
  3245  00B5' 1703               	bsf	3,6	;RP1=1, select bank3
  3246  00B6' 0800'              	movf	(_temp_voltage$1010+2)^(0+384),w
  3247  00B7' 1683               	bsf	3,5	;RP0=1, select bank1
  3248  00B8' 1303               	bcf	3,6	;RP1=0, select bank1
  3249  00B9' 0080'              	movwf	(exp@x+2)^(0+128)
  3250  00BA' 120A' 118A' 2000' 120A' 118A' 	fcall	_exp
  3251  00BF' 1683               	bsf	3,5	;RP0=1, select bank1
  3252  00C0' 1303               	bcf	3,6	;RP1=0, select bank1
  3253  00C1' 0800'              	movf	?_exp^(0+128),w
  3254  00C2' 1683               	bsf	3,5	;RP0=1, select bank3
  3255  00C3' 1703               	bsf	3,6	;RP1=1, select bank3
  3256  00C4' 0080'              	movwf	_temp_voltage$1011^(0+384)
  3257  00C5' 1683               	bsf	3,5	;RP0=1, select bank1
  3258  00C6' 1303               	bcf	3,6	;RP1=0, select bank1
  3259  00C7' 0800'              	movf	(?_exp+1)^(0+128),w
  3260  00C8' 1683               	bsf	3,5	;RP0=1, select bank3
  3261  00C9' 1703               	bsf	3,6	;RP1=1, select bank3
  3262  00CA' 0080'              	movwf	(_temp_voltage$1011+1)^(0+384)
  3263  00CB' 1683               	bsf	3,5	;RP0=1, select bank1
  3264  00CC' 1303               	bcf	3,6	;RP1=0, select bank1
  3265  00CD' 0800'              	movf	(?_exp+2)^(0+128),w
  3266  00CE' 1683               	bsf	3,5	;RP0=1, select bank3
  3267  00CF' 1703               	bsf	3,6	;RP1=1, select bank3
  3268  00D0' 0080'              	movwf	(_temp_voltage$1011+2)^(0+384)
  3269                           
  3270                           ;user.c: 287: float microvolt = 1.185976E2 * exp(-1.183432E-4 * pow((temp - 126.9686),2)
      +                          );
  3271  00D1' 3032               	movlw	50
  3272  00D2' 1283               	bcf	3,5	;RP0=0, select bank0
  3273  00D3' 1303               	bcf	3,6	;RP1=0, select bank0
  3274  00D4' 0090'              	movwf	___ftmul@f1
  3275  00D5' 30ED               	movlw	237
  3276  00D6' 0091'              	movwf	___ftmul@f1+1
  3277  00D7' 3042               	movlw	66
  3278  00D8' 0092'              	movwf	___ftmul@f1+2
  3279  00D9' 1683               	bsf	3,5	;RP0=1, select bank3
  3280  00DA' 1703               	bsf	3,6	;RP1=1, select bank3
  3281  00DB' 0800'              	movf	_temp_voltage$1011^(0+384),w
  3282  00DC' 1283               	bcf	3,5	;RP0=0, select bank0
  3283  00DD' 1303               	bcf	3,6	;RP1=0, select bank0
  3284  00DE' 0093'              	movwf	___ftmul@f2
  3285  00DF' 1683               	bsf	3,5	;RP0=1, select bank3
  3286  00E0' 1703               	bsf	3,6	;RP1=1, select bank3
  3287  00E1' 0800'              	movf	(_temp_voltage$1011+1)^(0+384),w
  3288  00E2' 1283               	bcf	3,5	;RP0=0, select bank0
  3289  00E3' 1303               	bcf	3,6	;RP1=0, select bank0
  3290  00E4' 0094'              	movwf	___ftmul@f2+1
  3291  00E5' 1683               	bsf	3,5	;RP0=1, select bank3
  3292  00E6' 1703               	bsf	3,6	;RP1=1, select bank3
  3293  00E7' 0800'              	movf	(_temp_voltage$1011+2)^(0+384),w
  3294  00E8' 1283               	bcf	3,5	;RP0=0, select bank0
  3295  00E9' 1303               	bcf	3,6	;RP1=0, select bank0
  3296  00EA' 0095'              	movwf	___ftmul@f2+2
  3297  00EB' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  3298  00F0' 1283               	bcf	3,5	;RP0=0, select bank0
  3299  00F1' 1303               	bcf	3,6	;RP1=0, select bank0
  3300  00F2' 0810'              	movf	?___ftmul,w
  3301  00F3' 1683               	bsf	3,5	;RP0=1, select bank3
  3302  00F4' 1703               	bsf	3,6	;RP1=1, select bank3
  3303  00F5' 0080'              	movwf	temp_voltage@microvolt^(0+384)
  3304  00F6' 1283               	bcf	3,5	;RP0=0, select bank0
  3305  00F7' 1303               	bcf	3,6	;RP1=0, select bank0
  3306  00F8' 0811'              	movf	?___ftmul+1,w
  3307  00F9' 1683               	bsf	3,5	;RP0=1, select bank3
  3308  00FA' 1703               	bsf	3,6	;RP1=1, select bank3
  3309  00FB' 0080'              	movwf	(temp_voltage@microvolt+1)^(0+384)
  3310  00FC' 1283               	bcf	3,5	;RP0=0, select bank0
  3311  00FD' 1303               	bcf	3,6	;RP1=0, select bank0
  3312  00FE' 0812'              	movf	?___ftmul+2,w
  3313  00FF' 1683               	bsf	3,5	;RP0=1, select bank3
  3314  0100' 1703               	bsf	3,6	;RP1=1, select bank3
  3315  0101' 0080'              	movwf	(temp_voltage@microvolt+2)^(0+384)
  3316                           
  3317                           ;user.c: 289: for (int i = 0; i < 5; i++)
  3318  0102' 0180'              	clrf	temp_voltage@i^(0+384)
  3319  0103' 0180'              	clrf	(temp_voltage@i+1)^(0+384)
  3320  0104' 0800'              	movf	(temp_voltage@i+1)^(0+384),w
  3321  0105' 3A80               	xorlw	128
  3322  0106' 00FF               	movwf	127
  3323  0107' 3080               	movlw	128
  3324  0108' 027F               	subwf	127,w
  3325  0109' 1D03               	skipz
  3326  010A' 2800'              	goto	u7645
  3327  010B' 3005               	movlw	5
  3328  010C' 0200'              	subwf	temp_voltage@i^(0+384),w
  3329  010D'                    u7645:	
  3330  010D' 1803               	btfsc	3,0
  3331  010E' 2800'              	goto	l5413
  3332  010F'                    l5403:	
  3333                           
  3334                           ;user.c: 290: {
  3335                           ;user.c: 291: microvolt += c_const[i] * pow(temp, i);
  3336  010F' 1683               	bsf	3,5	;RP0=1, select bank3
  3337  0110' 1703               	bsf	3,6	;RP1=1, select bank3
  3338  0111' 0800'              	movf	(temp_voltage@i+1)^(0+384),w
  3339  0112' 1283               	bcf	3,5	;RP0=0, select bank0
  3340  0113' 1303               	bcf	3,6	;RP1=0, select bank0
  3341  0114' 0186'              	clrf	___awtoft@c+1
  3342  0115' 0786'              	addwf	___awtoft@c+1,f
  3343  0116' 1683               	bsf	3,5	;RP0=1, select bank3
  3344  0117' 1703               	bsf	3,6	;RP1=1, select bank3
  3345  0118' 0800'              	movf	temp_voltage@i^(0+384),w
  3346  0119' 1283               	bcf	3,5	;RP0=0, select bank0
  3347  011A' 1303               	bcf	3,6	;RP1=0, select bank0
  3348  011B' 0185'              	clrf	___awtoft@c
  3349  011C' 0785'              	addwf	___awtoft@c,f
  3350  011D' 120A' 118A' 2000' 120A' 118A' 	fcall	___awtoft
  3351  0122' 1283               	bcf	3,5	;RP0=0, select bank0
  3352  0123' 1303               	bcf	3,6	;RP1=0, select bank0
  3353  0124' 0805'              	movf	?___awtoft,w
  3354  0125' 1683               	bsf	3,5	;RP0=1, select bank3
  3355  0126' 1703               	bsf	3,6	;RP1=1, select bank3
  3356  0127' 0080'              	movwf	_temp_voltage$1012^(0+384)
  3357  0128' 1283               	bcf	3,5	;RP0=0, select bank0
  3358  0129' 1303               	bcf	3,6	;RP1=0, select bank0
  3359  012A' 0806'              	movf	?___awtoft+1,w
  3360  012B' 1683               	bsf	3,5	;RP0=1, select bank3
  3361  012C' 1703               	bsf	3,6	;RP1=1, select bank3
  3362  012D' 0080'              	movwf	(_temp_voltage$1012+1)^(0+384)
  3363  012E' 1283               	bcf	3,5	;RP0=0, select bank0
  3364  012F' 1303               	bcf	3,6	;RP1=0, select bank0
  3365  0130' 0807'              	movf	?___awtoft+2,w
  3366  0131' 1683               	bsf	3,5	;RP0=1, select bank3
  3367  0132' 1703               	bsf	3,6	;RP1=1, select bank3
  3368  0133' 0080'              	movwf	(_temp_voltage$1012+2)^(0+384)
  3369                           
  3370                           ;user.c: 290: {
  3371                           ;user.c: 291: microvolt += c_const[i] * pow(temp, i);
  3372  0134' 0800'              	movf	_temp_voltage$1012^(0+384),w
  3373  0135' 1683               	bsf	3,5	;RP0=1, select bank1
  3374  0136' 1303               	bcf	3,6	;RP1=0, select bank1
  3375  0137' 0080'              	movwf	pow@y^(0+128)
  3376  0138' 1683               	bsf	3,5	;RP0=1, select bank3
  3377  0139' 1703               	bsf	3,6	;RP1=1, select bank3
  3378  013A' 0800'              	movf	(_temp_voltage$1012+1)^(0+384),w
  3379  013B' 1683               	bsf	3,5	;RP0=1, select bank1
  3380  013C' 1303               	bcf	3,6	;RP1=0, select bank1
  3381  013D' 0080'              	movwf	(pow@y+1)^(0+128)
  3382  013E' 1683               	bsf	3,5	;RP0=1, select bank3
  3383  013F' 1703               	bsf	3,6	;RP1=1, select bank3
  3384  0140' 0800'              	movf	(_temp_voltage$1012+2)^(0+384),w
  3385  0141' 1683               	bsf	3,5	;RP0=1, select bank1
  3386  0142' 1303               	bcf	3,6	;RP1=0, select bank1
  3387  0143' 0080'              	movwf	(pow@y+2)^(0+128)
  3388  0144' 0800'              	movf	temp_voltage@temp^(0+128),w
  3389  0145' 0080'              	movwf	pow@x^(0+128)
  3390  0146' 0800'              	movf	(temp_voltage@temp+1)^(0+128),w
  3391  0147' 0080'              	movwf	(pow@x+1)^(0+128)
  3392  0148' 0800'              	movf	(temp_voltage@temp+2)^(0+128),w
  3393  0149' 0080'              	movwf	(pow@x+2)^(0+128)
  3394  014A' 120A' 118A' 2000' 120A' 118A' 	fcall	_pow
  3395  014F' 1683               	bsf	3,5	;RP0=1, select bank1
  3396  0150' 1303               	bcf	3,6	;RP1=0, select bank1
  3397  0151' 0800'              	movf	?_pow^(0+128),w
  3398  0152' 1683               	bsf	3,5	;RP0=1, select bank3
  3399  0153' 1703               	bsf	3,6	;RP1=1, select bank3
  3400  0154' 0080'              	movwf	_temp_voltage$1009^(0+384)
  3401  0155' 1683               	bsf	3,5	;RP0=1, select bank1
  3402  0156' 1303               	bcf	3,6	;RP1=0, select bank1
  3403  0157' 0800'              	movf	(?_pow+1)^(0+128),w
  3404  0158' 1683               	bsf	3,5	;RP0=1, select bank3
  3405  0159' 1703               	bsf	3,6	;RP1=1, select bank3
  3406  015A' 0080'              	movwf	(_temp_voltage$1009+1)^(0+384)
  3407  015B' 1683               	bsf	3,5	;RP0=1, select bank1
  3408  015C' 1303               	bcf	3,6	;RP1=0, select bank1
  3409  015D' 0800'              	movf	(?_pow+2)^(0+128),w
  3410  015E' 1683               	bsf	3,5	;RP0=1, select bank3
  3411  015F' 1703               	bsf	3,6	;RP1=1, select bank3
  3412  0160' 0080'              	movwf	(_temp_voltage$1009+2)^(0+384)
  3413                           
  3414                           ;user.c: 290: {
  3415                           ;user.c: 291: microvolt += c_const[i] * pow(temp, i);
  3416  0161' 0800'              	movf	_temp_voltage$1009^(0+384),w
  3417  0162' 1283               	bcf	3,5	;RP0=0, select bank0
  3418  0163' 1303               	bcf	3,6	;RP1=0, select bank0
  3419  0164' 0093'              	movwf	___ftmul@f2
  3420  0165' 1683               	bsf	3,5	;RP0=1, select bank3
  3421  0166' 1703               	bsf	3,6	;RP1=1, select bank3
  3422  0167' 0800'              	movf	(_temp_voltage$1009+1)^(0+384),w
  3423  0168' 1283               	bcf	3,5	;RP0=0, select bank0
  3424  0169' 1303               	bcf	3,6	;RP1=0, select bank0
  3425  016A' 0094'              	movwf	___ftmul@f2+1
  3426  016B' 1683               	bsf	3,5	;RP0=1, select bank3
  3427  016C' 1703               	bsf	3,6	;RP1=1, select bank3
  3428  016D' 0800'              	movf	(_temp_voltage$1009+2)^(0+384),w
  3429  016E' 1283               	bcf	3,5	;RP0=0, select bank0
  3430  016F' 1303               	bcf	3,6	;RP1=0, select bank0
  3431  0170' 0095'              	movwf	___ftmul@f2+2
  3432  0171' 3003               	movlw	3
  3433  0172' 1683               	bsf	3,5	;RP0=1, select bank1
  3434  0173' 1303               	bcf	3,6	;RP1=0, select bank1
  3435  0174' 0080'              	movwf	??_temp_voltage^(0+128)
  3436  0175' 0800'              	movf	??_temp_voltage^(0+128),w
  3437  0176' 1283               	bcf	3,5	;RP0=0, select bank0
  3438  0177' 1303               	bcf	3,6	;RP1=0, select bank0
  3439  0178' 008C'              	movwf	___bmul@multiplicand
  3440  0179' 1683               	bsf	3,5	;RP0=1, select bank3
  3441  017A' 1703               	bsf	3,6	;RP1=1, select bank3
  3442  017B' 0800'              	movf	temp_voltage@i^(0+384),w
  3443  017C' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  3444  0181' 3E00'              	addlw	temp_voltage@c_const& (0+255)
  3445  0182' 0084               	movwf	4
  3446  0183' 1783               	bsf	3,7	;select IRP bank3
  3447  0184' 0800               	movf	0,w
  3448  0185' 1283               	bcf	3,5	;RP0=0, select bank0
  3449  0186' 1303               	bcf	3,6	;RP1=0, select bank0
  3450  0187' 0090'              	movwf	___ftmul@f1
  3451  0188' 0A84               	incf	4,f
  3452  0189' 0800               	movf	0,w
  3453  018A' 0091'              	movwf	___ftmul@f1+1
  3454  018B' 0A84               	incf	4,f
  3455  018C' 0800               	movf	0,w
  3456  018D' 0092'              	movwf	___ftmul@f1+2
  3457  018E' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  3458  0193' 1283               	bcf	3,5	;RP0=0, select bank0
  3459  0194' 1303               	bcf	3,6	;RP1=0, select bank0
  3460  0195' 0810'              	movf	?___ftmul,w
  3461  0196' 00B0'              	movwf	___ftadd@f1
  3462  0197' 0811'              	movf	?___ftmul+1,w
  3463  0198' 00B1'              	movwf	___ftadd@f1+1
  3464  0199' 0812'              	movf	?___ftmul+2,w
  3465  019A' 00B2'              	movwf	___ftadd@f1+2
  3466  019B' 1683               	bsf	3,5	;RP0=1, select bank3
  3467  019C' 1703               	bsf	3,6	;RP1=1, select bank3
  3468  019D' 0800'              	movf	temp_voltage@microvolt^(0+384),w
  3469  019E' 1283               	bcf	3,5	;RP0=0, select bank0
  3470  019F' 1303               	bcf	3,6	;RP1=0, select bank0
  3471  01A0' 00B3'              	movwf	___ftadd@f2
  3472  01A1' 1683               	bsf	3,5	;RP0=1, select bank3
  3473  01A2' 1703               	bsf	3,6	;RP1=1, select bank3
  3474  01A3' 0800'              	movf	(temp_voltage@microvolt+1)^(0+384),w
  3475  01A4' 1283               	bcf	3,5	;RP0=0, select bank0
  3476  01A5' 1303               	bcf	3,6	;RP1=0, select bank0
  3477  01A6' 00B4'              	movwf	___ftadd@f2+1
  3478  01A7' 1683               	bsf	3,5	;RP0=1, select bank3
  3479  01A8' 1703               	bsf	3,6	;RP1=1, select bank3
  3480  01A9' 0800'              	movf	(temp_voltage@microvolt+2)^(0+384),w
  3481  01AA' 1283               	bcf	3,5	;RP0=0, select bank0
  3482  01AB' 1303               	bcf	3,6	;RP1=0, select bank0
  3483  01AC' 00B5'              	movwf	___ftadd@f2+2
  3484  01AD' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftadd
  3485  01B2' 1283               	bcf	3,5	;RP0=0, select bank0
  3486  01B3' 1303               	bcf	3,6	;RP1=0, select bank0
  3487  01B4' 0830'              	movf	?___ftadd,w
  3488  01B5' 1683               	bsf	3,5	;RP0=1, select bank3
  3489  01B6' 1703               	bsf	3,6	;RP1=1, select bank3
  3490  01B7' 0080'              	movwf	temp_voltage@microvolt^(0+384)
  3491  01B8' 1283               	bcf	3,5	;RP0=0, select bank0
  3492  01B9' 1303               	bcf	3,6	;RP1=0, select bank0
  3493  01BA' 0831'              	movf	?___ftadd+1,w
  3494  01BB' 1683               	bsf	3,5	;RP0=1, select bank3
  3495  01BC' 1703               	bsf	3,6	;RP1=1, select bank3
  3496  01BD' 0080'              	movwf	(temp_voltage@microvolt+1)^(0+384)
  3497  01BE' 1283               	bcf	3,5	;RP0=0, select bank0
  3498  01BF' 1303               	bcf	3,6	;RP1=0, select bank0
  3499  01C0' 0832'              	movf	?___ftadd+2,w
  3500  01C1' 1683               	bsf	3,5	;RP0=1, select bank3
  3501  01C2' 1703               	bsf	3,6	;RP1=1, select bank3
  3502  01C3' 0080'              	movwf	(temp_voltage@microvolt+2)^(0+384)
  3503  01C4' 3001               	movlw	1
  3504  01C5' 0780'              	addwf	temp_voltage@i^(0+384),f
  3505  01C6' 1803               	skipnc
  3506  01C7' 0A80'              	incf	(temp_voltage@i+1)^(0+384),f
  3507  01C8' 3000               	movlw	0
  3508  01C9' 0780'              	addwf	(temp_voltage@i+1)^(0+384),f
  3509  01CA' 0800'              	movf	(temp_voltage@i+1)^(0+384),w
  3510  01CB' 3A80               	xorlw	128
  3511  01CC' 00FF               	movwf	127
  3512  01CD' 3080               	movlw	128
  3513  01CE' 027F               	subwf	127,w
  3514  01CF' 1D03               	skipz
  3515  01D0' 2800'              	goto	u7655
  3516  01D1' 3005               	movlw	5
  3517  01D2' 0200'              	subwf	temp_voltage@i^(0+384),w
  3518  01D3'                    u7655:	
  3519  01D3' 1C03               	skipc
  3520  01D4' 2800'              	goto	l5403
  3521  01D5'                    l5413:	
  3522                           
  3523                           ;user.c: 292: }
  3524                           ;user.c: 312: return microvolt/1000;
  3525  01D5' 3000               	movlw	0
  3526  01D6' 1283               	bcf	3,5	;RP0=0, select bank0
  3527  01D7' 1303               	bcf	3,6	;RP1=0, select bank0
  3528  01D8' 008A'              	movwf	___ftdiv@f2
  3529  01D9' 307A               	movlw	122
  3530  01DA' 008B'              	movwf	___ftdiv@f2+1
  3531  01DB' 3044               	movlw	68
  3532  01DC' 008C'              	movwf	___ftdiv@f2+2
  3533  01DD' 1683               	bsf	3,5	;RP0=1, select bank3
  3534  01DE' 1703               	bsf	3,6	;RP1=1, select bank3
  3535  01DF' 0800'              	movf	temp_voltage@microvolt^(0+384),w
  3536  01E0' 1283               	bcf	3,5	;RP0=0, select bank0
  3537  01E1' 1303               	bcf	3,6	;RP1=0, select bank0
  3538  01E2' 008D'              	movwf	___ftdiv@f1
  3539  01E3' 1683               	bsf	3,5	;RP0=1, select bank3
  3540  01E4' 1703               	bsf	3,6	;RP1=1, select bank3
  3541  01E5' 0800'              	movf	(temp_voltage@microvolt+1)^(0+384),w
  3542  01E6' 1283               	bcf	3,5	;RP0=0, select bank0
  3543  01E7' 1303               	bcf	3,6	;RP1=0, select bank0
  3544  01E8' 008E'              	movwf	___ftdiv@f1+1
  3545  01E9' 1683               	bsf	3,5	;RP0=1, select bank3
  3546  01EA' 1703               	bsf	3,6	;RP1=1, select bank3
  3547  01EB' 0800'              	movf	(temp_voltage@microvolt+2)^(0+384),w
  3548  01EC' 1283               	bcf	3,5	;RP0=0, select bank0
  3549  01ED' 1303               	bcf	3,6	;RP1=0, select bank0
  3550  01EE' 008F'              	movwf	___ftdiv@f1+2
  3551  01EF' 120A' 118A' 2000'  	fcall	___ftdiv
  3552  01F2' 1283               	bcf	3,5	;RP0=0, select bank0
  3553  01F3' 1303               	bcf	3,6	;RP1=0, select bank0
  3554  01F4' 080A'              	movf	?___ftdiv,w
  3555  01F5' 1683               	bsf	3,5	;RP0=1, select bank1
  3556  01F6' 1303               	bcf	3,6	;RP1=0, select bank1
  3557  01F7' 0080'              	movwf	?_temp_voltage^(0+128)
  3558  01F8' 1283               	bcf	3,5	;RP0=0, select bank0
  3559  01F9' 1303               	bcf	3,6	;RP1=0, select bank0
  3560  01FA' 080B'              	movf	?___ftdiv+1,w
  3561  01FB' 1683               	bsf	3,5	;RP0=1, select bank1
  3562  01FC' 1303               	bcf	3,6	;RP1=0, select bank1
  3563  01FD' 0080'              	movwf	(?_temp_voltage+1)^(0+128)
  3564  01FE' 1283               	bcf	3,5	;RP0=0, select bank0
  3565  01FF' 1303               	bcf	3,6	;RP1=0, select bank0
  3566  0200' 080C'              	movf	?___ftdiv+2,w
  3567  0201' 1683               	bsf	3,5	;RP0=1, select bank1
  3568  0202' 1303               	bcf	3,6	;RP1=0, select bank1
  3569  0203' 0080'              	movwf	(?_temp_voltage+2)^(0+128)
  3570  0204' 0008               	return
  3571  0205'                    __end_of_temp_voltage:	
  3572                           
  3573                           	psect	text3
  3574  0000'                    __ptext3:	
  3575 ;; *************** function _seven_segment *****************
  3576 ;; Defined at:
  3577 ;;		line 68 in file "user.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  number          3    0[BANK3 ] float 
  3580 ;;  sel             2    3[BANK3 ] int 
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;  digit           2   78[BANK1 ] int 
  3583 ;; Return value:  Size  Location     Type
  3584 ;;		None               void
  3585 ;; Registers used:
  3586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3592 ;;      Params:         0       0       0       5       0
  3593 ;;      Locals:         0       0       2       0       0
  3594 ;;      Temps:          0       0       1       0       0
  3595 ;;      Totals:         0       0       3       5       0
  3596 ;;Total ram usage:        8 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; Hardware stack levels required when called:    5
  3599 ;; This function calls:
  3600 ;;		_sprintf
  3601 ;; This function is called by:
  3602 ;;		_main
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           
  3607                           ;psect for function _seven_segment
  3608  0000'                    _seven_segment:	
  3609                           
  3610                           ;user.c: 74: static char str[((8 * sizeof(number)-1) / 3 + 2)];
  3611                           ;user.c: 75: sprintf(str, "%05.1f", number);
  3612                           
  3613                           ;incstack = 0
  3614                           ; Regs used in _seven_segment: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3615  0000' 30B0               	movlw	(STR_1-__stringbase)& (0+255)
  3616  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  3617  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  3618  0003' 0080'              	movwf	??_seven_segment^(0+128)
  3619  0004' 0800'              	movf	??_seven_segment^(0+128),w
  3620  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  3621  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  3622  0007' 00C3'              	movwf	sprintf@f
  3623  0008' 1683               	bsf	3,5	;RP0=1, select bank3
  3624  0009' 1703               	bsf	3,6	;RP1=1, select bank3
  3625  000A' 0800'              	movf	seven_segment@number^(0+384),w
  3626  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  3627  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  3628  000D' 00C4'              	movwf	?_sprintf+1
  3629  000E' 1683               	bsf	3,5	;RP0=1, select bank3
  3630  000F' 1703               	bsf	3,6	;RP1=1, select bank3
  3631  0010' 0800'              	movf	(seven_segment@number+1)^(0+384),w
  3632  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  3633  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  3634  0013' 00C5'              	movwf	?_sprintf+2
  3635  0014' 1683               	bsf	3,5	;RP0=1, select bank3
  3636  0015' 1703               	bsf	3,6	;RP1=1, select bank3
  3637  0016' 0800'              	movf	(seven_segment@number+2)^(0+384),w
  3638  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  3639  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  3640  0019' 00C6'              	movwf	?_sprintf+3
  3641  001A' 3000'              	movlw	seven_segment@str& (0+255)
  3642  001B' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  3643                           
  3644                           ;user.c: 78: for (int digit = 0; digit<6; digit++)
  3645  0020' 1683               	bsf	3,5	;RP0=1, select bank1
  3646  0021' 1303               	bcf	3,6	;RP1=0, select bank1
  3647  0022' 0180'              	clrf	seven_segment@digit^(0+128)
  3648  0023' 0180'              	clrf	(seven_segment@digit+1)^(0+128)
  3649  0024'                    L19:	
  3650  0024' 0800'              	movf	(seven_segment@digit+1)^(0+128),w
  3651  0025' 3A80               	xorlw	128
  3652  0026' 00FF               	movwf	127
  3653  0027' 3080               	movlw	128
  3654  0028' 027F               	subwf	127,w
  3655  0029' 1D03               	skipz
  3656  002A' 2800'              	goto	u7695
  3657  002B' 3006               	movlw	6
  3658  002C' 0200'              	subwf	seven_segment@digit^(0+128),w
  3659  002D'                    u7695:	
  3660  002D' 1803               	btfsc	3,0
  3661  002E' 0008               	return
  3662                           
  3663                           ;user.c: 79: {
  3664                           ;user.c: 80: PORTA = 0b11111111;
  3665  002F' 30FF               	movlw	255
  3666  0030' 1283               	bcf	3,5	;RP0=0, select bank0
  3667  0031' 1303               	bcf	3,6	;RP1=0, select bank0
  3668  0032' 0085               	movwf	5	;volatile
  3669                           
  3670                           ;user.c: 81: switch (str[digit])
  3671  0033' 2800'              	goto	l5469
  3672  0034'                    l5453:	
  3673                           ;user.c: 82: {
  3674                           ;user.c: 83: case 0x30:
  3675                           
  3676                           
  3677                           ;user.c: 84: if (digit == 0) {continue;}
  3678  0034' 1683               	bsf	3,5	;RP0=1, select bank1
  3679  0035' 1303               	bcf	3,6	;RP1=0, select bank1
  3680  0036' 0800'              	movf	(seven_segment@digit+1)^(0+128),w
  3681  0037' 0400'              	iorwf	seven_segment@digit^(0+128),w
  3682  0038' 1903               	btfsc	3,2
  3683  0039' 2800'              	goto	l5497
  3684                           
  3685                           ;user.c: 87: else if (digit == 1 && str[0] == 0x30) {continue;}
  3686  003A' 3001               	movlw	1
  3687  003B' 0600'              	xorwf	seven_segment@digit^(0+128),w
  3688  003C' 0400'              	iorwf	(seven_segment@digit+1)^(0+128),w
  3689  003D' 1D03               	skipz
  3690  003E' 2800'              	goto	l135
  3691  003F' 1283               	bcf	3,5	;RP0=0, select bank2
  3692  0040' 1703               	bsf	3,6	;RP1=1, select bank2
  3693  0041' 0800'              	movf	seven_segment@str^(0+256),w
  3694  0042' 3A30               	xorlw	48
  3695  0043' 1903               	btfsc	3,2
  3696  0044' 2800'              	goto	l5497
  3697  0045' 2800'              	goto	l135
  3698  0046'                    l129:	
  3699                           ;user.c: 102: case 0x31:
  3700                           
  3701                           ;user.c: 99: }
  3702                           ;user.c: 101: break;
  3703                           
  3704                           ;user.c: 98: PORTBbits.RB1 = 0b0;
  3705                           
  3706                           ;user.c: 97: PORTBbits.RB2 = 0b1;
  3707                           
  3708                           ;user.c: 96: PORTBbits.RB3 = 0b1;
  3709                           
  3710                           ;user.c: 95: PORTBbits.RB4 = 0b1;
  3711                           
  3712                           ;user.c: 94: PORTBbits.RB5 = 0b1;
  3713                           
  3714                           ;user.c: 93: PORTCbits.RC7 = 0b1;
  3715                           
  3716                           ;user.c: 90: else
  3717                           ;user.c: 91: {
  3718                           ;user.c: 92: PORTCbits.RC6 = 0b1;
  3719                           
  3720                           
  3721                           ;user.c: 103: PORTCbits.RC6 = 0;
  3722  0046' 1283               	bcf	3,5	;RP0=0, select bank0
  3723  0047' 1303               	bcf	3,6	;RP1=0, select bank0
  3724  0048' 1307               	bcf	7,6	;volatile
  3725                           
  3726                           ;user.c: 104: PORTCbits.RC7 = 1;
  3727  0049' 1787               	bsf	7,7	;volatile
  3728                           
  3729                           ;user.c: 105: PORTBbits.RB5 = 1;
  3730  004A' 1686               	bsf	6,5	;volatile
  3731                           
  3732                           ;user.c: 106: PORTBbits.RB4 = 0;
  3733  004B' 1206               	bcf	6,4	;volatile
  3734                           
  3735                           ;user.c: 107: PORTBbits.RB3 = 0;
  3736  004C' 1186               	bcf	6,3	;volatile
  3737                           
  3738                           ;user.c: 108: PORTBbits.RB2 = 0;
  3739  004D' 1106               	bcf	6,2	;volatile
  3740  004E' 2800'              	goto	L3
  3741  004F'                    l130:	
  3742                           ;user.c: 111: case 0x32:
  3743                           
  3744                           ;user.c: 110: break;
  3745                           
  3746                           ;user.c: 109: PORTBbits.RB1 = 0;
  3747                           
  3748                           
  3749                           ;user.c: 112: PORTCbits.RC6 = 1;
  3750  004F' 1283               	bcf	3,5	;RP0=0, select bank0
  3751  0050' 1303               	bcf	3,6	;RP1=0, select bank0
  3752  0051' 1707               	bsf	7,6	;volatile
  3753                           
  3754                           ;user.c: 113: PORTCbits.RC7 = 1;
  3755  0052' 1787               	bsf	7,7	;volatile
  3756                           
  3757                           ;user.c: 114: PORTBbits.RB5 = 0;
  3758  0053' 1286               	bcf	6,5	;volatile
  3759                           
  3760                           ;user.c: 115: PORTBbits.RB4 = 1;
  3761  0054' 1606               	bsf	6,4	;volatile
  3762                           
  3763                           ;user.c: 116: PORTBbits.RB3 = 1;
  3764  0055' 1586               	bsf	6,3	;volatile
  3765  0056' 2800'              	goto	L4
  3766  0057'                    l131:	
  3767                           ;user.c: 120: case 0x33:
  3768                           
  3769                           ;user.c: 119: break;
  3770                           
  3771                           ;user.c: 118: PORTBbits.RB1 = 1;
  3772                           
  3773                           ;user.c: 117: PORTBbits.RB2 = 0;
  3774                           
  3775                           
  3776                           ;user.c: 121: PORTCbits.RC6 = 1;
  3777  0057' 1283               	bcf	3,5	;RP0=0, select bank0
  3778  0058' 1303               	bcf	3,6	;RP1=0, select bank0
  3779  0059' 1707               	bsf	7,6	;volatile
  3780                           
  3781                           ;user.c: 122: PORTCbits.RC7 = 1;
  3782  005A' 1787               	bsf	7,7	;volatile
  3783                           
  3784                           ;user.c: 123: PORTBbits.RB5 = 1;
  3785  005B' 1686               	bsf	6,5	;volatile
  3786                           
  3787                           ;user.c: 124: PORTBbits.RB4 = 1;
  3788  005C' 1606               	bsf	6,4	;volatile
  3789                           
  3790                           ;user.c: 125: PORTBbits.RB3 = 0;
  3791  005D' 1186               	bcf	6,3	;volatile
  3792  005E'                    L4:	
  3793                           
  3794                           ;user.c: 126: PORTBbits.RB2 = 0;
  3795  005E' 1106               	bcf	6,2	;volatile
  3796  005F' 2800'              	goto	L9
  3797  0060'                    l132:	
  3798                           ;user.c: 129: case 0x34:
  3799                           
  3800                           ;user.c: 128: break;
  3801                           
  3802                           ;user.c: 127: PORTBbits.RB1 = 1;
  3803                           
  3804                           
  3805                           ;user.c: 130: PORTCbits.RC6 = 0;
  3806  0060' 1283               	bcf	3,5	;RP0=0, select bank0
  3807  0061' 1303               	bcf	3,6	;RP1=0, select bank0
  3808  0062' 1307               	bcf	7,6	;volatile
  3809  0063' 2800'              	goto	L20
  3810  0064'                    l133:	
  3811                           ;user.c: 138: case 0x35:
  3812                           
  3813                           ;user.c: 137: break;
  3814                           
  3815                           ;user.c: 136: PORTBbits.RB1 = 1;
  3816                           
  3817                           ;user.c: 135: PORTBbits.RB2 = 1;
  3818                           
  3819                           ;user.c: 134: PORTBbits.RB3 = 0;
  3820                           
  3821                           ;user.c: 133: PORTBbits.RB4 = 0;
  3822                           
  3823                           ;user.c: 132: PORTBbits.RB5 = 1;
  3824                           
  3825                           ;user.c: 131: PORTCbits.RC7 = 1;
  3826                           
  3827                           
  3828                           ;user.c: 139: PORTCbits.RC6 = 1;
  3829  0064' 1283               	bcf	3,5	;RP0=0, select bank0
  3830  0065' 1303               	bcf	3,6	;RP1=0, select bank0
  3831  0066' 1707               	bsf	7,6	;volatile
  3832                           
  3833                           ;user.c: 140: PORTCbits.RC7 = 0;
  3834  0067' 1387               	bcf	7,7	;volatile
  3835                           
  3836                           ;user.c: 141: PORTBbits.RB5 = 1;
  3837  0068' 1686               	bsf	6,5	;volatile
  3838                           
  3839                           ;user.c: 142: PORTBbits.RB4 = 1;
  3840  0069' 1606               	bsf	6,4	;volatile
  3841  006A' 2800'              	goto	L21
  3842  006B'                    l134:	
  3843                           ;user.c: 147: case 0x36:
  3844                           
  3845                           ;user.c: 146: break;
  3846                           
  3847                           ;user.c: 145: PORTBbits.RB1 = 1;
  3848                           
  3849                           ;user.c: 144: PORTBbits.RB2 = 1;
  3850                           
  3851                           ;user.c: 143: PORTBbits.RB3 = 0;
  3852                           
  3853                           
  3854                           ;user.c: 148: PORTCbits.RC6 = 1;
  3855  006B' 1283               	bcf	3,5	;RP0=0, select bank0
  3856  006C' 1303               	bcf	3,6	;RP1=0, select bank0
  3857  006D' 1707               	bsf	7,6	;volatile
  3858                           
  3859                           ;user.c: 149: PORTCbits.RC7 = 0;
  3860  006E' 1387               	bcf	7,7	;volatile
  3861  006F' 2800'              	goto	L22
  3862  0070'                    l135:	
  3863                           ;user.c: 156: case 0x37:
  3864                           
  3865                           ;user.c: 155: break;
  3866                           
  3867                           ;user.c: 154: PORTBbits.RB1 = 1;
  3868                           
  3869                           ;user.c: 153: PORTBbits.RB2 = 1;
  3870                           
  3871                           ;user.c: 152: PORTBbits.RB3 = 1;
  3872                           
  3873                           ;user.c: 151: PORTBbits.RB4 = 1;
  3874                           
  3875                           ;user.c: 150: PORTBbits.RB5 = 1;
  3876                           
  3877                           
  3878                           ;user.c: 157: PORTCbits.RC6 = 1;
  3879  0070' 1283               	bcf	3,5	;RP0=0, select bank0
  3880  0071' 1303               	bcf	3,6	;RP1=0, select bank0
  3881  0072' 1707               	bsf	7,6	;volatile
  3882                           
  3883                           ;user.c: 158: PORTCbits.RC7 = 1;
  3884  0073' 1787               	bsf	7,7	;volatile
  3885                           
  3886                           ;user.c: 159: PORTBbits.RB5 = 1;
  3887  0074' 1686               	bsf	6,5	;volatile
  3888                           
  3889                           ;user.c: 160: PORTBbits.RB4 = 1;
  3890  0075' 1606               	bsf	6,4	;volatile
  3891                           
  3892                           ;user.c: 161: PORTBbits.RB3 = 1;
  3893  0076' 1586               	bsf	6,3	;volatile
  3894                           
  3895                           ;user.c: 162: PORTBbits.RB2 = 1;
  3896  0077' 1506               	bsf	6,2	;volatile
  3897  0078'                    L3:	
  3898                           
  3899                           ;user.c: 163: PORTBbits.RB1 = 0;
  3900  0078' 1086               	bcf	6,1	;volatile
  3901                           
  3902                           ;user.c: 164: break;
  3903  0079' 2800'              	goto	l5495
  3904  007A'                    l136:	
  3905                           ;user.c: 165: case 0x38:
  3906                           
  3907                           
  3908                           ;user.c: 166: PORTCbits.RC6 = 1;
  3909  007A' 1283               	bcf	3,5	;RP0=0, select bank0
  3910  007B' 1303               	bcf	3,6	;RP1=0, select bank0
  3911  007C' 1707               	bsf	7,6	;volatile
  3912                           
  3913                           ;user.c: 167: PORTCbits.RC7 = 1;
  3914  007D' 1787               	bsf	7,7	;volatile
  3915  007E'                    L22:	
  3916                           
  3917                           ;user.c: 168: PORTBbits.RB5 = 1;
  3918  007E' 1686               	bsf	6,5	;volatile
  3919                           
  3920                           ;user.c: 169: PORTBbits.RB4 = 1;
  3921  007F' 1606               	bsf	6,4	;volatile
  3922                           
  3923                           ;user.c: 170: PORTBbits.RB3 = 1;
  3924  0080' 1586               	bsf	6,3	;volatile
  3925  0081' 2800'              	goto	L17
  3926  0082'                    l137:	
  3927                           ;user.c: 174: case 0x39:
  3928                           
  3929                           ;user.c: 173: break;
  3930                           
  3931                           ;user.c: 172: PORTBbits.RB1 = 1;
  3932                           
  3933                           ;user.c: 171: PORTBbits.RB2 = 1;
  3934                           
  3935                           
  3936                           ;user.c: 175: PORTCbits.RC6 = 1;
  3937  0082' 1283               	bcf	3,5	;RP0=0, select bank0
  3938  0083' 1303               	bcf	3,6	;RP1=0, select bank0
  3939  0084' 1707               	bsf	7,6	;volatile
  3940  0085'                    L20:	
  3941                           
  3942                           ;user.c: 176: PORTCbits.RC7 = 1;
  3943  0085' 1787               	bsf	7,7	;volatile
  3944                           
  3945                           ;user.c: 177: PORTBbits.RB5 = 1;
  3946  0086' 1686               	bsf	6,5	;volatile
  3947                           
  3948                           ;user.c: 178: PORTBbits.RB4 = 0;
  3949  0087' 1206               	bcf	6,4	;volatile
  3950  0088'                    L21:	
  3951                           
  3952                           ;user.c: 179: PORTBbits.RB3 = 0;
  3953  0088' 1186               	bcf	6,3	;volatile
  3954  0089'                    L17:	
  3955                           
  3956                           ;user.c: 180: PORTBbits.RB2 = 1;
  3957  0089' 1506               	bsf	6,2	;volatile
  3958  008A'                    L9:	
  3959                           
  3960                           ;user.c: 181: PORTBbits.RB1 = 1;
  3961  008A' 1486               	bsf	6,1	;volatile
  3962                           
  3963                           ;user.c: 182: break;
  3964  008B' 2800'              	goto	l5495
  3965  008C'                    l5469:	
  3966                           ;user.c: 193: }
  3967                           
  3968                           ;user.c: 192: continue;
  3969                           
  3970                           ;user.c: 183: case 0x2e:
  3971                           
  3972  008C' 1683               	bsf	3,5	;RP0=1, select bank1
  3973  008D' 1303               	bcf	3,6	;RP1=0, select bank1
  3974  008E' 0800'              	movf	seven_segment@digit^(0+128),w
  3975  008F' 3E00'              	addlw	seven_segment@str& (0+255)
  3976  0090' 0084               	movwf	4
  3977  0091' 1783               	bsf	3,7	;select IRP bank2
  3978  0092' 0800               	movf	0,w
  3979                           
  3980                           ; Switch size 1, requested type "space"
  3981                           ; Number of cases is 11, Range of values is 46 to 57
  3982                           ; switch strategies available:
  3983                           ; Name         Instructions Cycles
  3984                           ; simple_byte           34    18 (average)
  3985                           ; direct_byte           47    11 (fixed)
  3986                           ; jumptable            263     9 (fixed)
  3987                           ;	Chosen strategy is simple_byte
  3988  0093' 3A2E               	xorlw	46	; case 46
  3989  0094' 1903               	skipnz
  3990  0095' 2800'              	goto	l5497
  3991  0096' 3A1E               	xorlw	30	; case 48
  3992  0097' 1903               	skipnz
  3993  0098' 2800'              	goto	l5453
  3994  0099' 3A01               	xorlw	1	; case 49
  3995  009A' 1903               	skipnz
  3996  009B' 2800'              	goto	l129
  3997  009C' 3A03               	xorlw	3	; case 50
  3998  009D' 1903               	skipnz
  3999  009E' 2800'              	goto	l130
  4000  009F' 3A01               	xorlw	1	; case 51
  4001  00A0' 1903               	skipnz
  4002  00A1' 2800'              	goto	l131
  4003  00A2' 3A07               	xorlw	7	; case 52
  4004  00A3' 1903               	skipnz
  4005  00A4' 2800'              	goto	l132
  4006  00A5' 3A01               	xorlw	1	; case 53
  4007  00A6' 1903               	skipnz
  4008  00A7' 2800'              	goto	l133
  4009  00A8' 3A03               	xorlw	3	; case 54
  4010  00A9' 1903               	skipnz
  4011  00AA' 2800'              	goto	l134
  4012  00AB' 3A01               	xorlw	1	; case 55
  4013  00AC' 1903               	skipnz
  4014  00AD' 2800'              	goto	l135
  4015  00AE' 3A0F               	xorlw	15	; case 56
  4016  00AF' 1903               	skipnz
  4017  00B0' 2800'              	goto	l136
  4018  00B1' 3A01               	xorlw	1	; case 57
  4019  00B2' 1903               	skipnz
  4020  00B3' 2800'              	goto	l137
  4021  00B4' 2800'              	goto	l5495
  4022                           
  4023                           ;user.c: 195: switch (sel)
  4024  00B5' 2800'              	goto	l5495
  4025  00B6'                    l5471:	
  4026                           ;user.c: 199: {
  4027                           ;user.c: 200: case 0:
  4028                           
  4029                           ;user.c: 198: switch(digit)
  4030                           
  4031                           ;user.c: 196: {
  4032                           ;user.c: 197: case 1:
  4033                           
  4034                           
  4035                           ;user.c: 201: PORTA = 0b11110111;
  4036  00B6' 30F7               	movlw	247
  4037  00B7' 2800'              	goto	L23
  4038  00B8'                    l5473:	
  4039                           ;user.c: 203: case 1:
  4040                           
  4041                           ;user.c: 202: break;
  4042                           
  4043                           
  4044                           ;user.c: 204: PORTA = 0b11111011;
  4045  00B8' 30FB               	movlw	251
  4046  00B9' 2800'              	goto	L18
  4047  00BA'                    l5475:	
  4048                           ;user.c: 206: case 2:
  4049                           
  4050                           ;user.c: 205: break;
  4051                           
  4052                           
  4053                           ;user.c: 207: PORTA = 0b11111101;
  4054  00BA' 30FD               	movlw	253
  4055  00BB' 2800'              	goto	L18
  4056  00BC'                    l5477:	
  4057                           ;user.c: 212: case 4:
  4058                           
  4059                           ;user.c: 210: continue;
  4060                           
  4061                           ;user.c: 209: case 3:
  4062                           
  4063                           ;user.c: 208: break;
  4064                           
  4065                           
  4066                           ;user.c: 213: PORTA = 0b11111110;
  4067  00BC' 30FE               	movlw	254
  4068  00BD' 2800'              	goto	L18
  4069  00BE'                    l5481:	
  4070                           ;user.c: 215: }
  4071                           
  4072                           ;user.c: 214: break;
  4073                           
  4074                           
  4075                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4076                           ; Switch size 1, requested type "space"
  4077                           ; Number of cases is 1, Range of values is 0 to 0
  4078                           ; switch strategies available:
  4079                           ; Name         Instructions Cycles
  4080                           ; simple_byte            4     3 (average)
  4081                           ; direct_byte           11     8 (fixed)
  4082                           ; jumptable            260     6 (fixed)
  4083                           ;	Chosen strategy is simple_byte
  4084  00BE' 1683               	bsf	3,5	;RP0=1, select bank1
  4085  00BF' 1303               	bcf	3,6	;RP1=0, select bank1
  4086  00C0' 0800'              	movf	(seven_segment@digit+1)^(0+128),w
  4087  00C1' 3A00               	xorlw	0	; case 0
  4088  00C2' 1903               	skipnz
  4089  00C3' 2800'              	goto	l5799
  4090  00C4' 2800'              	goto	l5497
  4091  00C5'                    l5799:	
  4092                           
  4093                           ; Switch size 1, requested type "space"
  4094                           ; Number of cases is 5, Range of values is 0 to 4
  4095                           ; switch strategies available:
  4096                           ; Name         Instructions Cycles
  4097                           ; simple_byte           16     9 (average)
  4098                           ; direct_byte           23     8 (fixed)
  4099                           ; jumptable            260     6 (fixed)
  4100                           ;	Chosen strategy is simple_byte
  4101  00C5' 0800'              	movf	seven_segment@digit^(0+128),w
  4102  00C6' 3A00               	xorlw	0	; case 0
  4103  00C7' 1903               	skipnz
  4104  00C8' 2800'              	goto	l5471
  4105  00C9' 3A01               	xorlw	1	; case 1
  4106  00CA' 1903               	skipnz
  4107  00CB' 2800'              	goto	l5473
  4108  00CC' 3A03               	xorlw	3	; case 2
  4109  00CD' 1903               	skipnz
  4110  00CE' 2800'              	goto	l5475
  4111  00CF' 3A01               	xorlw	1	; case 3
  4112  00D0' 1903               	skipnz
  4113  00D1' 2800'              	goto	l5497
  4114  00D2' 3A07               	xorlw	7	; case 4
  4115  00D3' 1903               	skipnz
  4116  00D4' 2800'              	goto	l5477
  4117  00D5' 2800'              	goto	l5497
  4118                           
  4119                           ;user.c: 216: break;
  4120  00D6' 2800'              	goto	l5497
  4121  00D7'                    l5483:	
  4122                           ;user.c: 220: {
  4123                           ;user.c: 221: case 0:
  4124                           
  4125                           ;user.c: 219: switch(digit)
  4126                           
  4127                           ;user.c: 218: case 2:
  4128                           
  4129                           
  4130                           ;user.c: 222: PORTA = 0b01111111;
  4131  00D7' 307F               	movlw	127
  4132  00D8'                    L23:	
  4133  00D8' 1283               	bcf	3,5	;RP0=0, select bank0
  4134  00D9' 1303               	bcf	3,6	;RP1=0, select bank0
  4135  00DA' 2800'              	goto	L16
  4136  00DB'                    l5485:	
  4137                           ;user.c: 224: case 1:
  4138                           
  4139                           ;user.c: 223: break;
  4140                           
  4141                           
  4142                           ;user.c: 225: PORTA = 0b10111111;
  4143  00DB' 30BF               	movlw	191
  4144  00DC' 2800'              	goto	L18
  4145  00DD'                    l5487:	
  4146                           ;user.c: 227: case 2:
  4147                           
  4148                           ;user.c: 226: break;
  4149                           
  4150                           
  4151                           ;user.c: 228: PORTA = 0b11011111;
  4152  00DD' 30DF               	movlw	223
  4153  00DE' 2800'              	goto	L18
  4154  00DF'                    l5489:	
  4155                           ;user.c: 232: case 4:
  4156                           
  4157                           ;user.c: 231: continue;
  4158                           
  4159                           ;user.c: 230: case 3:
  4160                           
  4161                           ;user.c: 229: break;
  4162                           
  4163                           
  4164                           ;user.c: 233: PORTA = 0b11101111;
  4165  00DF' 30EF               	movlw	239
  4166  00E0'                    L18:	
  4167  00E0' 1283               	bcf	3,5	;RP0=0, select bank0
  4168  00E1'                    L16:	
  4169  00E1' 0085               	movwf	5	;volatile
  4170                           
  4171                           ;user.c: 235: }
  4172                           
  4173                           ;user.c: 234: break;
  4174  00E2' 2800'              	goto	l5497
  4175  00E3'                    l5493:	
  4176                           
  4177                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4178                           ; Switch size 1, requested type "space"
  4179                           ; Number of cases is 1, Range of values is 0 to 0
  4180                           ; switch strategies available:
  4181                           ; Name         Instructions Cycles
  4182                           ; simple_byte            4     3 (average)
  4183                           ; direct_byte           11     8 (fixed)
  4184                           ; jumptable            260     6 (fixed)
  4185                           ;	Chosen strategy is simple_byte
  4186  00E3' 1683               	bsf	3,5	;RP0=1, select bank1
  4187  00E4' 1303               	bcf	3,6	;RP1=0, select bank1
  4188  00E5' 0800'              	movf	(seven_segment@digit+1)^(0+128),w
  4189  00E6' 3A00               	xorlw	0	; case 0
  4190  00E7' 1903               	skipnz
  4191  00E8' 2800'              	goto	l5801
  4192  00E9' 2800'              	goto	l5497
  4193  00EA'                    l5801:	
  4194                           
  4195                           ; Switch size 1, requested type "space"
  4196                           ; Number of cases is 5, Range of values is 0 to 4
  4197                           ; switch strategies available:
  4198                           ; Name         Instructions Cycles
  4199                           ; simple_byte           16     9 (average)
  4200                           ; direct_byte           23     8 (fixed)
  4201                           ; jumptable            260     6 (fixed)
  4202                           ;	Chosen strategy is simple_byte
  4203  00EA' 0800'              	movf	seven_segment@digit^(0+128),w
  4204  00EB' 3A00               	xorlw	0	; case 0
  4205  00EC' 1903               	skipnz
  4206  00ED' 2800'              	goto	l5483
  4207  00EE' 3A01               	xorlw	1	; case 1
  4208  00EF' 1903               	skipnz
  4209  00F0' 2800'              	goto	l5485
  4210  00F1' 3A03               	xorlw	3	; case 2
  4211  00F2' 1903               	skipnz
  4212  00F3' 2800'              	goto	l5487
  4213  00F4' 3A01               	xorlw	1	; case 3
  4214  00F5' 1903               	skipnz
  4215  00F6' 2800'              	goto	l5497
  4216  00F7' 3A07               	xorlw	7	; case 4
  4217  00F8' 1903               	skipnz
  4218  00F9' 2800'              	goto	l5489
  4219  00FA' 2800'              	goto	l5497
  4220                           
  4221                           ;user.c: 236: }
  4222  00FB' 2800'              	goto	l5497
  4223  00FC'                    l5495:	
  4224                           
  4225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4226                           ; Switch size 1, requested type "space"
  4227                           ; Number of cases is 1, Range of values is 0 to 0
  4228                           ; switch strategies available:
  4229                           ; Name         Instructions Cycles
  4230                           ; simple_byte            4     3 (average)
  4231                           ; direct_byte           11     8 (fixed)
  4232                           ; jumptable            260     6 (fixed)
  4233                           ;	Chosen strategy is simple_byte
  4234  00FC' 1683               	bsf	3,5	;RP0=1, select bank3
  4235  00FD' 1703               	bsf	3,6	;RP1=1, select bank3
  4236  00FE' 0800'              	movf	(seven_segment@sel+1)^(0+384),w
  4237  00FF' 3A00               	xorlw	0	; case 0
  4238  0100' 1903               	skipnz
  4239  0101' 2800'              	goto	l5803
  4240  0102' 2800'              	goto	l5497
  4241  0103'                    l5803:	
  4242                           
  4243                           ; Switch size 1, requested type "space"
  4244                           ; Number of cases is 2, Range of values is 1 to 2
  4245                           ; switch strategies available:
  4246                           ; Name         Instructions Cycles
  4247                           ; simple_byte            7     4 (average)
  4248                           ; direct_byte           17    11 (fixed)
  4249                           ; jumptable            263     9 (fixed)
  4250                           ;	Chosen strategy is simple_byte
  4251  0103' 0800'              	movf	seven_segment@sel^(0+384),w
  4252  0104' 3A01               	xorlw	1	; case 1
  4253  0105' 1903               	skipnz
  4254  0106' 2800'              	goto	l5481
  4255  0107' 3A03               	xorlw	3	; case 2
  4256  0108' 1903               	skipnz
  4257  0109' 2800'              	goto	l5493
  4258  010A' 2800'              	goto	l5497
  4259  010B'                    l5497:	
  4260  010B' 3001               	movlw	1
  4261  010C' 1683               	bsf	3,5	;RP0=1, select bank1
  4262  010D' 1303               	bcf	3,6	;RP1=0, select bank1
  4263  010E' 0780'              	addwf	seven_segment@digit^(0+128),f
  4264  010F' 1803               	skipnc
  4265  0110' 0A80'              	incf	(seven_segment@digit+1)^(0+128),f
  4266  0111' 3000               	movlw	0
  4267  0112' 0780'              	addwf	(seven_segment@digit+1)^(0+128),f
  4268  0113' 2800'              	goto	L19
  4269  0114'                    __end_of_seven_segment:	
  4270                           
  4271                           	psect	text4
  4272  0000'                    __ptext4:	
  4273 ;; *************** function _select_chip *****************
  4274 ;; Defined at:
  4275 ;;		line 44 in file "user.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  chip_sel        2    4[COMMON] int 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;		None               void
  4282 ;; Registers used:
  4283 ;;		wreg
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4289 ;;      Params:         2       0       0       0       0
  4290 ;;      Locals:         0       0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0
  4292 ;;      Totals:         2       0       0       0       0
  4293 ;;Total ram usage:        2 bytes
  4294 ;; Hardware stack levels used:    1
  4295 ;; Hardware stack levels required when called:    1
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_main
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           
  4304                           ;psect for function _select_chip
  4305  0000'                    _select_chip:	
  4306                           
  4307                           ;user.c: 46: if (chip_sel == 1)
  4308                           
  4309                           ;incstack = 0
  4310                           ; Regs used in _select_chip: [wreg]
  4311  0000' 3001               	movlw	1
  4312  0001' 0604'              	xorwf	select_chip@chip_sel,w
  4313  0002' 0405'              	iorwf	select_chip@chip_sel+1,w
  4314  0003' 1D03               	skipz
  4315  0004' 2800'              	goto	l3733
  4316                           
  4317                           ;user.c: 47: {
  4318                           ;user.c: 48: PORTCbits.RC1 = 0;
  4319  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  4320  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  4321  0007' 1087               	bcf	7,1	;volatile
  4322                           
  4323                           ;user.c: 49: PORTCbits.RC2 = 1;
  4324  0008' 1507               	bsf	7,2	;volatile
  4325                           
  4326                           ;user.c: 50: }
  4327  0009' 0008               	return
  4328  000A'                    l3733:	
  4329                           
  4330                           ;user.c: 51: else if (chip_sel == 1)
  4331  000A' 3001               	movlw	1
  4332  000B' 0604'              	xorwf	select_chip@chip_sel,w
  4333  000C' 0405'              	iorwf	select_chip@chip_sel+1,w
  4334  000D' 1D03               	skipz
  4335  000E' 2800'              	goto	l106
  4336                           
  4337                           ;user.c: 52: {
  4338                           ;user.c: 53: PORTCbits.RC1 = 1;
  4339  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  4340  0010' 1303               	bcf	3,6	;RP1=0, select bank0
  4341  0011' 1487               	bsf	7,1	;volatile
  4342                           
  4343                           ;user.c: 54: PORTCbits.RC2 = 0;
  4344  0012' 1107               	bcf	7,2	;volatile
  4345                           
  4346                           ;user.c: 55: }
  4347  0013' 0008               	return
  4348  0014'                    l106:	
  4349                           
  4350                           ;user.c: 56: else
  4351                           ;user.c: 57: {
  4352                           ;user.c: 58: PORTCbits.RC1 = 1;
  4353  0014' 1283               	bcf	3,5	;RP0=0, select bank0
  4354  0015' 1303               	bcf	3,6	;RP1=0, select bank0
  4355  0016' 1487               	bsf	7,1	;volatile
  4356                           
  4357                           ;user.c: 59: PORTCbits.RC1 = 1;
  4358  0017' 1487               	bsf	7,1	;volatile
  4359  0018' 0008               	return
  4360  0019'                    __end_of_select_chip:	
  4361                           
  4362                           	psect	text5
  4363  0000'                    __ptext5:	
  4364 ;; *************** function _display_number *****************
  4365 ;; Defined at:
  4366 ;;		line 36 in file "user.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;  number          3   77[BANK0 ] float 
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;		None
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      PTR unsigned char 
  4373 ;; Registers used:
  4374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4380 ;;      Params:         0       3       0       0       0
  4381 ;;      Locals:         0       0       0       0       0
  4382 ;;      Temps:          0       0       1       0       0
  4383 ;;      Totals:         0       3       1       0       0
  4384 ;;Total ram usage:        4 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; Hardware stack levels required when called:    5
  4387 ;; This function calls:
  4388 ;;		_sprintf
  4389 ;; This function is called by:
  4390 ;;		_main
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           
  4395                           ;psect for function _display_number
  4396  0000'                    _display_number:	
  4397                           
  4398                           ;user.c: 38: static char str[((8 * sizeof(number)-1) / 3 + 2)];
  4399                           ;user.c: 39: sprintf(str, "%05.1f", number);
  4400                           
  4401                           ;incstack = 0
  4402                           ; Regs used in _display_number: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4403  0000' 30B0               	movlw	(STR_1-__stringbase)& (0+255)
  4404  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  4405  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  4406  0003' 0080'              	movwf	??_display_number^(0+128)
  4407  0004' 0800'              	movf	??_display_number^(0+128),w
  4408  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  4409  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  4410  0007' 00C3'              	movwf	sprintf@f
  4411  0008' 084D'              	movf	display_number@number,w
  4412  0009' 00C4'              	movwf	?_sprintf+1
  4413  000A' 084E'              	movf	display_number@number+1,w
  4414  000B' 00C5'              	movwf	?_sprintf+2
  4415  000C' 084F'              	movf	display_number@number+2,w
  4416  000D' 00C6'              	movwf	?_sprintf+3
  4417  000E' 3000'              	movlw	display_number@str& (0+255)
  4418  000F' 120A' 118A' 2000'  	fcall	_sprintf
  4419                           
  4420                           ;user.c: 40: return str;
  4421  0012' 3000'              	movlw	display_number@str& (0+255)
  4422  0013' 0008               	return
  4423  0014'                    __end_of_display_number:	
  4424                           
  4425                           	psect	text6
  4426  0000'                    __ptext6:	
  4427 ;; *************** function _sprintf *****************
  4428 ;; Defined at:
  4429 ;;		line 492 in file "/opt/microchip/xc8/v1.33/sources/common/doprnt.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;  sp              1    wreg     PTR unsigned char 
  4432 ;;		 -> seven_segment@str(9), display_number@str(9), 
  4433 ;;  f               1   67[BANK0 ] PTR const unsigned char 
  4434 ;;		 -> STR_2(7), STR_1(7), 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;  sp              1   34[BANK1 ] PTR unsigned char 
  4437 ;;		 -> seven_segment@str(9), display_number@str(9), 
  4438 ;;  vd              4    8[BANK1 ] unsigned long 
  4439 ;;  vd              4   12[BANK1 ] unsigned long 
  4440 ;;  _val            4   19[BANK1 ] struct .
  4441 ;;  fval            3   29[BANK1 ] struct .
  4442 ;;  integ           3   16[BANK1 ] struct .
  4443 ;;  ival            3    0        struct .
  4444 ;;  prec            2   32[BANK1 ] int 
  4445 ;;  width           2   27[BANK1 ] int 
  4446 ;;  flag            2   25[BANK1 ] unsigned short 
  4447 ;;  exp             2   23[BANK1 ] int 
  4448 ;;  c               1   35[BANK1 ] char 
  4449 ;;  ap              1    7[BANK1 ] PTR void [1]
  4450 ;;		 -> ?_sprintf(2), 
  4451 ;;  d               1    0        unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  2   67[BANK0 ] int 
  4454 ;; Registers used:
  4455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4461 ;;      Params:         0       4       0       0       0
  4462 ;;      Locals:         0       0      36       0       0
  4463 ;;      Temps:          0       6       0       0       0
  4464 ;;      Totals:         0      10      36       0       0
  4465 ;;Total ram usage:       46 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    4
  4468 ;; This function calls:
  4469 ;;		___awdiv
  4470 ;;		___ftadd
  4471 ;;		___ftge
  4472 ;;		___ftmul
  4473 ;;		___ftneg
  4474 ;;		___ftsub
  4475 ;;		___fttol
  4476 ;;		___lldiv
  4477 ;;		___llmod
  4478 ;;		___lltoft
  4479 ;;		___wmul
  4480 ;;		__div_to_l_
  4481 ;;		__tdiv_to_l_
  4482 ;;		_fround
  4483 ;;		_isdigit
  4484 ;;		_scale
  4485 ;; This function is called by:
  4486 ;;		_display_number
  4487 ;;		_seven_segment
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           
  4492                           ;psect for function _sprintf
  4493  0000'                    _sprintf:	
  4494                           
  4495                           ;incstack = 0
  4496                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4497                           ;sprintf@sp stored from wreg
  4498  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  4499  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  4500  0002' 0080'              	movwf	sprintf@sp^(0+128)
  4501                           
  4502                           ;doprnt.c: 494: va_list ap;
  4503                           ;doprnt.c: 499: signed char c;
  4504                           ;doprnt.c: 501: int width;
  4505                           ;doprnt.c: 504: int prec;
  4506                           ;doprnt.c: 508: unsigned short flag;
  4507                           ;doprnt.c: 515: char d;
  4508                           ;doprnt.c: 516: double fval, integ;
  4509                           ;doprnt.c: 517: int exp;
  4510                           ;doprnt.c: 518: double ival;
  4511                           ;doprnt.c: 519: union {
  4512                           ;doprnt.c: 520: unsigned long _val;
  4513                           ;doprnt.c: 521: struct {
  4514                           ;doprnt.c: 522: const char * _cp;
  4515                           ;doprnt.c: 523: unsigned _len;
  4516                           ;doprnt.c: 524: } _str;
  4517                           ;doprnt.c: 525: } _val;
  4518                           ;doprnt.c: 542: *ap = __va_start();
  4519  0003' 3000'              	movlw	(?_sprintf+1)& (0+255)
  4520  0004' 1283               	bcf	3,5	;RP0=0, select bank0
  4521  0005' 1303               	bcf	3,6	;RP1=0, select bank0
  4522  0006' 00C7'              	movwf	??_sprintf
  4523  0007' 0847'              	movf	??_sprintf,w
  4524  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  4525  0009' 1303               	bcf	3,6	;RP1=0, select bank1
  4526  000A' 0080'              	movwf	sprintf@ap^(0+128)
  4527  000B'                    l5323:	
  4528                           ;doprnt.c: 545: while(c = *f++) {
  4529                           
  4530  000B' 3001               	movlw	1
  4531  000C' 1283               	bcf	3,5	;RP0=0, select bank0
  4532  000D' 07C3'              	addwf	sprintf@f,f
  4533  000E' 30FF               	movlw	-1
  4534  000F' 0743'              	addwf	sprintf@f,w
  4535  0010' 0084               	movwf	4
  4536  0011' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4537  0016' 00C7'              	movwf	??_sprintf
  4538  0017' 0847'              	movf	??_sprintf,w
  4539  0018' 1683               	bsf	3,5	;RP0=1, select bank1
  4540  0019' 1303               	bcf	3,6	;RP1=0, select bank1
  4541  001A' 0080'              	movwf	sprintf@c^(0+128)
  4542  001B' 0880'              	movf	sprintf@c^(0+128),f
  4543  001C' 1903               	btfsc	3,2
  4544  001D' 2800'              	goto	L36
  4545                           
  4546                           ;doprnt.c: 547: if(c != '%')
  4547  001E' 0800'              	movf	sprintf@c^(0+128),w
  4548  001F' 3A25               	xorlw	37
  4549  0020' 1903               	skipnz
  4550  0021' 2800'              	goto	l5045
  4551                           
  4552                           ;doprnt.c: 549: {
  4553                           ;doprnt.c: 550: ((*sp++ = (c)));
  4554  0022' 0800'              	movf	sprintf@c^(0+128),w
  4555  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  4556  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  4557  0025' 120A' 118A' 2800'  	goto	L30
  4558  0028'                    l5045:	
  4559                           ;doprnt.c: 551: continue;
  4560                           
  4561                           
  4562                           ;doprnt.c: 552: }
  4563                           ;doprnt.c: 555: width = 0;
  4564  0028' 0180'              	clrf	sprintf@width^(0+128)
  4565  0029' 0180'              	clrf	(sprintf@width+1)^(0+128)
  4566                           
  4567                           ;doprnt.c: 557: flag = 0;
  4568  002A' 0180'              	clrf	sprintf@flag^(0+128)
  4569  002B' 0180'              	clrf	(sprintf@flag+1)^(0+128)
  4570                           
  4571                           ;doprnt.c: 560: switch(*f) {
  4572                           
  4573                           ;doprnt.c: 559: for(;;) {
  4574  002C' 2800'              	goto	l5051
  4575  002D'                    l220:	
  4576                           ;doprnt.c: 588: case '0':
  4577                           
  4578                           
  4579                           ;doprnt.c: 589: flag |= 0x04;
  4580  002D' 1683               	bsf	3,5	;RP0=1, select bank1
  4581  002E' 1303               	bcf	3,6	;RP1=0, select bank1
  4582  002F' 1500'              	bsf	sprintf@flag^(0+128),2
  4583                           
  4584                           ;doprnt.c: 590: f++;
  4585  0030' 3001               	movlw	1
  4586  0031' 1283               	bcf	3,5	;RP0=0, select bank0
  4587  0032' 1303               	bcf	3,6	;RP1=0, select bank0
  4588  0033' 00C7'              	movwf	??_sprintf
  4589  0034' 0847'              	movf	??_sprintf,w
  4590  0035' 07C3'              	addwf	sprintf@f,f
  4591  0036'                    l5051:	
  4592                           ;doprnt.c: 593: }
  4593                           
  4594                           ;doprnt.c: 591: continue;
  4595                           
  4596  0036' 1283               	bcf	3,5	;RP0=0, select bank0
  4597  0037' 0843'              	movf	sprintf@f,w
  4598  0038' 0084               	movwf	4
  4599  0039' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4600                           
  4601                           ; Switch size 1, requested type "space"
  4602                           ; Number of cases is 1, Range of values is 48 to 48
  4603                           ; switch strategies available:
  4604                           ; Name         Instructions Cycles
  4605                           ; simple_byte            4     3 (average)
  4606                           ; direct_byte           14    11 (fixed)
  4607                           ; jumptable            263     9 (fixed)
  4608                           ;	Chosen strategy is simple_byte
  4609  003E' 3A30               	xorlw	48	; case 48
  4610  003F' 1903               	skipnz
  4611  0040' 2800'              	goto	l220
  4612  0041' 2800'              	goto	l5053
  4613  0042'                    l5053:	
  4614                           ;doprnt.c: 595: }
  4615                           
  4616                           ;doprnt.c: 594: break;
  4617                           
  4618                           
  4619                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  4620  0042' 0843'              	movf	sprintf@f,w
  4621  0043' 0084               	movwf	4
  4622  0044' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4623  0049' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  4624  004E' 1C03               	btfss	3,0
  4625  004F' 2800'              	goto	l5065
  4626                           
  4627                           ;doprnt.c: 607: width = 0;
  4628  0050' 1683               	bsf	3,5	;RP0=1, select bank1
  4629  0051' 1303               	bcf	3,6	;RP1=0, select bank1
  4630  0052' 0180'              	clrf	sprintf@width^(0+128)
  4631  0053' 0180'              	clrf	(sprintf@width+1)^(0+128)
  4632  0054'                    l5057:	
  4633                           ;doprnt.c: 608: do {
  4634                           
  4635                           
  4636                           ;doprnt.c: 609: width *= 10;
  4637  0054' 300A               	movlw	10
  4638  0055' 0084'              	movwf	___wmul@multiplier
  4639  0056' 3000               	movlw	0
  4640  0057' 0085'              	movwf	___wmul@multiplier+1
  4641  0058' 1683               	bsf	3,5	;RP0=1, select bank1
  4642  0059' 1303               	bcf	3,6	;RP1=0, select bank1
  4643  005A' 0800'              	movf	(sprintf@width+1)^(0+128),w
  4644  005B' 0187'              	clrf	___wmul@multiplicand+1
  4645  005C' 0787'              	addwf	___wmul@multiplicand+1,f
  4646  005D' 0800'              	movf	sprintf@width^(0+128),w
  4647  005E' 0186'              	clrf	___wmul@multiplicand
  4648  005F' 0786'              	addwf	___wmul@multiplicand,f
  4649  0060' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  4650  0065' 0805'              	movf	?___wmul+1,w
  4651  0066' 1683               	bsf	3,5	;RP0=1, select bank1
  4652  0067' 1303               	bcf	3,6	;RP1=0, select bank1
  4653  0068' 0180'              	clrf	(sprintf@width+1)^(0+128)
  4654  0069' 0780'              	addwf	(sprintf@width+1)^(0+128),f
  4655  006A' 0804'              	movf	?___wmul,w
  4656  006B' 0180'              	clrf	sprintf@width^(0+128)
  4657  006C' 0780'              	addwf	sprintf@width^(0+128),f
  4658                           
  4659                           ;doprnt.c: 610: width += *f++ - '0';
  4660  006D' 1283               	bcf	3,5	;RP0=0, select bank0
  4661  006E' 1303               	bcf	3,6	;RP1=0, select bank0
  4662  006F' 0843'              	movf	sprintf@f,w
  4663  0070' 0084               	movwf	4
  4664  0071' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4665  0076' 3ED0               	addlw	208
  4666  0077' 00C7'              	movwf	??_sprintf
  4667  0078' 30FF               	movlw	255
  4668  0079' 1803               	skipnc
  4669  007A' 3000               	movlw	0
  4670  007B' 00C8'              	movwf	??_sprintf+1
  4671  007C' 0847'              	movf	??_sprintf,w
  4672  007D' 1683               	bsf	3,5	;RP0=1, select bank1
  4673  007E' 1303               	bcf	3,6	;RP1=0, select bank1
  4674  007F' 0780'              	addwf	sprintf@width^(0+128),f
  4675  0080' 1803               	skipnc
  4676  0081' 0A80'              	incf	(sprintf@width+1)^(0+128),f
  4677  0082' 1283               	bcf	3,5	;RP0=0, select bank0
  4678  0083' 1303               	bcf	3,6	;RP1=0, select bank0
  4679  0084' 0848'              	movf	??_sprintf+1,w
  4680  0085' 1683               	bsf	3,5	;RP0=1, select bank1
  4681  0086' 1303               	bcf	3,6	;RP1=0, select bank1
  4682  0087' 0780'              	addwf	(sprintf@width+1)^(0+128),f
  4683  0088' 3001               	movlw	1
  4684  0089' 1283               	bcf	3,5	;RP0=0, select bank0
  4685  008A' 1303               	bcf	3,6	;RP1=0, select bank0
  4686  008B' 00C7'              	movwf	??_sprintf
  4687  008C' 0847'              	movf	??_sprintf,w
  4688  008D' 07C3'              	addwf	sprintf@f,f
  4689                           
  4690                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  4691  008E' 0843'              	movf	sprintf@f,w
  4692  008F' 0084               	movwf	4
  4693  0090' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4694  0095' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  4695  009A' 1803               	btfsc	3,0
  4696  009B' 2800'              	goto	l5057
  4697  009C'                    l5065:	
  4698                           
  4699                           ;doprnt.c: 617: }
  4700                           ;doprnt.c: 620: if(*f == '.') {
  4701  009C' 1283               	bcf	3,5	;RP0=0, select bank0
  4702  009D' 1303               	bcf	3,6	;RP1=0, select bank0
  4703  009E' 0843'              	movf	sprintf@f,w
  4704  009F' 0084               	movwf	4
  4705  00A0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4706  00A5' 3A2E               	xorlw	46
  4707  00A6' 1D03               	skipz
  4708  00A7' 2800'              	goto	l5079
  4709                           
  4710                           ;doprnt.c: 621: flag |= 0x4000;
  4711  00A8' 1683               	bsf	3,5	;RP0=1, select bank1
  4712  00A9' 1303               	bcf	3,6	;RP1=0, select bank1
  4713  00AA' 1701'              	bsf	(sprintf@flag^(0+128)+1),6
  4714                           
  4715                           ;doprnt.c: 622: f++;
  4716  00AB' 3001               	movlw	1
  4717  00AC' 1283               	bcf	3,5	;RP0=0, select bank0
  4718  00AD' 1303               	bcf	3,6	;RP1=0, select bank0
  4719  00AE' 00C7'              	movwf	??_sprintf
  4720  00AF' 0847'              	movf	??_sprintf,w
  4721  00B0' 07C3'              	addwf	sprintf@f,f
  4722                           
  4723                           ;doprnt.c: 629: {
  4724                           ;doprnt.c: 630: prec = 0;
  4725  00B1' 1683               	bsf	3,5	;RP0=1, select bank1
  4726  00B2' 1303               	bcf	3,6	;RP1=0, select bank1
  4727  00B3' 0180'              	clrf	sprintf@prec^(0+128)
  4728  00B4' 0180'              	clrf	(sprintf@prec+1)^(0+128)
  4729  00B5'                    l5077:	
  4730                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  4731                           
  4732  00B5' 1283               	bcf	3,5	;RP0=0, select bank0
  4733  00B6' 0843'              	movf	sprintf@f,w
  4734  00B7' 0084               	movwf	4
  4735  00B8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4736  00BD' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  4737  00C2' 1C03               	btfss	3,0
  4738  00C3' 2800'              	goto	l5085
  4739                           
  4740                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  4741  00C4' 1683               	bsf	3,5	;RP0=1, select bank1
  4742  00C5' 1303               	bcf	3,6	;RP1=0, select bank1
  4743  00C6' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  4744  00C7' 0185'              	clrf	___wmul@multiplier+1
  4745  00C8' 0785'              	addwf	___wmul@multiplier+1,f
  4746  00C9' 0800'              	movf	sprintf@prec^(0+128),w
  4747  00CA' 0184'              	clrf	___wmul@multiplier
  4748  00CB' 0784'              	addwf	___wmul@multiplier,f
  4749  00CC' 300A               	movlw	10
  4750  00CD' 0086'              	movwf	___wmul@multiplicand
  4751  00CE' 3000               	movlw	0
  4752  00CF' 0087'              	movwf	___wmul@multiplicand+1
  4753  00D0' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  4754  00D5' 1283               	bcf	3,5	;RP0=0, select bank0
  4755  00D6' 1303               	bcf	3,6	;RP1=0, select bank0
  4756  00D7' 0843'              	movf	sprintf@f,w
  4757  00D8' 0084               	movwf	4
  4758  00D9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4759  00DE' 0704'              	addwf	?___wmul,w
  4760  00DF' 00C7'              	movwf	??_sprintf
  4761  00E0' 3000               	movlw	0
  4762  00E1' 1803               	skipnc
  4763  00E2' 3001               	movlw	1
  4764  00E3' 0705'              	addwf	?___wmul+1,w
  4765  00E4' 00C8'              	movwf	??_sprintf+1
  4766  00E5' 0847'              	movf	??_sprintf,w
  4767  00E6' 3ED0               	addlw	208
  4768  00E7' 1683               	bsf	3,5	;RP0=1, select bank1
  4769  00E8' 1303               	bcf	3,6	;RP1=0, select bank1
  4770  00E9' 0080'              	movwf	sprintf@prec^(0+128)
  4771  00EA' 1283               	bcf	3,5	;RP0=0, select bank0
  4772  00EB' 1303               	bcf	3,6	;RP1=0, select bank0
  4773  00EC' 0848'              	movf	??_sprintf+1,w
  4774  00ED' 1803               	skipnc
  4775  00EE' 3E01               	addlw	1
  4776  00EF' 3EFF               	addlw	255
  4777  00F0' 1683               	bsf	3,5	;RP0=1, select bank1
  4778  00F1' 1303               	bcf	3,6	;RP1=0, select bank1
  4779  00F2' 0080'              	movwf	(sprintf@prec+1)^(0+128)
  4780  00F3' 3001               	movlw	1
  4781  00F4' 1283               	bcf	3,5	;RP0=0, select bank0
  4782  00F5' 1303               	bcf	3,6	;RP1=0, select bank0
  4783  00F6' 00C7'              	movwf	??_sprintf
  4784  00F7' 0847'              	movf	??_sprintf,w
  4785  00F8' 07C3'              	addwf	sprintf@f,f
  4786  00F9' 2800'              	goto	l5077
  4787  00FA'                    l5079:	
  4788                           ;doprnt.c: 633: }
  4789                           ;doprnt.c: 634: } else {
  4790                           
  4791                           
  4792                           ;doprnt.c: 635: prec = 0;
  4793  00FA' 1683               	bsf	3,5	;RP0=1, select bank1
  4794  00FB' 1303               	bcf	3,6	;RP1=0, select bank1
  4795  00FC' 0180'              	clrf	sprintf@prec^(0+128)
  4796  00FD' 0180'              	clrf	(sprintf@prec+1)^(0+128)
  4797                           
  4798                           ;doprnt.c: 637: flag |= 0x1000;
  4799  00FE' 1601'              	bsf	(sprintf@flag^(0+128)+1),4
  4800                           
  4801                           ;doprnt.c: 639: }
  4802                           ;doprnt.c: 644: switch(c = *f++) {
  4803  00FF' 2800'              	goto	l5085
  4804  0100'                    l235:	
  4805                           ;doprnt.c: 671: case 'f':
  4806                           
  4807                           ;doprnt.c: 647: goto alldone;
  4808                           
  4809                           ;doprnt.c: 646: case 0:
  4810                           
  4811                           
  4812                           ;doprnt.c: 672: flag |= 0x400;
  4813  0100' 1501'              	bsf	(sprintf@flag^(0+128)+1),2
  4814                           
  4815                           ;doprnt.c: 673: break;
  4816  0101' 2800'              	goto	l5087
  4817  0102'                    l5085:	
  4818                           ;doprnt.c: 831: }
  4819                           
  4820                           ;doprnt.c: 822: continue;
  4821                           
  4822                           ;doprnt.c: 811: default:
  4823                           
  4824  0102' 3001               	movlw	1
  4825  0103' 1283               	bcf	3,5	;RP0=0, select bank0
  4826  0104' 1303               	bcf	3,6	;RP1=0, select bank0
  4827  0105' 07C3'              	addwf	sprintf@f,f
  4828  0106' 30FF               	movlw	-1
  4829  0107' 0743'              	addwf	sprintf@f,w
  4830  0108' 0084               	movwf	4
  4831  0109' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4832  010E' 1683               	bsf	3,5	;RP0=1, select bank1
  4833  010F' 1303               	bcf	3,6	;RP1=0, select bank1
  4834  0110' 0080'              	movwf	sprintf@c^(0+128)
  4835                           
  4836                           ; Switch size 1, requested type "space"
  4837                           ; Number of cases is 2, Range of values is 0 to 102
  4838                           ; switch strategies available:
  4839                           ; Name         Instructions Cycles
  4840                           ; simple_byte            7     4 (average)
  4841                           ; jumptable            260     6 (fixed)
  4842                           ;	Chosen strategy is simple_byte
  4843  0111' 3A00               	xorlw	0	; case 0
  4844  0112' 1903               	skipnz
  4845  0113' 2800'              	goto	L36
  4846  0114' 3A66               	xorlw	102	; case 102
  4847  0115' 1903               	skipnz
  4848  0116' 2800'              	goto	l235
  4849  0117' 2800'              	goto	l5323
  4850  0118'                    l5087:	
  4851                           
  4852                           ;doprnt.c: 834: if(flag & (0x700)) {
  4853  0118' 3000               	movlw	0
  4854  0119' 0500'              	andwf	sprintf@flag^(0+128),w
  4855  011A' 1283               	bcf	3,5	;RP0=0, select bank0
  4856  011B' 1303               	bcf	3,6	;RP1=0, select bank0
  4857  011C' 00C7'              	movwf	??_sprintf
  4858  011D' 3007               	movlw	7
  4859  011E' 1683               	bsf	3,5	;RP0=1, select bank1
  4860  011F' 1303               	bcf	3,6	;RP1=0, select bank1
  4861  0120' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
  4862  0121' 1283               	bcf	3,5	;RP0=0, select bank0
  4863  0122' 1303               	bcf	3,6	;RP1=0, select bank0
  4864  0123' 00C8'              	movwf	??_sprintf+1
  4865  0124' 0848'              	movf	??_sprintf+1,w
  4866  0125' 0447'              	iorwf	??_sprintf,w
  4867  0126' 1903               	skipnz
  4868  0127' 2800'              	goto	L38
  4869                           
  4870                           ;doprnt.c: 836: if(flag & 0x1000)
  4871  0128' 1683               	bsf	3,5	;RP0=1, select bank1
  4872  0129' 1303               	bcf	3,6	;RP1=0, select bank1
  4873  012A' 1E00'              	btfss	(sprintf@flag+1)^(0+128),4
  4874  012B' 2800'              	goto	l5093
  4875                           
  4876                           ;doprnt.c: 838: prec = 6;
  4877  012C' 3006               	movlw	6
  4878  012D' 0080'              	movwf	sprintf@prec^(0+128)
  4879  012E' 3000               	movlw	0
  4880  012F' 0081'              	movwf	(sprintf@prec^(0+128)+1)
  4881  0130'                    l5093:	
  4882                           
  4883                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4884  0130' 0800'              	movf	sprintf@ap^(0+128),w
  4885  0131' 0084               	movwf	4
  4886  0132' 1383               	bcf	3,7	;select IRP bank0
  4887  0133' 0800               	movf	0,w
  4888  0134' 0080'              	movwf	sprintf@fval^(0+128)
  4889  0135' 0A84               	incf	4,f
  4890  0136' 0800               	movf	0,w
  4891  0137' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  4892  0138' 0A84               	incf	4,f
  4893  0139' 0800               	movf	0,w
  4894  013A' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  4895  013B' 3003               	movlw	3
  4896  013C' 1283               	bcf	3,5	;RP0=0, select bank0
  4897  013D' 1303               	bcf	3,6	;RP1=0, select bank0
  4898  013E' 00C7'              	movwf	??_sprintf
  4899  013F' 0847'              	movf	??_sprintf,w
  4900  0140' 1683               	bsf	3,5	;RP0=1, select bank1
  4901  0141' 1303               	bcf	3,6	;RP1=0, select bank1
  4902  0142' 0780'              	addwf	sprintf@ap^(0+128),f
  4903                           
  4904                           ;doprnt.c: 840: if(fval < 0.0) {
  4905  0143' 0800'              	movf	sprintf@fval^(0+128),w
  4906  0144' 1283               	bcf	3,5	;RP0=0, select bank0
  4907  0145' 1303               	bcf	3,6	;RP1=0, select bank0
  4908  0146' 0080'              	movwf	___ftge@ff1
  4909  0147' 1683               	bsf	3,5	;RP0=1, select bank1
  4910  0148' 1303               	bcf	3,6	;RP1=0, select bank1
  4911  0149' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  4912  014A' 1283               	bcf	3,5	;RP0=0, select bank0
  4913  014B' 1303               	bcf	3,6	;RP1=0, select bank0
  4914  014C' 0081'              	movwf	___ftge@ff1+1
  4915  014D' 1683               	bsf	3,5	;RP0=1, select bank1
  4916  014E' 1303               	bcf	3,6	;RP1=0, select bank1
  4917  014F' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  4918  0150' 1283               	bcf	3,5	;RP0=0, select bank0
  4919  0151' 1303               	bcf	3,6	;RP1=0, select bank0
  4920  0152' 0082'              	movwf	___ftge@ff1+2
  4921  0153' 3000               	movlw	0
  4922  0154' 0083'              	movwf	___ftge@ff2
  4923  0155' 3000               	movlw	0
  4924  0156' 0084'              	movwf	___ftge@ff2+1
  4925  0157' 3000               	movlw	0
  4926  0158' 0085'              	movwf	___ftge@ff2+2
  4927  0159' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  4928  015E' 1803               	btfsc	3,0
  4929  015F' 2800'              	goto	l5103
  4930                           
  4931                           ;doprnt.c: 841: fval = -fval;
  4932  0160' 1683               	bsf	3,5	;RP0=1, select bank1
  4933  0161' 1303               	bcf	3,6	;RP1=0, select bank1
  4934  0162' 0800'              	movf	sprintf@fval^(0+128),w
  4935  0163' 0084'              	movwf	___ftneg@f1
  4936  0164' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  4937  0165' 0085'              	movwf	___ftneg@f1+1
  4938  0166' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  4939  0167' 0086'              	movwf	___ftneg@f1+2
  4940  0168' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftneg
  4941  016D' 0804'              	movf	?___ftneg,w
  4942  016E' 1683               	bsf	3,5	;RP0=1, select bank1
  4943  016F' 1303               	bcf	3,6	;RP1=0, select bank1
  4944  0170' 0080'              	movwf	sprintf@fval^(0+128)
  4945  0171' 0805'              	movf	?___ftneg+1,w
  4946  0172' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  4947  0173' 0806'              	movf	?___ftneg+2,w
  4948  0174' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  4949                           
  4950                           ;doprnt.c: 842: flag |= 0x03;
  4951  0175' 3003               	movlw	3
  4952  0176' 0480'              	iorwf	sprintf@flag^(0+128),f
  4953  0177' 3000               	movlw	0
  4954  0178' 0480'              	iorwf	(sprintf@flag+1)^(0+128),f
  4955  0179'                    l5103:	
  4956                           
  4957                           ;doprnt.c: 843: }
  4958                           ;doprnt.c: 844: exp = 0;
  4959  0179' 1683               	bsf	3,5	;RP0=1, select bank1
  4960  017A' 1303               	bcf	3,6	;RP1=0, select bank1
  4961  017B' 0180'              	clrf	sprintf@exp^(0+128)
  4962  017C' 0180'              	clrf	(sprintf@exp+1)^(0+128)
  4963                           
  4964                           ;doprnt.c: 845: if( fval!=0) {
  4965  017D' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  4966  017E' 0400'              	iorwf	(sprintf@fval+1)^(0+128),w
  4967  017F' 0400'              	iorwf	sprintf@fval^(0+128),w
  4968  0180' 1903               	skipnz
  4969  0181' 2800'              	goto	l5131
  4970                           
  4971                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  4972  0182' 3000'              	movlw	low sprintf@fval
  4973  0183' 0084               	movwf	4
  4974  0184' 1383               	bcf	3,7	;select IRP bank1
  4975  0185' 0800               	movf	0,w
  4976  0186' 1283               	bcf	3,5	;RP0=0, select bank0
  4977  0187' 1303               	bcf	3,6	;RP1=0, select bank0
  4978  0188' 00C7'              	movwf	??_sprintf
  4979  0189' 0A84               	incf	4,f
  4980  018A' 0800               	movf	0,w
  4981  018B' 00C8'              	movwf	??_sprintf+1
  4982  018C' 0A84               	incf	4,f
  4983  018D' 0800               	movf	0,w
  4984  018E' 00C9'              	movwf	??_sprintf+2
  4985  018F' 0A84               	incf	4,f
  4986  0190' 0800               	movf	0,w
  4987  0191' 00CA'              	movwf	??_sprintf+3
  4988  0192' 300F               	movlw	15
  4989  0193'                    u7095:	
  4990  0193' 1003               	clrc
  4991  0194' 0CCA'              	rrf	??_sprintf+3,f
  4992  0195' 0CC9'              	rrf	??_sprintf+2,f
  4993  0196' 0CC8'              	rrf	??_sprintf+1,f
  4994  0197' 0CC7'              	rrf	??_sprintf,f
  4995  0198' 3EFF               	addlw	-1
  4996  0199' 1D03               	skipz
  4997  019A' 2800'              	goto	u7095
  4998  019B' 30FF               	movlw	255
  4999  019C' 0547'              	andwf	??_sprintf,w
  5000  019D' 00CB'              	movwf	??_sprintf+4
  5001  019E' 3000               	movlw	0
  5002  019F' 0548'              	andwf	??_sprintf+1,w
  5003  01A0' 00CC'              	movwf	??_sprintf+5
  5004  01A1' 084B'              	movf	??_sprintf+4,w
  5005  01A2' 3E82               	addlw	130
  5006  01A3' 1683               	bsf	3,5	;RP0=1, select bank1
  5007  01A4' 1303               	bcf	3,6	;RP1=0, select bank1
  5008  01A5' 0080'              	movwf	sprintf@exp^(0+128)
  5009  01A6' 1283               	bcf	3,5	;RP0=0, select bank0
  5010  01A7' 1303               	bcf	3,6	;RP1=0, select bank0
  5011  01A8' 084C'              	movf	??_sprintf+5,w
  5012  01A9' 1803               	skipnc
  5013  01AA' 3E01               	addlw	1
  5014  01AB' 3EFF               	addlw	255
  5015  01AC' 1683               	bsf	3,5	;RP0=1, select bank1
  5016  01AD' 1303               	bcf	3,6	;RP1=0, select bank1
  5017  01AE' 0080'              	movwf	(sprintf@exp+1)^(0+128)
  5018                           
  5019                           ;doprnt.c: 847: exp--;
  5020  01AF' 30FF               	movlw	255
  5021  01B0' 0780'              	addwf	sprintf@exp^(0+128),f
  5022  01B1' 1803               	skipnc
  5023  01B2' 0A80'              	incf	(sprintf@exp+1)^(0+128),f
  5024  01B3' 30FF               	movlw	255
  5025  01B4' 0780'              	addwf	(sprintf@exp+1)^(0+128),f
  5026                           
  5027                           ;doprnt.c: 848: exp *= 3;
  5028  01B5' 3003               	movlw	3
  5029  01B6' 0084'              	movwf	___wmul@multiplier
  5030  01B7' 3000               	movlw	0
  5031  01B8' 0085'              	movwf	___wmul@multiplier+1
  5032  01B9' 0800'              	movf	(sprintf@exp+1)^(0+128),w
  5033  01BA' 0187'              	clrf	___wmul@multiplicand+1
  5034  01BB' 0787'              	addwf	___wmul@multiplicand+1,f
  5035  01BC' 0800'              	movf	sprintf@exp^(0+128),w
  5036  01BD' 0186'              	clrf	___wmul@multiplicand
  5037  01BE' 0786'              	addwf	___wmul@multiplicand,f
  5038  01BF' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  5039  01C4' 0805'              	movf	?___wmul+1,w
  5040  01C5' 1683               	bsf	3,5	;RP0=1, select bank1
  5041  01C6' 1303               	bcf	3,6	;RP1=0, select bank1
  5042  01C7' 0180'              	clrf	(sprintf@exp+1)^(0+128)
  5043  01C8' 0780'              	addwf	(sprintf@exp+1)^(0+128),f
  5044  01C9' 0804'              	movf	?___wmul,w
  5045  01CA' 0180'              	clrf	sprintf@exp^(0+128)
  5046  01CB' 0780'              	addwf	sprintf@exp^(0+128),f
  5047                           
  5048                           ;doprnt.c: 849: exp /= 10;
  5049  01CC' 300A               	movlw	10
  5050  01CD' 1283               	bcf	3,5	;RP0=0, select bank0
  5051  01CE' 1303               	bcf	3,6	;RP1=0, select bank0
  5052  01CF' 0083'              	movwf	___awdiv@divisor
  5053  01D0' 3000               	movlw	0
  5054  01D1' 0084'              	movwf	___awdiv@divisor+1
  5055  01D2' 1683               	bsf	3,5	;RP0=1, select bank1
  5056  01D3' 1303               	bcf	3,6	;RP1=0, select bank1
  5057  01D4' 0800'              	movf	(sprintf@exp+1)^(0+128),w
  5058  01D5' 1283               	bcf	3,5	;RP0=0, select bank0
  5059  01D6' 1303               	bcf	3,6	;RP1=0, select bank0
  5060  01D7' 0186'              	clrf	___awdiv@dividend+1
  5061  01D8' 0786'              	addwf	___awdiv@dividend+1,f
  5062  01D9' 1683               	bsf	3,5	;RP0=1, select bank1
  5063  01DA' 1303               	bcf	3,6	;RP1=0, select bank1
  5064  01DB' 0800'              	movf	sprintf@exp^(0+128),w
  5065  01DC' 1283               	bcf	3,5	;RP0=0, select bank0
  5066  01DD' 1303               	bcf	3,6	;RP1=0, select bank0
  5067  01DE' 0185'              	clrf	___awdiv@dividend
  5068  01DF' 0785'              	addwf	___awdiv@dividend,f
  5069  01E0' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  5070  01E5' 1283               	bcf	3,5	;RP0=0, select bank0
  5071  01E6' 1303               	bcf	3,6	;RP1=0, select bank0
  5072  01E7' 0804'              	movf	?___awdiv+1,w
  5073  01E8' 1683               	bsf	3,5	;RP0=1, select bank1
  5074  01E9' 1303               	bcf	3,6	;RP1=0, select bank1
  5075  01EA' 0180'              	clrf	(sprintf@exp+1)^(0+128)
  5076  01EB' 0780'              	addwf	(sprintf@exp+1)^(0+128),f
  5077  01EC' 1283               	bcf	3,5	;RP0=0, select bank0
  5078  01ED' 1303               	bcf	3,6	;RP1=0, select bank0
  5079  01EE' 0803'              	movf	?___awdiv,w
  5080  01EF' 1683               	bsf	3,5	;RP0=1, select bank1
  5081  01F0' 1303               	bcf	3,6	;RP1=0, select bank1
  5082  01F1' 0180'              	clrf	sprintf@exp^(0+128)
  5083  01F2' 0780'              	addwf	sprintf@exp^(0+128),f
  5084                           
  5085                           ;doprnt.c: 850: if(exp < 0)
  5086  01F3' 1F80'              	btfss	(sprintf@exp+1)^(0+128),7
  5087  01F4' 2800'              	goto	l5119
  5088                           
  5089                           ;doprnt.c: 851: exp--;
  5090  01F5' 30FF               	movlw	255
  5091  01F6' 0780'              	addwf	sprintf@exp^(0+128),f
  5092  01F7' 1803               	skipnc
  5093  01F8' 0A80'              	incf	(sprintf@exp+1)^(0+128),f
  5094  01F9' 30FF               	movlw	255
  5095  01FA' 0780'              	addwf	(sprintf@exp+1)^(0+128),f
  5096  01FB'                    l5119:	
  5097                           
  5098                           ;doprnt.c: 855: integ = scale(-exp);
  5099  01FB' 0300'              	decf	sprintf@exp^(0+128),w
  5100  01FC' 3AFF               	xorlw	255
  5101  01FD' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  5102  0202' 1283               	bcf	3,5	;RP0=0, select bank0
  5103  0203' 1303               	bcf	3,6	;RP1=0, select bank0
  5104  0204' 0820'              	movf	?_scale,w
  5105  0205' 1683               	bsf	3,5	;RP0=1, select bank1
  5106  0206' 1303               	bcf	3,6	;RP1=0, select bank1
  5107  0207' 0080'              	movwf	sprintf@integ^(0+128)
  5108  0208' 1283               	bcf	3,5	;RP0=0, select bank0
  5109  0209' 1303               	bcf	3,6	;RP1=0, select bank0
  5110  020A' 0821'              	movf	?_scale+1,w
  5111  020B' 1683               	bsf	3,5	;RP0=1, select bank1
  5112  020C' 1303               	bcf	3,6	;RP1=0, select bank1
  5113  020D' 0080'              	movwf	(sprintf@integ+1)^(0+128)
  5114  020E' 1283               	bcf	3,5	;RP0=0, select bank0
  5115  020F' 1303               	bcf	3,6	;RP1=0, select bank0
  5116  0210' 0822'              	movf	?_scale+2,w
  5117  0211' 1683               	bsf	3,5	;RP0=1, select bank1
  5118  0212' 1303               	bcf	3,6	;RP1=0, select bank1
  5119  0213' 0080'              	movwf	(sprintf@integ+2)^(0+128)
  5120                           
  5121                           ;doprnt.c: 856: integ *= fval;
  5122  0214' 0800'              	movf	sprintf@fval^(0+128),w
  5123  0215' 1283               	bcf	3,5	;RP0=0, select bank0
  5124  0216' 1303               	bcf	3,6	;RP1=0, select bank0
  5125  0217' 0090'              	movwf	___ftmul@f1
  5126  0218' 1683               	bsf	3,5	;RP0=1, select bank1
  5127  0219' 1303               	bcf	3,6	;RP1=0, select bank1
  5128  021A' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  5129  021B' 1283               	bcf	3,5	;RP0=0, select bank0
  5130  021C' 1303               	bcf	3,6	;RP1=0, select bank0
  5131  021D' 0091'              	movwf	___ftmul@f1+1
  5132  021E' 1683               	bsf	3,5	;RP0=1, select bank1
  5133  021F' 1303               	bcf	3,6	;RP1=0, select bank1
  5134  0220' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  5135  0221' 1283               	bcf	3,5	;RP0=0, select bank0
  5136  0222' 1303               	bcf	3,6	;RP1=0, select bank0
  5137  0223' 0092'              	movwf	___ftmul@f1+2
  5138  0224' 1683               	bsf	3,5	;RP0=1, select bank1
  5139  0225' 1303               	bcf	3,6	;RP1=0, select bank1
  5140  0226' 0800'              	movf	sprintf@integ^(0+128),w
  5141  0227' 1283               	bcf	3,5	;RP0=0, select bank0
  5142  0228' 1303               	bcf	3,6	;RP1=0, select bank0
  5143  0229' 0093'              	movwf	___ftmul@f2
  5144  022A' 1683               	bsf	3,5	;RP0=1, select bank1
  5145  022B' 1303               	bcf	3,6	;RP1=0, select bank1
  5146  022C' 0800'              	movf	(sprintf@integ+1)^(0+128),w
  5147  022D' 1283               	bcf	3,5	;RP0=0, select bank0
  5148  022E' 1303               	bcf	3,6	;RP1=0, select bank0
  5149  022F' 0094'              	movwf	___ftmul@f2+1
  5150  0230' 1683               	bsf	3,5	;RP0=1, select bank1
  5151  0231' 1303               	bcf	3,6	;RP1=0, select bank1
  5152  0232' 0800'              	movf	(sprintf@integ+2)^(0+128),w
  5153  0233' 1283               	bcf	3,5	;RP0=0, select bank0
  5154  0234' 1303               	bcf	3,6	;RP1=0, select bank0
  5155  0235' 0095'              	movwf	___ftmul@f2+2
  5156  0236' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  5157  023B' 1283               	bcf	3,5	;RP0=0, select bank0
  5158  023C' 1303               	bcf	3,6	;RP1=0, select bank0
  5159  023D' 0810'              	movf	?___ftmul,w
  5160  023E' 1683               	bsf	3,5	;RP0=1, select bank1
  5161  023F' 1303               	bcf	3,6	;RP1=0, select bank1
  5162  0240' 0080'              	movwf	sprintf@integ^(0+128)
  5163  0241' 1283               	bcf	3,5	;RP0=0, select bank0
  5164  0242' 1303               	bcf	3,6	;RP1=0, select bank0
  5165  0243' 0811'              	movf	?___ftmul+1,w
  5166  0244' 1683               	bsf	3,5	;RP0=1, select bank1
  5167  0245' 1303               	bcf	3,6	;RP1=0, select bank1
  5168  0246' 0080'              	movwf	(sprintf@integ+1)^(0+128)
  5169  0247' 1283               	bcf	3,5	;RP0=0, select bank0
  5170  0248' 1303               	bcf	3,6	;RP1=0, select bank0
  5171  0249' 0812'              	movf	?___ftmul+2,w
  5172  024A' 1683               	bsf	3,5	;RP0=1, select bank1
  5173  024B' 1303               	bcf	3,6	;RP1=0, select bank1
  5174  024C' 0080'              	movwf	(sprintf@integ+2)^(0+128)
  5175                           
  5176                           ;doprnt.c: 857: if(integ < 1.0)
  5177  024D' 0800'              	movf	sprintf@integ^(0+128),w
  5178  024E' 1283               	bcf	3,5	;RP0=0, select bank0
  5179  024F' 1303               	bcf	3,6	;RP1=0, select bank0
  5180  0250' 0080'              	movwf	___ftge@ff1
  5181  0251' 1683               	bsf	3,5	;RP0=1, select bank1
  5182  0252' 1303               	bcf	3,6	;RP1=0, select bank1
  5183  0253' 0800'              	movf	(sprintf@integ+1)^(0+128),w
  5184  0254' 1283               	bcf	3,5	;RP0=0, select bank0
  5185  0255' 1303               	bcf	3,6	;RP1=0, select bank0
  5186  0256' 0081'              	movwf	___ftge@ff1+1
  5187  0257' 1683               	bsf	3,5	;RP0=1, select bank1
  5188  0258' 1303               	bcf	3,6	;RP1=0, select bank1
  5189  0259' 0800'              	movf	(sprintf@integ+2)^(0+128),w
  5190  025A' 1283               	bcf	3,5	;RP0=0, select bank0
  5191  025B' 1303               	bcf	3,6	;RP1=0, select bank0
  5192  025C' 0082'              	movwf	___ftge@ff1+2
  5193  025D' 3000               	movlw	0
  5194  025E' 0083'              	movwf	___ftge@ff2
  5195  025F' 3080               	movlw	128
  5196  0260' 0084'              	movwf	___ftge@ff2+1
  5197  0261' 303F               	movlw	63
  5198  0262' 0085'              	movwf	___ftge@ff2+2
  5199  0263' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  5200  0268' 1803               	btfsc	3,0
  5201  0269' 2800'              	goto	l5127
  5202                           
  5203                           ;doprnt.c: 858: exp--;
  5204  026A' 30FF               	movlw	255
  5205  026B' 1683               	bsf	3,5	;RP0=1, select bank1
  5206  026C' 1303               	bcf	3,6	;RP1=0, select bank1
  5207  026D' 0780'              	addwf	sprintf@exp^(0+128),f
  5208  026E' 1803               	skipnc
  5209  026F' 0A80'              	incf	(sprintf@exp+1)^(0+128),f
  5210  0270' 30FF               	movlw	255
  5211  0271' 2800'              	goto	L25
  5212  0272'                    l5127:	
  5213                           
  5214                           ;doprnt.c: 859: else if(integ >= 10.0)
  5215  0272' 1683               	bsf	3,5	;RP0=1, select bank1
  5216  0273' 1303               	bcf	3,6	;RP1=0, select bank1
  5217  0274' 0800'              	movf	sprintf@integ^(0+128),w
  5218  0275' 1283               	bcf	3,5	;RP0=0, select bank0
  5219  0276' 1303               	bcf	3,6	;RP1=0, select bank0
  5220  0277' 0080'              	movwf	___ftge@ff1
  5221  0278' 1683               	bsf	3,5	;RP0=1, select bank1
  5222  0279' 1303               	bcf	3,6	;RP1=0, select bank1
  5223  027A' 0800'              	movf	(sprintf@integ+1)^(0+128),w
  5224  027B' 1283               	bcf	3,5	;RP0=0, select bank0
  5225  027C' 1303               	bcf	3,6	;RP1=0, select bank0
  5226  027D' 0081'              	movwf	___ftge@ff1+1
  5227  027E' 1683               	bsf	3,5	;RP0=1, select bank1
  5228  027F' 1303               	bcf	3,6	;RP1=0, select bank1
  5229  0280' 0800'              	movf	(sprintf@integ+2)^(0+128),w
  5230  0281' 1283               	bcf	3,5	;RP0=0, select bank0
  5231  0282' 1303               	bcf	3,6	;RP1=0, select bank0
  5232  0283' 0082'              	movwf	___ftge@ff1+2
  5233  0284' 3000               	movlw	0
  5234  0285' 0083'              	movwf	___ftge@ff2
  5235  0286' 3020               	movlw	32
  5236  0287' 0084'              	movwf	___ftge@ff2+1
  5237  0288' 3041               	movlw	65
  5238  0289' 0085'              	movwf	___ftge@ff2+2
  5239  028A' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  5240  028F' 1C03               	btfss	3,0
  5241  0290' 2800'              	goto	l5131
  5242                           
  5243                           ;doprnt.c: 860: exp++;
  5244  0291' 3001               	movlw	1
  5245  0292' 1683               	bsf	3,5	;RP0=1, select bank1
  5246  0293' 1303               	bcf	3,6	;RP1=0, select bank1
  5247  0294' 0780'              	addwf	sprintf@exp^(0+128),f
  5248  0295' 1803               	skipnc
  5249  0296' 0A80'              	incf	(sprintf@exp+1)^(0+128),f
  5250  0297' 3000               	movlw	0
  5251  0298'                    L25:	
  5252  0298' 0780'              	addwf	(sprintf@exp+1)^(0+128),f
  5253  0299'                    l5131:	
  5254                           
  5255                           ;doprnt.c: 861: }
  5256                           ;doprnt.c: 1121: if(prec <= 12)
  5257  0299' 1683               	bsf	3,5	;RP0=1, select bank1
  5258  029A' 1303               	bcf	3,6	;RP1=0, select bank1
  5259  029B' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  5260  029C' 3A80               	xorlw	128
  5261  029D' 00FF               	movwf	127
  5262  029E' 3080               	movlw	128
  5263  029F' 027F               	subwf	127,w
  5264  02A0' 1D03               	skipz
  5265  02A1' 2800'              	goto	u7135
  5266  02A2' 300D               	movlw	13
  5267  02A3' 0200'              	subwf	sprintf@prec^(0+128),w
  5268  02A4'                    u7135:	
  5269  02A4' 1803               	skipnc
  5270  02A5' 2800'              	goto	l5135
  5271                           
  5272                           ;doprnt.c: 1122: fval += fround(prec);
  5273  02A6' 1683               	bsf	3,5	;RP0=1, select bank1
  5274  02A7' 1303               	bcf	3,6	;RP1=0, select bank1
  5275  02A8' 0800'              	movf	sprintf@prec^(0+128),w
  5276  02A9' 120A' 118A' 2000' 120A' 118A' 	fcall	_fround
  5277  02AE' 1283               	bcf	3,5	;RP0=0, select bank0
  5278  02AF' 1303               	bcf	3,6	;RP1=0, select bank0
  5279  02B0' 0820'              	movf	?_fround,w
  5280  02B1' 00B0'              	movwf	___ftadd@f1
  5281  02B2' 0821'              	movf	?_fround+1,w
  5282  02B3' 00B1'              	movwf	___ftadd@f1+1
  5283  02B4' 0822'              	movf	?_fround+2,w
  5284  02B5' 00B2'              	movwf	___ftadd@f1+2
  5285  02B6' 1683               	bsf	3,5	;RP0=1, select bank1
  5286  02B7' 1303               	bcf	3,6	;RP1=0, select bank1
  5287  02B8' 0800'              	movf	sprintf@fval^(0+128),w
  5288  02B9' 1283               	bcf	3,5	;RP0=0, select bank0
  5289  02BA' 1303               	bcf	3,6	;RP1=0, select bank0
  5290  02BB' 00B3'              	movwf	___ftadd@f2
  5291  02BC' 1683               	bsf	3,5	;RP0=1, select bank1
  5292  02BD' 1303               	bcf	3,6	;RP1=0, select bank1
  5293  02BE' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  5294  02BF' 1283               	bcf	3,5	;RP0=0, select bank0
  5295  02C0' 1303               	bcf	3,6	;RP1=0, select bank0
  5296  02C1' 00B4'              	movwf	___ftadd@f2+1
  5297  02C2' 1683               	bsf	3,5	;RP0=1, select bank1
  5298  02C3' 1303               	bcf	3,6	;RP1=0, select bank1
  5299  02C4' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  5300  02C5' 1283               	bcf	3,5	;RP0=0, select bank0
  5301  02C6' 1303               	bcf	3,6	;RP1=0, select bank0
  5302  02C7' 00B5'              	movwf	___ftadd@f2+2
  5303  02C8' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftadd
  5304  02CD' 1283               	bcf	3,5	;RP0=0, select bank0
  5305  02CE' 1303               	bcf	3,6	;RP1=0, select bank0
  5306  02CF' 0830'              	movf	?___ftadd,w
  5307  02D0' 1683               	bsf	3,5	;RP0=1, select bank1
  5308  02D1' 1303               	bcf	3,6	;RP1=0, select bank1
  5309  02D2' 0080'              	movwf	sprintf@fval^(0+128)
  5310  02D3' 1283               	bcf	3,5	;RP0=0, select bank0
  5311  02D4' 1303               	bcf	3,6	;RP1=0, select bank0
  5312  02D5' 0831'              	movf	?___ftadd+1,w
  5313  02D6' 1683               	bsf	3,5	;RP0=1, select bank1
  5314  02D7' 1303               	bcf	3,6	;RP1=0, select bank1
  5315  02D8' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  5316  02D9' 1283               	bcf	3,5	;RP0=0, select bank0
  5317  02DA' 1303               	bcf	3,6	;RP1=0, select bank0
  5318  02DB' 0832'              	movf	?___ftadd+2,w
  5319  02DC' 1683               	bsf	3,5	;RP0=1, select bank1
  5320  02DD' 1303               	bcf	3,6	;RP1=0, select bank1
  5321  02DE' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  5322  02DF'                    l5135:	
  5323                           
  5324                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  5325  02DF' 1683               	bsf	3,5	;RP0=1, select bank1
  5326  02E0' 1303               	bcf	3,6	;RP1=0, select bank1
  5327  02E1' 0800'              	movf	(sprintf@exp+1)^(0+128),w
  5328  02E2' 3A80               	xorlw	128
  5329  02E3' 00FF               	movwf	127
  5330  02E4' 3080               	movlw	128
  5331  02E5' 027F               	subwf	127,w
  5332  02E6' 1D03               	skipz
  5333  02E7' 2800'              	goto	u7145
  5334  02E8' 300A               	movlw	10
  5335  02E9' 0200'              	subwf	sprintf@exp^(0+128),w
  5336  02EA'                    u7145:	
  5337  02EA' 1803               	skipnc
  5338  02EB' 2800'              	goto	l5143
  5339  02EC' 1683               	bsf	3,5	;RP0=1, select bank1
  5340  02ED' 1303               	bcf	3,6	;RP1=0, select bank1
  5341  02EE' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  5342  02EF' 0400'              	iorwf	(sprintf@fval+1)^(0+128),w
  5343  02F0' 0400'              	iorwf	sprintf@fval^(0+128),w
  5344  02F1' 1903               	skipnz
  5345  02F2' 2800'              	goto	l5159
  5346  02F3' 0800'              	movf	sprintf@fval^(0+128),w
  5347  02F4' 1283               	bcf	3,5	;RP0=0, select bank0
  5348  02F5' 1303               	bcf	3,6	;RP1=0, select bank0
  5349  02F6' 00A9'              	movwf	___fttol@f1
  5350  02F7' 1683               	bsf	3,5	;RP0=1, select bank1
  5351  02F8' 1303               	bcf	3,6	;RP1=0, select bank1
  5352  02F9' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  5353  02FA' 1283               	bcf	3,5	;RP0=0, select bank0
  5354  02FB' 1303               	bcf	3,6	;RP1=0, select bank0
  5355  02FC' 00AA'              	movwf	___fttol@f1+1
  5356  02FD' 1683               	bsf	3,5	;RP0=1, select bank1
  5357  02FE' 1303               	bcf	3,6	;RP1=0, select bank1
  5358  02FF' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  5359  0300' 1283               	bcf	3,5	;RP0=0, select bank0
  5360  0301' 1303               	bcf	3,6	;RP1=0, select bank0
  5361  0302' 00AB'              	movwf	___fttol@f1+2
  5362  0303' 120A' 118A' 2000' 120A' 118A' 	fcall	___fttol
  5363  0308' 1283               	bcf	3,5	;RP0=0, select bank0
  5364  0309' 1303               	bcf	3,6	;RP1=0, select bank0
  5365  030A' 082C'              	movf	?___fttol+3,w
  5366  030B' 042B'              	iorwf	?___fttol+2,w
  5367  030C' 042A'              	iorwf	?___fttol+1,w
  5368  030D' 0429'              	iorwf	?___fttol,w
  5369  030E' 1D03               	skipz
  5370  030F' 2800'              	goto	l5159
  5371  0310' 1683               	bsf	3,5	;RP0=1, select bank1
  5372  0311' 1303               	bcf	3,6	;RP1=0, select bank1
  5373  0312' 0800'              	movf	(sprintf@exp+1)^(0+128),w
  5374  0313' 3A80               	xorlw	128
  5375  0314' 00FF               	movwf	127
  5376  0315' 3080               	movlw	128
  5377  0316' 027F               	subwf	127,w
  5378  0317' 1D03               	skipz
  5379  0318' 2800'              	goto	u7175
  5380  0319' 3002               	movlw	2
  5381  031A' 0200'              	subwf	sprintf@exp^(0+128),w
  5382  031B'                    u7175:	
  5383  031B' 1C03               	skipc
  5384  031C' 2800'              	goto	l5159
  5385  031D'                    l5143:	
  5386                           
  5387                           ;doprnt.c: 1129: if(integ < 4.294967296){
  5388  031D' 1683               	bsf	3,5	;RP0=1, select bank1
  5389  031E' 1303               	bcf	3,6	;RP1=0, select bank1
  5390  031F' 0800'              	movf	sprintf@integ^(0+128),w
  5391  0320' 1283               	bcf	3,5	;RP0=0, select bank0
  5392  0321' 1303               	bcf	3,6	;RP1=0, select bank0
  5393  0322' 0080'              	movwf	___ftge@ff1
  5394  0323' 1683               	bsf	3,5	;RP0=1, select bank1
  5395  0324' 1303               	bcf	3,6	;RP1=0, select bank1
  5396  0325' 0800'              	movf	(sprintf@integ+1)^(0+128),w
  5397  0326' 1283               	bcf	3,5	;RP0=0, select bank0
  5398  0327' 1303               	bcf	3,6	;RP1=0, select bank0
  5399  0328' 0081'              	movwf	___ftge@ff1+1
  5400  0329' 1683               	bsf	3,5	;RP0=1, select bank1
  5401  032A' 1303               	bcf	3,6	;RP1=0, select bank1
  5402  032B' 0800'              	movf	(sprintf@integ+2)^(0+128),w
  5403  032C' 1283               	bcf	3,5	;RP0=0, select bank0
  5404  032D' 1303               	bcf	3,6	;RP1=0, select bank0
  5405  032E' 0082'              	movwf	___ftge@ff1+2
  5406  032F' 3070               	movlw	112
  5407  0330' 0083'              	movwf	___ftge@ff2
  5408  0331' 3089               	movlw	137
  5409  0332' 0084'              	movwf	___ftge@ff2+1
  5410  0333' 3040               	movlw	64
  5411  0334' 0085'              	movwf	___ftge@ff2+2
  5412  0335' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  5413  033A' 1803               	btfsc	3,0
  5414  033B' 2800'              	goto	l5147
  5415                           
  5416                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5417  033C' 30F7               	movlw	247
  5418  033D' 2800'              	goto	L26
  5419  033E'                    l5147:	
  5420                           ;doprnt.c: 1131: }else{
  5421                           
  5422                           
  5423                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5424  033E' 30F8               	movlw	248
  5425  033F'                    L26:	
  5426  033F' 1683               	bsf	3,5	;RP0=1, select bank1
  5427  0340' 1303               	bcf	3,6	;RP1=0, select bank1
  5428  0341' 0780'              	addwf	sprintf@exp^(0+128),f
  5429  0342' 1803               	skipnc
  5430  0343' 0A80'              	incf	(sprintf@exp+1)^(0+128),f
  5431  0344' 30FF               	movlw	255
  5432  0345' 0780'              	addwf	(sprintf@exp+1)^(0+128),f
  5433                           
  5434                           ;doprnt.c: 1133: }
  5435                           ;doprnt.c: 1134: integ = scale(exp);
  5436  0346' 0800'              	movf	sprintf@exp^(0+128),w
  5437  0347' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  5438  034C' 1283               	bcf	3,5	;RP0=0, select bank0
  5439  034D' 1303               	bcf	3,6	;RP1=0, select bank0
  5440  034E' 0820'              	movf	?_scale,w
  5441  034F' 1683               	bsf	3,5	;RP0=1, select bank1
  5442  0350' 1303               	bcf	3,6	;RP1=0, select bank1
  5443  0351' 0080'              	movwf	sprintf@integ^(0+128)
  5444  0352' 1283               	bcf	3,5	;RP0=0, select bank0
  5445  0353' 1303               	bcf	3,6	;RP1=0, select bank0
  5446  0354' 0821'              	movf	?_scale+1,w
  5447  0355' 1683               	bsf	3,5	;RP0=1, select bank1
  5448  0356' 1303               	bcf	3,6	;RP1=0, select bank1
  5449  0357' 0080'              	movwf	(sprintf@integ+1)^(0+128)
  5450  0358' 1283               	bcf	3,5	;RP0=0, select bank0
  5451  0359' 1303               	bcf	3,6	;RP1=0, select bank0
  5452  035A' 0822'              	movf	?_scale+2,w
  5453  035B' 1683               	bsf	3,5	;RP0=1, select bank1
  5454  035C' 1303               	bcf	3,6	;RP1=0, select bank1
  5455  035D' 0080'              	movwf	(sprintf@integ+2)^(0+128)
  5456                           
  5457                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  5458  035E' 0800'              	movf	sprintf@fval^(0+128),w
  5459  035F' 1283               	bcf	3,5	;RP0=0, select bank0
  5460  0360' 1303               	bcf	3,6	;RP1=0, select bank0
  5461  0361' 0080'              	movwf	__tdiv_to_l_@f1
  5462  0362' 1683               	bsf	3,5	;RP0=1, select bank1
  5463  0363' 1303               	bcf	3,6	;RP1=0, select bank1
  5464  0364' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  5465  0365' 1283               	bcf	3,5	;RP0=0, select bank0
  5466  0366' 1303               	bcf	3,6	;RP1=0, select bank0
  5467  0367' 0081'              	movwf	__tdiv_to_l_@f1+1
  5468  0368' 1683               	bsf	3,5	;RP0=1, select bank1
  5469  0369' 1303               	bcf	3,6	;RP1=0, select bank1
  5470  036A' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  5471  036B' 1283               	bcf	3,5	;RP0=0, select bank0
  5472  036C' 1303               	bcf	3,6	;RP1=0, select bank0
  5473  036D' 0082'              	movwf	__tdiv_to_l_@f1+2
  5474  036E' 1683               	bsf	3,5	;RP0=1, select bank1
  5475  036F' 1303               	bcf	3,6	;RP1=0, select bank1
  5476  0370' 0800'              	movf	sprintf@integ^(0+128),w
  5477  0371' 1283               	bcf	3,5	;RP0=0, select bank0
  5478  0372' 1303               	bcf	3,6	;RP1=0, select bank0
  5479  0373' 0083'              	movwf	__tdiv_to_l_@f2
  5480  0374' 1683               	bsf	3,5	;RP0=1, select bank1
  5481  0375' 1303               	bcf	3,6	;RP1=0, select bank1
  5482  0376' 0800'              	movf	(sprintf@integ+1)^(0+128),w
  5483  0377' 1283               	bcf	3,5	;RP0=0, select bank0
  5484  0378' 1303               	bcf	3,6	;RP1=0, select bank0
  5485  0379' 0084'              	movwf	__tdiv_to_l_@f2+1
  5486  037A' 1683               	bsf	3,5	;RP0=1, select bank1
  5487  037B' 1303               	bcf	3,6	;RP1=0, select bank1
  5488  037C' 0800'              	movf	(sprintf@integ+2)^(0+128),w
  5489  037D' 1283               	bcf	3,5	;RP0=0, select bank0
  5490  037E' 1303               	bcf	3,6	;RP1=0, select bank0
  5491  037F' 0085'              	movwf	__tdiv_to_l_@f2+2
  5492  0380' 120A' 118A' 2000' 120A' 118A' 	fcall	__tdiv_to_l_
  5493  0385' 1283               	bcf	3,5	;RP0=0, select bank0
  5494  0386' 1303               	bcf	3,6	;RP1=0, select bank0
  5495  0387' 0803'              	movf	?__tdiv_to_l_+3,w
  5496  0388' 1683               	bsf	3,5	;RP0=1, select bank1
  5497  0389' 1303               	bcf	3,6	;RP1=0, select bank1
  5498  038A' 0080'              	movwf	(_sprintf$500+3)^(0+128)
  5499  038B' 1283               	bcf	3,5	;RP0=0, select bank0
  5500  038C' 1303               	bcf	3,6	;RP1=0, select bank0
  5501  038D' 0802'              	movf	?__tdiv_to_l_+2,w
  5502  038E' 1683               	bsf	3,5	;RP0=1, select bank1
  5503  038F' 1303               	bcf	3,6	;RP1=0, select bank1
  5504  0390' 0080'              	movwf	(_sprintf$500+2)^(0+128)
  5505  0391' 1283               	bcf	3,5	;RP0=0, select bank0
  5506  0392' 1303               	bcf	3,6	;RP1=0, select bank0
  5507  0393' 0801'              	movf	?__tdiv_to_l_+1,w
  5508  0394' 1683               	bsf	3,5	;RP0=1, select bank1
  5509  0395' 1303               	bcf	3,6	;RP1=0, select bank1
  5510  0396' 0080'              	movwf	(_sprintf$500+1)^(0+128)
  5511  0397' 1283               	bcf	3,5	;RP0=0, select bank0
  5512  0398' 1303               	bcf	3,6	;RP1=0, select bank0
  5513  0399' 0800'              	movf	?__tdiv_to_l_,w
  5514  039A' 1683               	bsf	3,5	;RP0=1, select bank1
  5515  039B' 1303               	bcf	3,6	;RP1=0, select bank1
  5516  039C' 0080'              	movwf	_sprintf$500^(0+128)
  5517  039D' 0800'              	movf	(_sprintf$500+3)^(0+128),w
  5518  039E' 0080'              	movwf	(sprintf@_val+3)^(0+128)
  5519  039F' 0800'              	movf	(_sprintf$500+2)^(0+128),w
  5520  03A0' 0080'              	movwf	(sprintf@_val+2)^(0+128)
  5521  03A1' 0800'              	movf	(_sprintf$500+1)^(0+128),w
  5522  03A2' 0080'              	movwf	(sprintf@_val+1)^(0+128)
  5523  03A3' 0800'              	movf	_sprintf$500^(0+128),w
  5524  03A4' 0080'              	movwf	sprintf@_val^(0+128)
  5525                           
  5526                           ;doprnt.c: 1138: fval = 0.0;
  5527  03A5' 3000               	movlw	0
  5528  03A6' 0080'              	movwf	sprintf@fval^(0+128)
  5529  03A7' 3000               	movlw	0
  5530  03A8' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  5531  03A9' 3000               	movlw	0
  5532  03AA' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  5533                           
  5534                           ;doprnt.c: 1139: } else {
  5535  03AB' 2800'              	goto	l5163
  5536  03AC'                    l5159:	
  5537                           
  5538                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  5539  03AC' 1683               	bsf	3,5	;RP0=1, select bank1
  5540  03AD' 1303               	bcf	3,6	;RP1=0, select bank1
  5541  03AE' 0800'              	movf	sprintf@fval^(0+128),w
  5542  03AF' 1283               	bcf	3,5	;RP0=0, select bank0
  5543  03B0' 1303               	bcf	3,6	;RP1=0, select bank0
  5544  03B1' 00A9'              	movwf	___fttol@f1
  5545  03B2' 1683               	bsf	3,5	;RP0=1, select bank1
  5546  03B3' 1303               	bcf	3,6	;RP1=0, select bank1
  5547  03B4' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  5548  03B5' 1283               	bcf	3,5	;RP0=0, select bank0
  5549  03B6' 1303               	bcf	3,6	;RP1=0, select bank0
  5550  03B7' 00AA'              	movwf	___fttol@f1+1
  5551  03B8' 1683               	bsf	3,5	;RP0=1, select bank1
  5552  03B9' 1303               	bcf	3,6	;RP1=0, select bank1
  5553  03BA' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  5554  03BB' 1283               	bcf	3,5	;RP0=0, select bank0
  5555  03BC' 1303               	bcf	3,6	;RP1=0, select bank0
  5556  03BD' 00AB'              	movwf	___fttol@f1+2
  5557  03BE' 120A' 118A' 2000' 120A' 118A' 	fcall	___fttol
  5558  03C3' 1283               	bcf	3,5	;RP0=0, select bank0
  5559  03C4' 1303               	bcf	3,6	;RP1=0, select bank0
  5560  03C5' 082C'              	movf	?___fttol+3,w
  5561  03C6' 1683               	bsf	3,5	;RP0=1, select bank1
  5562  03C7' 1303               	bcf	3,6	;RP1=0, select bank1
  5563  03C8' 0080'              	movwf	(sprintf@_val+3)^(0+128)
  5564  03C9' 1283               	bcf	3,5	;RP0=0, select bank0
  5565  03CA' 1303               	bcf	3,6	;RP1=0, select bank0
  5566  03CB' 082B'              	movf	?___fttol+2,w
  5567  03CC' 1683               	bsf	3,5	;RP0=1, select bank1
  5568  03CD' 1303               	bcf	3,6	;RP1=0, select bank1
  5569  03CE' 0080'              	movwf	(sprintf@_val+2)^(0+128)
  5570  03CF' 1283               	bcf	3,5	;RP0=0, select bank0
  5571  03D0' 1303               	bcf	3,6	;RP1=0, select bank0
  5572  03D1' 082A'              	movf	?___fttol+1,w
  5573  03D2' 1683               	bsf	3,5	;RP0=1, select bank1
  5574  03D3' 1303               	bcf	3,6	;RP1=0, select bank1
  5575  03D4' 0080'              	movwf	(sprintf@_val+1)^(0+128)
  5576  03D5' 1283               	bcf	3,5	;RP0=0, select bank0
  5577  03D6' 1303               	bcf	3,6	;RP1=0, select bank0
  5578  03D7' 0829'              	movf	?___fttol,w
  5579  03D8' 1683               	bsf	3,5	;RP0=1, select bank1
  5580  03D9' 1303               	bcf	3,6	;RP1=0, select bank1
  5581  03DA' 0080'              	movwf	sprintf@_val^(0+128)
  5582                           
  5583                           ;doprnt.c: 1141: fval -= (double)_val._val;
  5584  03DB' 0800'              	movf	(sprintf@_val+3)^(0+128),w
  5585  03DC' 1283               	bcf	3,5	;RP0=0, select bank0
  5586  03DD' 1303               	bcf	3,6	;RP1=0, select bank0
  5587  03DE' 0088'              	movwf	___lltoft@c+3
  5588  03DF' 1683               	bsf	3,5	;RP0=1, select bank1
  5589  03E0' 1303               	bcf	3,6	;RP1=0, select bank1
  5590  03E1' 0800'              	movf	(sprintf@_val+2)^(0+128),w
  5591  03E2' 1283               	bcf	3,5	;RP0=0, select bank0
  5592  03E3' 1303               	bcf	3,6	;RP1=0, select bank0
  5593  03E4' 0087'              	movwf	___lltoft@c+2
  5594  03E5' 1683               	bsf	3,5	;RP0=1, select bank1
  5595  03E6' 1303               	bcf	3,6	;RP1=0, select bank1
  5596  03E7' 0800'              	movf	(sprintf@_val+1)^(0+128),w
  5597  03E8' 1283               	bcf	3,5	;RP0=0, select bank0
  5598  03E9' 1303               	bcf	3,6	;RP1=0, select bank0
  5599  03EA' 0086'              	movwf	___lltoft@c+1
  5600  03EB' 1683               	bsf	3,5	;RP0=1, select bank1
  5601  03EC' 1303               	bcf	3,6	;RP1=0, select bank1
  5602  03ED' 0800'              	movf	sprintf@_val^(0+128),w
  5603  03EE' 1283               	bcf	3,5	;RP0=0, select bank0
  5604  03EF' 1303               	bcf	3,6	;RP1=0, select bank0
  5605  03F0' 0085'              	movwf	___lltoft@c
  5606  03F1' 120A' 118A' 2000' 120A' 118A' 	fcall	___lltoft
  5607  03F6' 1283               	bcf	3,5	;RP0=0, select bank0
  5608  03F7' 1303               	bcf	3,6	;RP1=0, select bank0
  5609  03F8' 0805'              	movf	?___lltoft,w
  5610  03F9' 00BD'              	movwf	___ftsub@f2
  5611  03FA' 0806'              	movf	?___lltoft+1,w
  5612  03FB' 00BE'              	movwf	___ftsub@f2+1
  5613  03FC' 0807'              	movf	?___lltoft+2,w
  5614  03FD' 00BF'              	movwf	___ftsub@f2+2
  5615  03FE' 1683               	bsf	3,5	;RP0=1, select bank1
  5616  03FF' 1303               	bcf	3,6	;RP1=0, select bank1
  5617  0400' 0800'              	movf	sprintf@fval^(0+128),w
  5618  0401' 1283               	bcf	3,5	;RP0=0, select bank0
  5619  0402' 1303               	bcf	3,6	;RP1=0, select bank0
  5620  0403' 00C0'              	movwf	___ftsub@f1
  5621  0404' 1683               	bsf	3,5	;RP0=1, select bank1
  5622  0405' 1303               	bcf	3,6	;RP1=0, select bank1
  5623  0406' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  5624  0407' 1283               	bcf	3,5	;RP0=0, select bank0
  5625  0408' 1303               	bcf	3,6	;RP1=0, select bank0
  5626  0409' 00C1'              	movwf	___ftsub@f1+1
  5627  040A' 1683               	bsf	3,5	;RP0=1, select bank1
  5628  040B' 1303               	bcf	3,6	;RP1=0, select bank1
  5629  040C' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  5630  040D' 1283               	bcf	3,5	;RP0=0, select bank0
  5631  040E' 1303               	bcf	3,6	;RP1=0, select bank0
  5632  040F' 00C2'              	movwf	___ftsub@f1+2
  5633  0410' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftsub
  5634  0415' 1283               	bcf	3,5	;RP0=0, select bank0
  5635  0416' 1303               	bcf	3,6	;RP1=0, select bank0
  5636  0417' 083D'              	movf	?___ftsub,w
  5637  0418' 1683               	bsf	3,5	;RP0=1, select bank1
  5638  0419' 1303               	bcf	3,6	;RP1=0, select bank1
  5639  041A' 0080'              	movwf	sprintf@fval^(0+128)
  5640  041B' 1283               	bcf	3,5	;RP0=0, select bank0
  5641  041C' 1303               	bcf	3,6	;RP1=0, select bank0
  5642  041D' 083E'              	movf	?___ftsub+1,w
  5643  041E' 1683               	bsf	3,5	;RP0=1, select bank1
  5644  041F' 1303               	bcf	3,6	;RP1=0, select bank1
  5645  0420' 0080'              	movwf	(sprintf@fval+1)^(0+128)
  5646  0421' 1283               	bcf	3,5	;RP0=0, select bank0
  5647  0422' 1303               	bcf	3,6	;RP1=0, select bank0
  5648  0423' 083F'              	movf	?___ftsub+2,w
  5649  0424' 1683               	bsf	3,5	;RP0=1, select bank1
  5650  0425' 1303               	bcf	3,6	;RP1=0, select bank1
  5651  0426' 0080'              	movwf	(sprintf@fval+2)^(0+128)
  5652                           
  5653                           ;doprnt.c: 1142: exp = 0;
  5654  0427' 0180'              	clrf	sprintf@exp^(0+128)
  5655  0428' 0180'              	clrf	(sprintf@exp+1)^(0+128)
  5656  0429'                    l5163:	
  5657                           
  5658                           ;doprnt.c: 1143: }
  5659                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  5660  0429' 0180'              	clrf	sprintf@c^(0+128)
  5661  042A' 0A80'              	incf	sprintf@c^(0+128),f
  5662  042B' 0800'              	movf	sprintf@c^(0+128),w
  5663  042C' 3A0A               	xorlw	10
  5664  042D' 1903               	btfsc	3,2
  5665  042E' 2800'              	goto	l5177
  5666  042F'                    l5169:	
  5667                           
  5668                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  5669  042F' 0800'              	movf	sprintf@c^(0+128),w
  5670  0430' 1283               	bcf	3,5	;RP0=0, select bank0
  5671  0431' 1303               	bcf	3,6	;RP1=0, select bank0
  5672  0432' 00C7'              	movwf	??_sprintf
  5673  0433' 3001               	movlw	1
  5674  0434'                    u7205:	
  5675  0434' 1003               	clrc
  5676  0435' 0DC7'              	rlf	??_sprintf,f
  5677  0436' 3EFF               	addlw	-1
  5678  0437' 1D03               	skipz
  5679  0438' 2800'              	goto	u7205
  5680  0439' 1003               	clrc
  5681  043A' 0D47'              	rlf	??_sprintf,w
  5682  043B' 3E01               	addlw	low (_dpowers-__stringbase)
  5683  043C' 0084               	movwf	4
  5684  043D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5685  0442' 00C8'              	movwf	??_sprintf+1
  5686  0443' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5687  0448' 00C9'              	movwf	??_sprintf+2
  5688  0449' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5689  044E' 00CA'              	movwf	??_sprintf+3
  5690  044F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  5691  0454' 00CB'              	movwf	??_sprintf+4
  5692  0455' 084B'              	movf	??_sprintf+4,w
  5693  0456' 1683               	bsf	3,5	;RP0=1, select bank1
  5694  0457' 1303               	bcf	3,6	;RP1=0, select bank1
  5695  0458' 0200'              	subwf	(sprintf@_val+3)^(0+128),w
  5696  0459' 1D03               	skipz
  5697  045A' 2800'              	goto	u7215
  5698  045B' 1283               	bcf	3,5	;RP0=0, select bank0
  5699  045C' 1303               	bcf	3,6	;RP1=0, select bank0
  5700  045D' 084A'              	movf	??_sprintf+3,w
  5701  045E' 1683               	bsf	3,5	;RP0=1, select bank1
  5702  045F' 1303               	bcf	3,6	;RP1=0, select bank1
  5703  0460' 0200'              	subwf	(sprintf@_val+2)^(0+128),w
  5704  0461' 1D03               	skipz
  5705  0462' 2800'              	goto	u7215
  5706  0463' 1283               	bcf	3,5	;RP0=0, select bank0
  5707  0464' 1303               	bcf	3,6	;RP1=0, select bank0
  5708  0465' 0849'              	movf	??_sprintf+2,w
  5709  0466' 1683               	bsf	3,5	;RP0=1, select bank1
  5710  0467' 1303               	bcf	3,6	;RP1=0, select bank1
  5711  0468' 0200'              	subwf	(sprintf@_val+1)^(0+128),w
  5712  0469' 1D03               	skipz
  5713  046A' 2800'              	goto	u7215
  5714  046B' 1283               	bcf	3,5	;RP0=0, select bank0
  5715  046C' 1303               	bcf	3,6	;RP1=0, select bank0
  5716  046D' 0848'              	movf	??_sprintf+1,w
  5717  046E' 1683               	bsf	3,5	;RP0=1, select bank1
  5718  046F' 1303               	bcf	3,6	;RP1=0, select bank1
  5719  0470' 0200'              	subwf	sprintf@_val^(0+128),w
  5720  0471'                    u7215:	
  5721  0471' 1C03               	btfss	3,0
  5722  0472' 2800'              	goto	l5177
  5723                           
  5724                           ;doprnt.c: 1147: break;
  5725  0473' 3001               	movlw	1
  5726  0474' 1283               	bcf	3,5	;RP0=0, select bank0
  5727  0475' 1303               	bcf	3,6	;RP1=0, select bank0
  5728  0476' 00C7'              	movwf	??_sprintf
  5729  0477' 0847'              	movf	??_sprintf,w
  5730  0478' 1683               	bsf	3,5	;RP0=1, select bank1
  5731  0479' 1303               	bcf	3,6	;RP1=0, select bank1
  5732  047A' 0780'              	addwf	sprintf@c^(0+128),f
  5733  047B' 0800'              	movf	sprintf@c^(0+128),w
  5734  047C' 3A0A               	xorlw	10
  5735  047D' 1D03               	skipz
  5736  047E' 2800'              	goto	l5169
  5737  047F'                    l5177:	
  5738                           
  5739                           ;doprnt.c: 1151: width -= prec + c + exp;
  5740  047F' 0800'              	movf	sprintf@prec^(0+128),w
  5741  0480' 0700'              	addwf	sprintf@c^(0+128),w
  5742  0481' 1283               	bcf	3,5	;RP0=0, select bank0
  5743  0482' 1303               	bcf	3,6	;RP1=0, select bank0
  5744  0483' 00C7'              	movwf	??_sprintf
  5745  0484' 1683               	bsf	3,5	;RP0=1, select bank1
  5746  0485' 1303               	bcf	3,6	;RP1=0, select bank1
  5747  0486' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  5748  0487' 1803               	skipnc
  5749  0488' 0A00'              	incf	(sprintf@prec+1)^(0+128),w
  5750  0489' 3E00               	addlw	0
  5751  048A' 1B80'              	btfsc	sprintf@c^(0+128),7
  5752  048B' 3EFF               	addlw	255
  5753  048C' 1283               	bcf	3,5	;RP0=0, select bank0
  5754  048D' 1303               	bcf	3,6	;RP1=0, select bank0
  5755  048E' 00C8'              	movwf	??_sprintf+1
  5756  048F' 1683               	bsf	3,5	;RP0=1, select bank1
  5757  0490' 1303               	bcf	3,6	;RP1=0, select bank1
  5758  0491' 0800'              	movf	sprintf@exp^(0+128),w
  5759  0492' 1283               	bcf	3,5	;RP0=0, select bank0
  5760  0493' 1303               	bcf	3,6	;RP1=0, select bank0
  5761  0494' 0747'              	addwf	??_sprintf,w
  5762  0495' 00C9'              	movwf	??_sprintf+2
  5763  0496' 1683               	bsf	3,5	;RP0=1, select bank1
  5764  0497' 1303               	bcf	3,6	;RP1=0, select bank1
  5765  0498' 0800'              	movf	(sprintf@exp+1)^(0+128),w
  5766  0499' 1803               	skipnc
  5767  049A' 0A00'              	incf	(sprintf@exp+1)^(0+128),w
  5768  049B' 1283               	bcf	3,5	;RP0=0, select bank0
  5769  049C' 1303               	bcf	3,6	;RP1=0, select bank0
  5770  049D' 0748'              	addwf	??_sprintf+1,w
  5771  049E' 00CA'              	movwf	??_sprintf+3
  5772  049F' 0849'              	movf	??_sprintf+2,w
  5773  04A0' 1683               	bsf	3,5	;RP0=1, select bank1
  5774  04A1' 1303               	bcf	3,6	;RP1=0, select bank1
  5775  04A2' 0280'              	subwf	sprintf@width^(0+128),f
  5776  04A3' 1283               	bcf	3,5	;RP0=0, select bank0
  5777  04A4' 1303               	bcf	3,6	;RP1=0, select bank0
  5778  04A5' 084A'              	movf	??_sprintf+3,w
  5779  04A6' 1683               	bsf	3,5	;RP0=1, select bank1
  5780  04A7' 1303               	bcf	3,6	;RP1=0, select bank1
  5781  04A8' 1C03               	skipc
  5782  04A9' 0380'              	decf	(sprintf@width+1)^(0+128),f
  5783  04AA' 0280'              	subwf	(sprintf@width+1)^(0+128),f
  5784                           
  5785                           ;doprnt.c: 1152: if(
  5786                           ;doprnt.c: 1156: prec)
  5787  04AB' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  5788  04AC' 0400'              	iorwf	sprintf@prec^(0+128),w
  5789  04AD' 1903               	skipnz
  5790  04AE' 2800'              	goto	l260
  5791                           
  5792                           ;doprnt.c: 1157: width--;
  5793  04AF' 30FF               	movlw	255
  5794  04B0' 0780'              	addwf	sprintf@width^(0+128),f
  5795  04B1' 1803               	skipnc
  5796  04B2' 0A80'              	incf	(sprintf@width+1)^(0+128),f
  5797  04B3' 30FF               	movlw	255
  5798  04B4' 0780'              	addwf	(sprintf@width+1)^(0+128),f
  5799  04B5'                    l260:	
  5800                           
  5801                           ;doprnt.c: 1158: if(flag & 0x03)
  5802  04B5' 3003               	movlw	3
  5803  04B6' 0500'              	andwf	sprintf@flag^(0+128),w
  5804  04B7' 1283               	bcf	3,5	;RP0=0, select bank0
  5805  04B8' 1303               	bcf	3,6	;RP1=0, select bank0
  5806  04B9' 00C7'              	movwf	??_sprintf
  5807  04BA' 3000               	movlw	0
  5808  04BB' 1683               	bsf	3,5	;RP0=1, select bank1
  5809  04BC' 1303               	bcf	3,6	;RP1=0, select bank1
  5810  04BD' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
  5811  04BE' 1283               	bcf	3,5	;RP0=0, select bank0
  5812  04BF' 1303               	bcf	3,6	;RP1=0, select bank0
  5813  04C0' 00C8'              	movwf	??_sprintf+1
  5814  04C1' 0848'              	movf	??_sprintf+1,w
  5815  04C2' 0447'              	iorwf	??_sprintf,w
  5816  04C3' 1903               	skipnz
  5817  04C4' 2800'              	goto	l5185
  5818                           
  5819                           ;doprnt.c: 1159: width--;
  5820  04C5' 30FF               	movlw	255
  5821  04C6' 1683               	bsf	3,5	;RP0=1, select bank1
  5822  04C7' 1303               	bcf	3,6	;RP1=0, select bank1
  5823  04C8' 0780'              	addwf	sprintf@width^(0+128),f
  5824  04C9' 1803               	skipnc
  5825  04CA' 0A80'              	incf	(sprintf@width+1)^(0+128),f
  5826  04CB' 30FF               	movlw	255
  5827  04CC' 0780'              	addwf	(sprintf@width+1)^(0+128),f
  5828  04CD'                    l5185:	
  5829                           
  5830                           ;doprnt.c: 1162: if(flag & 0x04) {
  5831  04CD' 1683               	bsf	3,5	;RP0=1, select bank1
  5832  04CE' 1303               	bcf	3,6	;RP1=0, select bank1
  5833  04CF' 1D00'              	btfss	sprintf@flag^(0+128),2
  5834  04D0' 2800'              	goto	l5207
  5835                           
  5836                           ;doprnt.c: 1166: if(flag & 0x03)
  5837  04D1' 3003               	movlw	3
  5838  04D2' 0500'              	andwf	sprintf@flag^(0+128),w
  5839  04D3' 1283               	bcf	3,5	;RP0=0, select bank0
  5840  04D4' 1303               	bcf	3,6	;RP1=0, select bank0
  5841  04D5' 00C7'              	movwf	??_sprintf
  5842  04D6' 3000               	movlw	0
  5843  04D7' 1683               	bsf	3,5	;RP0=1, select bank1
  5844  04D8' 1303               	bcf	3,6	;RP1=0, select bank1
  5845  04D9' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
  5846  04DA' 1283               	bcf	3,5	;RP0=0, select bank0
  5847  04DB' 1303               	bcf	3,6	;RP1=0, select bank0
  5848  04DC' 00C8'              	movwf	??_sprintf+1
  5849  04DD' 0848'              	movf	??_sprintf+1,w
  5850  04DE' 0447'              	iorwf	??_sprintf,w
  5851  04DF' 1903               	skipnz
  5852  04E0' 2800'              	goto	l5199
  5853                           
  5854                           ;doprnt.c: 1168: ((*sp++ = ('-')));
  5855  04E1' 302D               	movlw	45
  5856  04E2' 00C7'              	movwf	??_sprintf
  5857  04E3' 1683               	bsf	3,5	;RP0=1, select bank1
  5858  04E4' 1303               	bcf	3,6	;RP1=0, select bank1
  5859  04E5' 0800'              	movf	sprintf@sp^(0+128),w
  5860  04E6' 0084               	movwf	4
  5861  04E7' 1283               	bcf	3,5	;RP0=0, select bank0
  5862  04E8' 1303               	bcf	3,6	;RP1=0, select bank0
  5863  04E9' 0847'              	movf	??_sprintf,w
  5864  04EA' 1783               	bsf	3,7	;select IRP bank2
  5865  04EB' 0080               	movwf	0
  5866  04EC' 3001               	movlw	1
  5867  04ED' 00C7'              	movwf	??_sprintf
  5868  04EE' 0847'              	movf	??_sprintf,w
  5869  04EF' 1683               	bsf	3,5	;RP0=1, select bank1
  5870  04F0' 1303               	bcf	3,6	;RP1=0, select bank1
  5871  04F1' 0780'              	addwf	sprintf@sp^(0+128),f
  5872  04F2'                    l5199:	
  5873                           ;doprnt.c: 1177: while(width > 0) {
  5874                           
  5875  04F2' 1683               	bsf	3,5	;RP0=1, select bank1
  5876  04F3' 1303               	bcf	3,6	;RP1=0, select bank1
  5877  04F4' 0800'              	movf	(sprintf@width+1)^(0+128),w
  5878  04F5' 3A80               	xorlw	128
  5879  04F6' 00FF               	movwf	127
  5880  04F7' 3080               	movlw	128
  5881  04F8' 027F               	subwf	127,w
  5882  04F9' 1D03               	skipz
  5883  04FA' 2800'              	goto	u7275
  5884  04FB' 3001               	movlw	1
  5885  04FC' 0200'              	subwf	sprintf@width^(0+128),w
  5886  04FD'                    u7275:	
  5887  04FD' 1C03               	btfss	3,0
  5888  04FE' 2800'              	goto	l272
  5889                           
  5890                           ;doprnt.c: 1178: ((*sp++ = ('0')));
  5891  04FF' 3030               	movlw	48
  5892  0500' 1283               	bcf	3,5	;RP0=0, select bank0
  5893  0501' 1303               	bcf	3,6	;RP1=0, select bank0
  5894  0502' 00C7'              	movwf	??_sprintf
  5895  0503' 1683               	bsf	3,5	;RP0=1, select bank1
  5896  0504' 1303               	bcf	3,6	;RP1=0, select bank1
  5897  0505' 0800'              	movf	sprintf@sp^(0+128),w
  5898  0506' 0084               	movwf	4
  5899  0507' 1283               	bcf	3,5	;RP0=0, select bank0
  5900  0508' 1303               	bcf	3,6	;RP1=0, select bank0
  5901  0509' 0847'              	movf	??_sprintf,w
  5902  050A' 1783               	bsf	3,7	;select IRP bank2
  5903  050B' 0080               	movwf	0
  5904  050C' 3001               	movlw	1
  5905  050D' 00C7'              	movwf	??_sprintf
  5906  050E' 0847'              	movf	??_sprintf,w
  5907  050F' 1683               	bsf	3,5	;RP0=1, select bank1
  5908  0510' 1303               	bcf	3,6	;RP1=0, select bank1
  5909  0511' 0780'              	addwf	sprintf@sp^(0+128),f
  5910                           
  5911                           ;doprnt.c: 1179: width--;
  5912  0512' 30FF               	movlw	255
  5913  0513' 0780'              	addwf	sprintf@width^(0+128),f
  5914  0514' 1803               	skipnc
  5915  0515' 0A80'              	incf	(sprintf@width+1)^(0+128),f
  5916  0516' 30FF               	movlw	255
  5917  0517' 0780'              	addwf	(sprintf@width+1)^(0+128),f
  5918  0518' 2800'              	goto	l5199
  5919  0519'                    l5201:	
  5920                           ;doprnt.c: 1184: {
  5921                           ;doprnt.c: 1189: while(width > 0) {
  5922                           
  5923                           ;doprnt.c: 1180: }
  5924                           ;doprnt.c: 1182: } else
  5925                           
  5926                           
  5927                           ;doprnt.c: 1190: ((*sp++ = (' ')));
  5928  0519' 3020               	movlw	32
  5929  051A' 1283               	bcf	3,5	;RP0=0, select bank0
  5930  051B' 1303               	bcf	3,6	;RP1=0, select bank0
  5931  051C' 00C7'              	movwf	??_sprintf
  5932  051D' 1683               	bsf	3,5	;RP0=1, select bank1
  5933  051E' 1303               	bcf	3,6	;RP1=0, select bank1
  5934  051F' 0800'              	movf	sprintf@sp^(0+128),w
  5935  0520' 0084               	movwf	4
  5936  0521' 1283               	bcf	3,5	;RP0=0, select bank0
  5937  0522' 1303               	bcf	3,6	;RP1=0, select bank0
  5938  0523' 0847'              	movf	??_sprintf,w
  5939  0524' 1783               	bsf	3,7	;select IRP bank2
  5940  0525' 0080               	movwf	0
  5941  0526' 3001               	movlw	1
  5942  0527' 00C7'              	movwf	??_sprintf
  5943  0528' 0847'              	movf	??_sprintf,w
  5944  0529' 1683               	bsf	3,5	;RP0=1, select bank1
  5945  052A' 1303               	bcf	3,6	;RP1=0, select bank1
  5946  052B' 0780'              	addwf	sprintf@sp^(0+128),f
  5947                           
  5948                           ;doprnt.c: 1191: width--;
  5949  052C' 30FF               	movlw	255
  5950  052D' 0780'              	addwf	sprintf@width^(0+128),f
  5951  052E' 1803               	skipnc
  5952  052F' 0A80'              	incf	(sprintf@width+1)^(0+128),f
  5953  0530' 30FF               	movlw	255
  5954  0531' 0780'              	addwf	(sprintf@width+1)^(0+128),f
  5955  0532'                    l5207:	
  5956  0532' 1683               	bsf	3,5	;RP0=1, select bank1
  5957  0533' 1303               	bcf	3,6	;RP1=0, select bank1
  5958  0534' 0800'              	movf	(sprintf@width+1)^(0+128),w
  5959  0535' 3A80               	xorlw	128
  5960  0536' 00FF               	movwf	127
  5961  0537' 3080               	movlw	128
  5962  0538' 027F               	subwf	127,w
  5963  0539' 1D03               	skipz
  5964  053A' 2800'              	goto	u7285
  5965  053B' 3001               	movlw	1
  5966  053C' 0200'              	subwf	sprintf@width^(0+128),w
  5967  053D'                    u7285:	
  5968  053D' 1803               	skipnc
  5969  053E' 2800'              	goto	l5201
  5970                           
  5971                           ;doprnt.c: 1192: }
  5972                           ;doprnt.c: 1197: if(flag & 0x03)
  5973  053F' 3003               	movlw	3
  5974  0540' 1683               	bsf	3,5	;RP0=1, select bank1
  5975  0541' 1303               	bcf	3,6	;RP1=0, select bank1
  5976  0542' 0500'              	andwf	sprintf@flag^(0+128),w
  5977  0543' 1283               	bcf	3,5	;RP0=0, select bank0
  5978  0544' 1303               	bcf	3,6	;RP1=0, select bank0
  5979  0545' 00C7'              	movwf	??_sprintf
  5980  0546' 3000               	movlw	0
  5981  0547' 1683               	bsf	3,5	;RP0=1, select bank1
  5982  0548' 1303               	bcf	3,6	;RP1=0, select bank1
  5983  0549' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
  5984  054A' 1283               	bcf	3,5	;RP0=0, select bank0
  5985  054B' 1303               	bcf	3,6	;RP1=0, select bank0
  5986  054C' 00C8'              	movwf	??_sprintf+1
  5987  054D' 0848'              	movf	??_sprintf+1,w
  5988  054E' 0447'              	iorwf	??_sprintf,w
  5989  054F' 1903               	skipnz
  5990  0550' 2800'              	goto	l272
  5991                           
  5992                           ;doprnt.c: 1199: ((*sp++ = ('-')));
  5993  0551' 302D               	movlw	45
  5994  0552'                    L27:	
  5995  0552' 00C7'              	movwf	??_sprintf
  5996  0553' 1683               	bsf	3,5	;RP0=1, select bank1
  5997  0554' 1303               	bcf	3,6	;RP1=0, select bank1
  5998  0555' 0800'              	movf	sprintf@sp^(0+128),w
  5999  0556' 0084               	movwf	4
  6000  0557' 1283               	bcf	3,5	;RP0=0, select bank0
  6001  0558' 1303               	bcf	3,6	;RP1=0, select bank0
  6002  0559' 0847'              	movf	??_sprintf,w
  6003  055A' 1783               	bsf	3,7	;select IRP bank2
  6004  055B' 0080               	movwf	0
  6005  055C' 3001               	movlw	1
  6006  055D' 00C7'              	movwf	??_sprintf
  6007  055E' 0847'              	movf	??_sprintf,w
  6008  055F' 1683               	bsf	3,5	;RP0=1, select bank1
  6009  0560' 1303               	bcf	3,6	;RP1=0, select bank1
  6010  0561' 0780'              	addwf	sprintf@sp^(0+128),f
  6011  0562'                    l272:	
  6012  0562' 30FF               	movlw	-1
  6013  0563' 1283               	bcf	3,5	;RP0=0, select bank0
  6014  0564' 1303               	bcf	3,6	;RP1=0, select bank0
  6015  0565' 00C7'              	movwf	??_sprintf
  6016  0566' 0847'              	movf	??_sprintf,w
  6017  0567' 1683               	bsf	3,5	;RP0=1, select bank1
  6018  0568' 1303               	bcf	3,6	;RP1=0, select bank1
  6019  0569' 0780'              	addwf	sprintf@c^(0+128),f
  6020  056A' 0800'              	movf	sprintf@c^(0+128),w
  6021  056B' 3AFF               	xorlw	-1
  6022  056C' 1903               	btfsc	3,2
  6023  056D' 2800'              	goto	l5227
  6024                           
  6025                           ;doprnt.c: 1209: {
  6026                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
  6027                           
  6028                           ;doprnt.c: 1204: }
  6029                           ;doprnt.c: 1205: while(c--) {
  6030  056E' 0800'              	movf	sprintf@c^(0+128),w
  6031  056F' 1283               	bcf	3,5	;RP0=0, select bank0
  6032  0570' 1303               	bcf	3,6	;RP1=0, select bank0
  6033  0571' 00C7'              	movwf	??_sprintf
  6034  0572' 3001               	movlw	1
  6035  0573'                    u7305:	
  6036  0573' 1003               	clrc
  6037  0574' 0DC7'              	rlf	??_sprintf,f
  6038  0575' 3EFF               	addlw	-1
  6039  0576' 1D03               	skipz
  6040  0577' 2800'              	goto	u7305
  6041  0578' 1003               	clrc
  6042  0579' 0D47'              	rlf	??_sprintf,w
  6043  057A' 3E01               	addlw	low (_dpowers-__stringbase)
  6044  057B' 0084               	movwf	4
  6045  057C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6046  0581' 0080'              	movwf	___lldiv@divisor
  6047  0582' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6048  0587' 0081'              	movwf	___lldiv@divisor+1
  6049  0588' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6050  058D' 0082'              	movwf	___lldiv@divisor+2
  6051  058E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6052  0593' 0083'              	movwf	___lldiv@divisor+3
  6053  0594' 1683               	bsf	3,5	;RP0=1, select bank1
  6054  0595' 1303               	bcf	3,6	;RP1=0, select bank1
  6055  0596' 0800'              	movf	(sprintf@_val+3)^(0+128),w
  6056  0597' 1283               	bcf	3,5	;RP0=0, select bank0
  6057  0598' 1303               	bcf	3,6	;RP1=0, select bank0
  6058  0599' 0087'              	movwf	___lldiv@dividend+3
  6059  059A' 1683               	bsf	3,5	;RP0=1, select bank1
  6060  059B' 1303               	bcf	3,6	;RP1=0, select bank1
  6061  059C' 0800'              	movf	(sprintf@_val+2)^(0+128),w
  6062  059D' 1283               	bcf	3,5	;RP0=0, select bank0
  6063  059E' 1303               	bcf	3,6	;RP1=0, select bank0
  6064  059F' 0086'              	movwf	___lldiv@dividend+2
  6065  05A0' 1683               	bsf	3,5	;RP0=1, select bank1
  6066  05A1' 1303               	bcf	3,6	;RP1=0, select bank1
  6067  05A2' 0800'              	movf	(sprintf@_val+1)^(0+128),w
  6068  05A3' 1283               	bcf	3,5	;RP0=0, select bank0
  6069  05A4' 1303               	bcf	3,6	;RP1=0, select bank0
  6070  05A5' 0085'              	movwf	___lldiv@dividend+1
  6071  05A6' 1683               	bsf	3,5	;RP0=1, select bank1
  6072  05A7' 1303               	bcf	3,6	;RP1=0, select bank1
  6073  05A8' 0800'              	movf	sprintf@_val^(0+128),w
  6074  05A9' 1283               	bcf	3,5	;RP0=0, select bank0
  6075  05AA' 1303               	bcf	3,6	;RP1=0, select bank0
  6076  05AB' 0084'              	movwf	___lldiv@dividend
  6077  05AC' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
  6078  05B1' 1283               	bcf	3,5	;RP0=0, select bank0
  6079  05B2' 1303               	bcf	3,6	;RP1=0, select bank0
  6080  05B3' 0803'              	movf	?___lldiv+3,w
  6081  05B4' 1683               	bsf	3,5	;RP0=1, select bank1
  6082  05B5' 1303               	bcf	3,6	;RP1=0, select bank1
  6083  05B6' 0080'              	movwf	(sprintf@vd+3)^(0+128)
  6084  05B7' 1283               	bcf	3,5	;RP0=0, select bank0
  6085  05B8' 1303               	bcf	3,6	;RP1=0, select bank0
  6086  05B9' 0802'              	movf	?___lldiv+2,w
  6087  05BA' 1683               	bsf	3,5	;RP0=1, select bank1
  6088  05BB' 1303               	bcf	3,6	;RP1=0, select bank1
  6089  05BC' 0080'              	movwf	(sprintf@vd+2)^(0+128)
  6090  05BD' 1283               	bcf	3,5	;RP0=0, select bank0
  6091  05BE' 1303               	bcf	3,6	;RP1=0, select bank0
  6092  05BF' 0801'              	movf	?___lldiv+1,w
  6093  05C0' 1683               	bsf	3,5	;RP0=1, select bank1
  6094  05C1' 1303               	bcf	3,6	;RP1=0, select bank1
  6095  05C2' 0080'              	movwf	(sprintf@vd+1)^(0+128)
  6096  05C3' 1283               	bcf	3,5	;RP0=0, select bank0
  6097  05C4' 1303               	bcf	3,6	;RP1=0, select bank0
  6098  05C5' 0800'              	movf	?___lldiv,w
  6099  05C6' 1683               	bsf	3,5	;RP0=1, select bank1
  6100  05C7' 1303               	bcf	3,6	;RP1=0, select bank1
  6101  05C8' 0080'              	movwf	sprintf@vd^(0+128)
  6102                           
  6103                           ;doprnt.c: 1211: vd %= 10;
  6104  05C9' 3000               	movlw	0
  6105  05CA' 1283               	bcf	3,5	;RP0=0, select bank0
  6106  05CB' 1303               	bcf	3,6	;RP1=0, select bank0
  6107  05CC' 0083'              	movwf	___llmod@divisor+3
  6108  05CD' 3000               	movlw	0
  6109  05CE' 0082'              	movwf	___llmod@divisor+2
  6110  05CF' 3000               	movlw	0
  6111  05D0' 0081'              	movwf	___llmod@divisor+1
  6112  05D1' 300A               	movlw	10
  6113  05D2' 0080'              	movwf	___llmod@divisor
  6114  05D3' 1683               	bsf	3,5	;RP0=1, select bank1
  6115  05D4' 1303               	bcf	3,6	;RP1=0, select bank1
  6116  05D5' 0800'              	movf	(sprintf@vd+3)^(0+128),w
  6117  05D6' 1283               	bcf	3,5	;RP0=0, select bank0
  6118  05D7' 1303               	bcf	3,6	;RP1=0, select bank0
  6119  05D8' 0087'              	movwf	___llmod@dividend+3
  6120  05D9' 1683               	bsf	3,5	;RP0=1, select bank1
  6121  05DA' 1303               	bcf	3,6	;RP1=0, select bank1
  6122  05DB' 0800'              	movf	(sprintf@vd+2)^(0+128),w
  6123  05DC' 1283               	bcf	3,5	;RP0=0, select bank0
  6124  05DD' 1303               	bcf	3,6	;RP1=0, select bank0
  6125  05DE' 0086'              	movwf	___llmod@dividend+2
  6126  05DF' 1683               	bsf	3,5	;RP0=1, select bank1
  6127  05E0' 1303               	bcf	3,6	;RP1=0, select bank1
  6128  05E1' 0800'              	movf	(sprintf@vd+1)^(0+128),w
  6129  05E2' 1283               	bcf	3,5	;RP0=0, select bank0
  6130  05E3' 1303               	bcf	3,6	;RP1=0, select bank0
  6131  05E4' 0085'              	movwf	___llmod@dividend+1
  6132  05E5' 1683               	bsf	3,5	;RP0=1, select bank1
  6133  05E6' 1303               	bcf	3,6	;RP1=0, select bank1
  6134  05E7' 0800'              	movf	sprintf@vd^(0+128),w
  6135  05E8' 1283               	bcf	3,5	;RP0=0, select bank0
  6136  05E9' 1303               	bcf	3,6	;RP1=0, select bank0
  6137  05EA' 0084'              	movwf	___llmod@dividend
  6138  05EB' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
  6139  05F0' 1283               	bcf	3,5	;RP0=0, select bank0
  6140  05F1' 1303               	bcf	3,6	;RP1=0, select bank0
  6141  05F2' 0803'              	movf	?___llmod+3,w
  6142  05F3' 1683               	bsf	3,5	;RP0=1, select bank1
  6143  05F4' 1303               	bcf	3,6	;RP1=0, select bank1
  6144  05F5' 0080'              	movwf	(sprintf@vd+3)^(0+128)
  6145  05F6' 1283               	bcf	3,5	;RP0=0, select bank0
  6146  05F7' 1303               	bcf	3,6	;RP1=0, select bank0
  6147  05F8' 0802'              	movf	?___llmod+2,w
  6148  05F9' 1683               	bsf	3,5	;RP0=1, select bank1
  6149  05FA' 1303               	bcf	3,6	;RP1=0, select bank1
  6150  05FB' 0080'              	movwf	(sprintf@vd+2)^(0+128)
  6151  05FC' 1283               	bcf	3,5	;RP0=0, select bank0
  6152  05FD' 1303               	bcf	3,6	;RP1=0, select bank0
  6153  05FE' 0801'              	movf	?___llmod+1,w
  6154  05FF' 1683               	bsf	3,5	;RP0=1, select bank1
  6155  0600' 1303               	bcf	3,6	;RP1=0, select bank1
  6156  0601' 0080'              	movwf	(sprintf@vd+1)^(0+128)
  6157  0602' 1283               	bcf	3,5	;RP0=0, select bank0
  6158  0603' 1303               	bcf	3,6	;RP1=0, select bank0
  6159  0604' 0800'              	movf	?___llmod,w
  6160  0605' 1683               	bsf	3,5	;RP0=1, select bank1
  6161  0606' 1303               	bcf	3,6	;RP1=0, select bank1
  6162  0607' 0080'              	movwf	sprintf@vd^(0+128)
  6163                           
  6164                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)));
  6165  0608' 0800'              	movf	sprintf@vd^(0+128),w
  6166  0609' 3E30               	addlw	48
  6167  060A' 1283               	bcf	3,5	;RP0=0, select bank0
  6168  060B' 1303               	bcf	3,6	;RP1=0, select bank0
  6169  060C' 2800'              	goto	L27
  6170  060D'                    l5221:	
  6171                           ;doprnt.c: 1213: }
  6172                           ;doprnt.c: 1215: }
  6173                           ;doprnt.c: 1216: while(exp > 0) {
  6174                           
  6175                           
  6176                           ;doprnt.c: 1217: ((*sp++ = ('0')));
  6177  060D' 3030               	movlw	48
  6178  060E' 1283               	bcf	3,5	;RP0=0, select bank0
  6179  060F' 1303               	bcf	3,6	;RP1=0, select bank0
  6180  0610' 00C7'              	movwf	??_sprintf
  6181  0611' 1683               	bsf	3,5	;RP0=1, select bank1
  6182  0612' 1303               	bcf	3,6	;RP1=0, select bank1
  6183  0613' 0800'              	movf	sprintf@sp^(0+128),w
  6184  0614' 0084               	movwf	4
  6185  0615' 1283               	bcf	3,5	;RP0=0, select bank0
  6186  0616' 1303               	bcf	3,6	;RP1=0, select bank0
  6187  0617' 0847'              	movf	??_sprintf,w
  6188  0618' 1783               	bsf	3,7	;select IRP bank2
  6189  0619' 0080               	movwf	0
  6190  061A' 3001               	movlw	1
  6191  061B' 00C7'              	movwf	??_sprintf
  6192  061C' 0847'              	movf	??_sprintf,w
  6193  061D' 1683               	bsf	3,5	;RP0=1, select bank1
  6194  061E' 1303               	bcf	3,6	;RP1=0, select bank1
  6195  061F' 0780'              	addwf	sprintf@sp^(0+128),f
  6196                           
  6197                           ;doprnt.c: 1218: exp--;
  6198  0620' 30FF               	movlw	255
  6199  0621' 0780'              	addwf	sprintf@exp^(0+128),f
  6200  0622' 1803               	skipnc
  6201  0623' 0A80'              	incf	(sprintf@exp+1)^(0+128),f
  6202  0624' 30FF               	movlw	255
  6203  0625' 0780'              	addwf	(sprintf@exp+1)^(0+128),f
  6204  0626'                    l5227:	
  6205  0626' 0800'              	movf	(sprintf@exp+1)^(0+128),w
  6206  0627' 3A80               	xorlw	128
  6207  0628' 00FF               	movwf	127
  6208  0629' 3080               	movlw	128
  6209  062A' 027F               	subwf	127,w
  6210  062B' 1D03               	skipz
  6211  062C' 2800'              	goto	u7325
  6212  062D' 3001               	movlw	1
  6213  062E' 0200'              	subwf	sprintf@exp^(0+128),w
  6214  062F'                    u7325:	
  6215  062F' 1803               	skipnc
  6216  0630' 2800'              	goto	l5221
  6217                           
  6218                           ;doprnt.c: 1219: }
  6219                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  6220  0631' 1683               	bsf	3,5	;RP0=1, select bank1
  6221  0632' 1303               	bcf	3,6	;RP1=0, select bank1
  6222  0633' 0800'              	movf	(sprintf@prec+1)^(0+128),w
  6223  0634' 3A80               	xorlw	128
  6224  0635' 00FF               	movwf	127
  6225  0636' 3080               	movlw	128
  6226  0637' 027F               	subwf	127,w
  6227  0638' 1D03               	skipz
  6228  0639' 2800'              	goto	u7335
  6229  063A' 3009               	movlw	9
  6230  063B' 0200'              	subwf	sprintf@prec^(0+128),w
  6231  063C'                    u7335:	
  6232  063C' 1C03               	skipc
  6233  063D' 2800'              	goto	l5233
  6234                           
  6235                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6236  063E' 3008               	movlw	8
  6237  063F' 2800'              	goto	L28
  6238  0640'                    l5233:	
  6239                           
  6240                           ;doprnt.c: 1222: else
  6241                           ;doprnt.c: 1223: c = prec;
  6242  0640' 1683               	bsf	3,5	;RP0=1, select bank1
  6243  0641' 1303               	bcf	3,6	;RP1=0, select bank1
  6244  0642' 0800'              	movf	sprintf@prec^(0+128),w
  6245  0643'                    L28:	
  6246  0643' 1283               	bcf	3,5	;RP0=0, select bank0
  6247  0644' 1303               	bcf	3,6	;RP1=0, select bank0
  6248  0645' 00C7'              	movwf	??_sprintf
  6249  0646' 0847'              	movf	??_sprintf,w
  6250  0647' 1683               	bsf	3,5	;RP0=1, select bank1
  6251  0648' 1303               	bcf	3,6	;RP1=0, select bank1
  6252  0649' 0080'              	movwf	sprintf@c^(0+128)
  6253                           
  6254                           ;doprnt.c: 1224: prec -= c;
  6255  064A' 0800'              	movf	sprintf@c^(0+128),w
  6256  064B' 1283               	bcf	3,5	;RP0=0, select bank0
  6257  064C' 1303               	bcf	3,6	;RP1=0, select bank0
  6258  064D' 00C7'              	movwf	??_sprintf
  6259  064E' 01C8'              	clrf	??_sprintf+1
  6260  064F' 1BC7'              	btfsc	??_sprintf,7
  6261  0650' 03C8'              	decf	??_sprintf+1,f
  6262  0651' 0847'              	movf	??_sprintf,w
  6263  0652' 1683               	bsf	3,5	;RP0=1, select bank1
  6264  0653' 1303               	bcf	3,6	;RP1=0, select bank1
  6265  0654' 0280'              	subwf	sprintf@prec^(0+128),f
  6266  0655' 1283               	bcf	3,5	;RP0=0, select bank0
  6267  0656' 1303               	bcf	3,6	;RP1=0, select bank0
  6268  0657' 0848'              	movf	??_sprintf+1,w
  6269  0658' 1683               	bsf	3,5	;RP0=1, select bank1
  6270  0659' 1303               	bcf	3,6	;RP1=0, select bank1
  6271  065A' 1C03               	skipc
  6272  065B' 0380'              	decf	(sprintf@prec+1)^(0+128),f
  6273  065C' 0280'              	subwf	(sprintf@prec+1)^(0+128),f
  6274                           
  6275                           ;doprnt.c: 1228: if(c)
  6276  065D' 0800'              	movf	sprintf@c^(0+128),w
  6277  065E' 1903               	btfsc	3,2
  6278  065F' 2800'              	goto	l5239
  6279                           
  6280                           ;doprnt.c: 1230: ((*sp++ = ('.')));
  6281  0660' 302E               	movlw	46
  6282  0661' 1283               	bcf	3,5	;RP0=0, select bank0
  6283  0662' 1303               	bcf	3,6	;RP1=0, select bank0
  6284  0663' 00C7'              	movwf	??_sprintf
  6285  0664' 1683               	bsf	3,5	;RP0=1, select bank1
  6286  0665' 1303               	bcf	3,6	;RP1=0, select bank1
  6287  0666' 0800'              	movf	sprintf@sp^(0+128),w
  6288  0667' 0084               	movwf	4
  6289  0668' 1283               	bcf	3,5	;RP0=0, select bank0
  6290  0669' 1303               	bcf	3,6	;RP1=0, select bank0
  6291  066A' 0847'              	movf	??_sprintf,w
  6292  066B' 1783               	bsf	3,7	;select IRP bank2
  6293  066C' 0080               	movwf	0
  6294  066D' 3001               	movlw	1
  6295  066E' 00C7'              	movwf	??_sprintf
  6296  066F' 0847'              	movf	??_sprintf,w
  6297  0670' 1683               	bsf	3,5	;RP0=1, select bank1
  6298  0671' 1303               	bcf	3,6	;RP1=0, select bank1
  6299  0672' 0780'              	addwf	sprintf@sp^(0+128),f
  6300  0673'                    l5239:	
  6301                           
  6302                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  6303  0673' 0800'              	movf	sprintf@c^(0+128),w
  6304  0674' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  6305  0679' 1283               	bcf	3,5	;RP0=0, select bank0
  6306  067A' 1303               	bcf	3,6	;RP1=0, select bank0
  6307  067B' 0820'              	movf	?_scale,w
  6308  067C' 1683               	bsf	3,5	;RP0=1, select bank1
  6309  067D' 1303               	bcf	3,6	;RP1=0, select bank1
  6310  067E' 0080'              	movwf	_sprintf$1018^(0+128)
  6311  067F' 1283               	bcf	3,5	;RP0=0, select bank0
  6312  0680' 1303               	bcf	3,6	;RP1=0, select bank0
  6313  0681' 0821'              	movf	?_scale+1,w
  6314  0682' 1683               	bsf	3,5	;RP0=1, select bank1
  6315  0683' 1303               	bcf	3,6	;RP1=0, select bank1
  6316  0684' 0080'              	movwf	(_sprintf$1018+1)^(0+128)
  6317  0685' 1283               	bcf	3,5	;RP0=0, select bank0
  6318  0686' 1303               	bcf	3,6	;RP1=0, select bank0
  6319  0687' 0822'              	movf	?_scale+2,w
  6320  0688' 1683               	bsf	3,5	;RP0=1, select bank1
  6321  0689' 1303               	bcf	3,6	;RP1=0, select bank1
  6322  068A' 0080'              	movwf	(_sprintf$1018+2)^(0+128)
  6323                           
  6324                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  6325  068B' 0800'              	movf	_sprintf$1018^(0+128),w
  6326  068C' 1283               	bcf	3,5	;RP0=0, select bank0
  6327  068D' 1303               	bcf	3,6	;RP1=0, select bank0
  6328  068E' 0093'              	movwf	___ftmul@f2
  6329  068F' 1683               	bsf	3,5	;RP0=1, select bank1
  6330  0690' 1303               	bcf	3,6	;RP1=0, select bank1
  6331  0691' 0800'              	movf	(_sprintf$1018+1)^(0+128),w
  6332  0692' 1283               	bcf	3,5	;RP0=0, select bank0
  6333  0693' 1303               	bcf	3,6	;RP1=0, select bank0
  6334  0694' 0094'              	movwf	___ftmul@f2+1
  6335  0695' 1683               	bsf	3,5	;RP0=1, select bank1
  6336  0696' 1303               	bcf	3,6	;RP1=0, select bank1
  6337  0697' 0800'              	movf	(_sprintf$1018+2)^(0+128),w
  6338  0698' 1283               	bcf	3,5	;RP0=0, select bank0
  6339  0699' 1303               	bcf	3,6	;RP1=0, select bank0
  6340  069A' 0095'              	movwf	___ftmul@f2+2
  6341  069B' 1683               	bsf	3,5	;RP0=1, select bank1
  6342  069C' 1303               	bcf	3,6	;RP1=0, select bank1
  6343  069D' 0800'              	movf	sprintf@fval^(0+128),w
  6344  069E' 1283               	bcf	3,5	;RP0=0, select bank0
  6345  069F' 1303               	bcf	3,6	;RP1=0, select bank0
  6346  06A0' 0090'              	movwf	___ftmul@f1
  6347  06A1' 1683               	bsf	3,5	;RP0=1, select bank1
  6348  06A2' 1303               	bcf	3,6	;RP1=0, select bank1
  6349  06A3' 0800'              	movf	(sprintf@fval+1)^(0+128),w
  6350  06A4' 1283               	bcf	3,5	;RP0=0, select bank0
  6351  06A5' 1303               	bcf	3,6	;RP1=0, select bank0
  6352  06A6' 0091'              	movwf	___ftmul@f1+1
  6353  06A7' 1683               	bsf	3,5	;RP0=1, select bank1
  6354  06A8' 1303               	bcf	3,6	;RP1=0, select bank1
  6355  06A9' 0800'              	movf	(sprintf@fval+2)^(0+128),w
  6356  06AA' 1283               	bcf	3,5	;RP0=0, select bank0
  6357  06AB' 1303               	bcf	3,6	;RP1=0, select bank0
  6358  06AC' 0092'              	movwf	___ftmul@f1+2
  6359  06AD' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  6360  06B2' 1283               	bcf	3,5	;RP0=0, select bank0
  6361  06B3' 1303               	bcf	3,6	;RP1=0, select bank0
  6362  06B4' 0810'              	movf	?___ftmul,w
  6363  06B5' 00A9'              	movwf	___fttol@f1
  6364  06B6' 0811'              	movf	?___ftmul+1,w
  6365  06B7' 00AA'              	movwf	___fttol@f1+1
  6366  06B8' 0812'              	movf	?___ftmul+2,w
  6367  06B9' 00AB'              	movwf	___fttol@f1+2
  6368  06BA' 120A' 118A' 2000' 120A' 118A' 	fcall	___fttol
  6369  06BF' 1283               	bcf	3,5	;RP0=0, select bank0
  6370  06C0' 1303               	bcf	3,6	;RP1=0, select bank0
  6371  06C1' 082C'              	movf	?___fttol+3,w
  6372  06C2' 1683               	bsf	3,5	;RP0=1, select bank1
  6373  06C3' 1303               	bcf	3,6	;RP1=0, select bank1
  6374  06C4' 0080'              	movwf	(sprintf@_val+3)^(0+128)
  6375  06C5' 1283               	bcf	3,5	;RP0=0, select bank0
  6376  06C6' 1303               	bcf	3,6	;RP1=0, select bank0
  6377  06C7' 082B'              	movf	?___fttol+2,w
  6378  06C8' 1683               	bsf	3,5	;RP0=1, select bank1
  6379  06C9' 1303               	bcf	3,6	;RP1=0, select bank1
  6380  06CA' 0080'              	movwf	(sprintf@_val+2)^(0+128)
  6381  06CB' 1283               	bcf	3,5	;RP0=0, select bank0
  6382  06CC' 1303               	bcf	3,6	;RP1=0, select bank0
  6383  06CD' 082A'              	movf	?___fttol+1,w
  6384  06CE' 1683               	bsf	3,5	;RP0=1, select bank1
  6385  06CF' 1303               	bcf	3,6	;RP1=0, select bank1
  6386  06D0' 0080'              	movwf	(sprintf@_val+1)^(0+128)
  6387  06D1' 1283               	bcf	3,5	;RP0=0, select bank0
  6388  06D2' 1303               	bcf	3,6	;RP1=0, select bank0
  6389  06D3' 0829'              	movf	?___fttol,w
  6390  06D4'                    L29:	
  6391  06D4' 1683               	bsf	3,5	;RP0=1, select bank1
  6392  06D5' 1303               	bcf	3,6	;RP1=0, select bank1
  6393  06D6' 0080'              	movwf	sprintf@_val^(0+128)
  6394  06D7' 30FF               	movlw	-1
  6395  06D8' 1283               	bcf	3,5	;RP0=0, select bank0
  6396  06D9' 1303               	bcf	3,6	;RP1=0, select bank0
  6397  06DA' 00C7'              	movwf	??_sprintf
  6398  06DB' 0847'              	movf	??_sprintf,w
  6399  06DC' 1683               	bsf	3,5	;RP0=1, select bank1
  6400  06DD' 1303               	bcf	3,6	;RP1=0, select bank1
  6401  06DE' 0780'              	addwf	sprintf@c^(0+128),f
  6402  06DF' 0800'              	movf	sprintf@c^(0+128),w
  6403  06E0' 3AFF               	xorlw	-1
  6404  06E1' 1903               	btfsc	3,2
  6405  06E2' 2800'              	goto	L40
  6406                           
  6407                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
  6408                           
  6409                           ;doprnt.c: 1237: while(c--) {
  6410  06E3' 0800'              	movf	sprintf@c^(0+128),w
  6411  06E4' 1283               	bcf	3,5	;RP0=0, select bank0
  6412  06E5' 1303               	bcf	3,6	;RP1=0, select bank0
  6413  06E6' 00C7'              	movwf	??_sprintf
  6414  06E7' 3001               	movlw	1
  6415  06E8'                    u7355:	
  6416  06E8' 1003               	clrc
  6417  06E9' 0DC7'              	rlf	??_sprintf,f
  6418  06EA' 3EFF               	addlw	-1
  6419  06EB' 1D03               	skipz
  6420  06EC' 2800'              	goto	u7355
  6421  06ED' 1003               	clrc
  6422  06EE' 0D47'              	rlf	??_sprintf,w
  6423  06EF' 3E01               	addlw	low (_dpowers-__stringbase)
  6424  06F0' 0084               	movwf	4
  6425  06F1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6426  06F6' 0080'              	movwf	___lldiv@divisor
  6427  06F7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6428  06FC' 0081'              	movwf	___lldiv@divisor+1
  6429  06FD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6430  0702' 0082'              	movwf	___lldiv@divisor+2
  6431  0703' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6432  0708' 0083'              	movwf	___lldiv@divisor+3
  6433  0709' 1683               	bsf	3,5	;RP0=1, select bank1
  6434  070A' 1303               	bcf	3,6	;RP1=0, select bank1
  6435  070B' 0800'              	movf	(sprintf@_val+3)^(0+128),w
  6436  070C' 1283               	bcf	3,5	;RP0=0, select bank0
  6437  070D' 1303               	bcf	3,6	;RP1=0, select bank0
  6438  070E' 0087'              	movwf	___lldiv@dividend+3
  6439  070F' 1683               	bsf	3,5	;RP0=1, select bank1
  6440  0710' 1303               	bcf	3,6	;RP1=0, select bank1
  6441  0711' 0800'              	movf	(sprintf@_val+2)^(0+128),w
  6442  0712' 1283               	bcf	3,5	;RP0=0, select bank0
  6443  0713' 1303               	bcf	3,6	;RP1=0, select bank0
  6444  0714' 0086'              	movwf	___lldiv@dividend+2
  6445  0715' 1683               	bsf	3,5	;RP0=1, select bank1
  6446  0716' 1303               	bcf	3,6	;RP1=0, select bank1
  6447  0717' 0800'              	movf	(sprintf@_val+1)^(0+128),w
  6448  0718' 1283               	bcf	3,5	;RP0=0, select bank0
  6449  0719' 1303               	bcf	3,6	;RP1=0, select bank0
  6450  071A' 0085'              	movwf	___lldiv@dividend+1
  6451  071B' 1683               	bsf	3,5	;RP0=1, select bank1
  6452  071C' 1303               	bcf	3,6	;RP1=0, select bank1
  6453  071D' 0800'              	movf	sprintf@_val^(0+128),w
  6454  071E' 1283               	bcf	3,5	;RP0=0, select bank0
  6455  071F' 1303               	bcf	3,6	;RP1=0, select bank0
  6456  0720' 0084'              	movwf	___lldiv@dividend
  6457  0721' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
  6458  0726' 1283               	bcf	3,5	;RP0=0, select bank0
  6459  0727' 1303               	bcf	3,6	;RP1=0, select bank0
  6460  0728' 0803'              	movf	?___lldiv+3,w
  6461  0729' 1683               	bsf	3,5	;RP0=1, select bank1
  6462  072A' 1303               	bcf	3,6	;RP1=0, select bank1
  6463  072B' 0080'              	movwf	(sprintf@vd_502+3)^(0+128)
  6464  072C' 1283               	bcf	3,5	;RP0=0, select bank0
  6465  072D' 1303               	bcf	3,6	;RP1=0, select bank0
  6466  072E' 0802'              	movf	?___lldiv+2,w
  6467  072F' 1683               	bsf	3,5	;RP0=1, select bank1
  6468  0730' 1303               	bcf	3,6	;RP1=0, select bank1
  6469  0731' 0080'              	movwf	(sprintf@vd_502+2)^(0+128)
  6470  0732' 1283               	bcf	3,5	;RP0=0, select bank0
  6471  0733' 1303               	bcf	3,6	;RP1=0, select bank0
  6472  0734' 0801'              	movf	?___lldiv+1,w
  6473  0735' 1683               	bsf	3,5	;RP0=1, select bank1
  6474  0736' 1303               	bcf	3,6	;RP1=0, select bank1
  6475  0737' 0080'              	movwf	(sprintf@vd_502+1)^(0+128)
  6476  0738' 1283               	bcf	3,5	;RP0=0, select bank0
  6477  0739' 1303               	bcf	3,6	;RP1=0, select bank0
  6478  073A' 0800'              	movf	?___lldiv,w
  6479  073B' 1683               	bsf	3,5	;RP0=1, select bank1
  6480  073C' 1303               	bcf	3,6	;RP1=0, select bank1
  6481  073D' 0080'              	movwf	sprintf@vd_502^(0+128)
  6482                           
  6483                           ;doprnt.c: 1239: vd %= 10;
  6484  073E' 3000               	movlw	0
  6485  073F' 1283               	bcf	3,5	;RP0=0, select bank0
  6486  0740' 1303               	bcf	3,6	;RP1=0, select bank0
  6487  0741' 0083'              	movwf	___llmod@divisor+3
  6488  0742' 3000               	movlw	0
  6489  0743' 0082'              	movwf	___llmod@divisor+2
  6490  0744' 3000               	movlw	0
  6491  0745' 0081'              	movwf	___llmod@divisor+1
  6492  0746' 300A               	movlw	10
  6493  0747' 0080'              	movwf	___llmod@divisor
  6494  0748' 1683               	bsf	3,5	;RP0=1, select bank1
  6495  0749' 1303               	bcf	3,6	;RP1=0, select bank1
  6496  074A' 0800'              	movf	(sprintf@vd_502+3)^(0+128),w
  6497  074B' 1283               	bcf	3,5	;RP0=0, select bank0
  6498  074C' 1303               	bcf	3,6	;RP1=0, select bank0
  6499  074D' 0087'              	movwf	___llmod@dividend+3
  6500  074E' 1683               	bsf	3,5	;RP0=1, select bank1
  6501  074F' 1303               	bcf	3,6	;RP1=0, select bank1
  6502  0750' 0800'              	movf	(sprintf@vd_502+2)^(0+128),w
  6503  0751' 1283               	bcf	3,5	;RP0=0, select bank0
  6504  0752' 1303               	bcf	3,6	;RP1=0, select bank0
  6505  0753' 0086'              	movwf	___llmod@dividend+2
  6506  0754' 1683               	bsf	3,5	;RP0=1, select bank1
  6507  0755' 1303               	bcf	3,6	;RP1=0, select bank1
  6508  0756' 0800'              	movf	(sprintf@vd_502+1)^(0+128),w
  6509  0757' 1283               	bcf	3,5	;RP0=0, select bank0
  6510  0758' 1303               	bcf	3,6	;RP1=0, select bank0
  6511  0759' 0085'              	movwf	___llmod@dividend+1
  6512  075A' 1683               	bsf	3,5	;RP0=1, select bank1
  6513  075B' 1303               	bcf	3,6	;RP1=0, select bank1
  6514  075C' 0800'              	movf	sprintf@vd_502^(0+128),w
  6515  075D' 1283               	bcf	3,5	;RP0=0, select bank0
  6516  075E' 1303               	bcf	3,6	;RP1=0, select bank0
  6517  075F' 0084'              	movwf	___llmod@dividend
  6518  0760' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
  6519  0765' 1283               	bcf	3,5	;RP0=0, select bank0
  6520  0766' 1303               	bcf	3,6	;RP1=0, select bank0
  6521  0767' 0803'              	movf	?___llmod+3,w
  6522  0768' 1683               	bsf	3,5	;RP0=1, select bank1
  6523  0769' 1303               	bcf	3,6	;RP1=0, select bank1
  6524  076A' 0080'              	movwf	(sprintf@vd_502+3)^(0+128)
  6525  076B' 1283               	bcf	3,5	;RP0=0, select bank0
  6526  076C' 1303               	bcf	3,6	;RP1=0, select bank0
  6527  076D' 0802'              	movf	?___llmod+2,w
  6528  076E' 1683               	bsf	3,5	;RP0=1, select bank1
  6529  076F' 1303               	bcf	3,6	;RP1=0, select bank1
  6530  0770' 0080'              	movwf	(sprintf@vd_502+2)^(0+128)
  6531  0771' 1283               	bcf	3,5	;RP0=0, select bank0
  6532  0772' 1303               	bcf	3,6	;RP1=0, select bank0
  6533  0773' 0801'              	movf	?___llmod+1,w
  6534  0774' 1683               	bsf	3,5	;RP0=1, select bank1
  6535  0775' 1303               	bcf	3,6	;RP1=0, select bank1
  6536  0776' 0080'              	movwf	(sprintf@vd_502+1)^(0+128)
  6537  0777' 1283               	bcf	3,5	;RP0=0, select bank0
  6538  0778' 1303               	bcf	3,6	;RP1=0, select bank0
  6539  0779' 0800'              	movf	?___llmod,w
  6540  077A' 1683               	bsf	3,5	;RP0=1, select bank1
  6541  077B' 1303               	bcf	3,6	;RP1=0, select bank1
  6542  077C' 0080'              	movwf	sprintf@vd_502^(0+128)
  6543                           
  6544                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)));
  6545  077D' 0800'              	movf	sprintf@vd_502^(0+128),w
  6546  077E' 3E30               	addlw	48
  6547  077F' 1283               	bcf	3,5	;RP0=0, select bank0
  6548  0780' 1303               	bcf	3,6	;RP1=0, select bank0
  6549  0781' 00C7'              	movwf	??_sprintf
  6550  0782' 1683               	bsf	3,5	;RP0=1, select bank1
  6551  0783' 1303               	bcf	3,6	;RP1=0, select bank1
  6552  0784' 0800'              	movf	sprintf@sp^(0+128),w
  6553  0785' 0084               	movwf	4
  6554  0786' 1283               	bcf	3,5	;RP0=0, select bank0
  6555  0787' 1303               	bcf	3,6	;RP1=0, select bank0
  6556  0788' 0847'              	movf	??_sprintf,w
  6557  0789' 1783               	bsf	3,7	;select IRP bank2
  6558  078A' 0080               	movwf	0
  6559  078B' 3001               	movlw	1
  6560  078C' 00C7'              	movwf	??_sprintf
  6561  078D' 0847'              	movf	??_sprintf,w
  6562  078E' 1683               	bsf	3,5	;RP0=1, select bank1
  6563  078F' 1303               	bcf	3,6	;RP1=0, select bank1
  6564  0790' 0780'              	addwf	sprintf@sp^(0+128),f
  6565                           
  6566                           ;doprnt.c: 1241: _val._val %= dpowers[c];
  6567  0791' 0800'              	movf	sprintf@c^(0+128),w
  6568  0792' 1283               	bcf	3,5	;RP0=0, select bank0
  6569  0793' 1303               	bcf	3,6	;RP1=0, select bank0
  6570  0794' 00C7'              	movwf	??_sprintf
  6571  0795' 3001               	movlw	1
  6572  0796'                    u7365:	
  6573  0796' 1003               	clrc
  6574  0797' 0DC7'              	rlf	??_sprintf,f
  6575  0798' 3EFF               	addlw	-1
  6576  0799' 1D03               	skipz
  6577  079A' 2800'              	goto	u7365
  6578  079B' 1003               	clrc
  6579  079C' 0D47'              	rlf	??_sprintf,w
  6580  079D' 3E01               	addlw	low (_dpowers-__stringbase)
  6581  079E' 0084               	movwf	4
  6582  079F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6583  07A4' 0080'              	movwf	___llmod@divisor
  6584  07A5' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6585  07AA' 0081'              	movwf	___llmod@divisor+1
  6586  07AB' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6587  07B0' 0082'              	movwf	___llmod@divisor+2
  6588  07B1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6589  07B6' 0083'              	movwf	___llmod@divisor+3
  6590  07B7' 1683               	bsf	3,5	;RP0=1, select bank1
  6591  07B8' 1303               	bcf	3,6	;RP1=0, select bank1
  6592  07B9' 0800'              	movf	(sprintf@_val+3)^(0+128),w
  6593  07BA' 1283               	bcf	3,5	;RP0=0, select bank0
  6594  07BB' 1303               	bcf	3,6	;RP1=0, select bank0
  6595  07BC' 0087'              	movwf	___llmod@dividend+3
  6596  07BD' 1683               	bsf	3,5	;RP0=1, select bank1
  6597  07BE' 1303               	bcf	3,6	;RP1=0, select bank1
  6598  07BF' 0800'              	movf	(sprintf@_val+2)^(0+128),w
  6599  07C0' 1283               	bcf	3,5	;RP0=0, select bank0
  6600  07C1' 1303               	bcf	3,6	;RP1=0, select bank0
  6601  07C2' 0086'              	movwf	___llmod@dividend+2
  6602  07C3' 1683               	bsf	3,5	;RP0=1, select bank1
  6603  07C4' 1303               	bcf	3,6	;RP1=0, select bank1
  6604  07C5' 0800'              	movf	(sprintf@_val+1)^(0+128),w
  6605  07C6' 1283               	bcf	3,5	;RP0=0, select bank0
  6606  07C7' 1303               	bcf	3,6	;RP1=0, select bank0
  6607  07C8' 0085'              	movwf	___llmod@dividend+1
  6608  07C9' 1683               	bsf	3,5	;RP0=1, select bank1
  6609  07CA' 1303               	bcf	3,6	;RP1=0, select bank1
  6610  07CB' 0800'              	movf	sprintf@_val^(0+128),w
  6611  07CC' 1283               	bcf	3,5	;RP0=0, select bank0
  6612  07CD' 1303               	bcf	3,6	;RP1=0, select bank0
  6613  07CE' 0084'              	movwf	___llmod@dividend
  6614  07CF' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
  6615  07D4' 1283               	bcf	3,5	;RP0=0, select bank0
  6616  07D5' 1303               	bcf	3,6	;RP1=0, select bank0
  6617  07D6' 0803'              	movf	?___llmod+3,w
  6618  07D7' 1683               	bsf	3,5	;RP0=1, select bank1
  6619  07D8' 1303               	bcf	3,6	;RP1=0, select bank1
  6620  07D9' 0080'              	movwf	(sprintf@_val+3)^(0+128)
  6621  07DA' 1283               	bcf	3,5	;RP0=0, select bank0
  6622  07DB' 1303               	bcf	3,6	;RP1=0, select bank0
  6623  07DC' 0802'              	movf	?___llmod+2,w
  6624  07DD' 1683               	bsf	3,5	;RP0=1, select bank1
  6625  07DE' 1303               	bcf	3,6	;RP1=0, select bank1
  6626  07DF' 0080'              	movwf	(sprintf@_val+2)^(0+128)
  6627  07E0' 1283               	bcf	3,5	;RP0=0, select bank0
  6628  07E1' 1303               	bcf	3,6	;RP1=0, select bank0
  6629  07E2' 0801'              	movf	?___llmod+1,w
  6630  07E3' 1683               	bsf	3,5	;RP0=1, select bank1
  6631  07E4' 1303               	bcf	3,6	;RP1=0, select bank1
  6632  07E5' 0080'              	movwf	(sprintf@_val+1)^(0+128)
  6633  07E6' 1283               	bcf	3,5	;RP0=0, select bank0
  6634  07E7' 1303               	bcf	3,6	;RP1=0, select bank0
  6635  07E8' 0800'              	movf	?___llmod,w
  6636  07E9' 2800'              	goto	L29
  6637  07EA'                    L36:	
  6638  07EA' 120A' 118A' 2800'  	ljmp	l5325
  6639  07ED'                    L38:	
  6640  07ED' 120A' 118A' 2800'  	ljmp	l5261
  6641  07F0'                    L40:	
  6642  07F0' 120A' 118A' 2800'  	ljmp	l5259
  6643                           
  6644                           	psect	text7
  6645  0000'                    __ptext7:	
  6646 ;; *************** function _scale *****************
  6647 ;; Defined at:
  6648 ;;		line 425 in file "/opt/microchip/xc8/v1.33/sources/common/doprnt.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;  scl             1    wreg     char 
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;  scl             1   40[BANK0 ] char 
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  3   32[BANK0 ] char 
  6655 ;; Registers used:
  6656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6662 ;;      Params:         0       3       0       0       0
  6663 ;;      Locals:         0       4       0       0       0
  6664 ;;      Temps:          0       2       0       0       0
  6665 ;;      Totals:         0       9       0       0       0
  6666 ;;Total ram usage:        9 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; Hardware stack levels required when called:    3
  6669 ;; This function calls:
  6670 ;;		___awdiv
  6671 ;;		___awmod
  6672 ;;		___bmul
  6673 ;;		___ftmul
  6674 ;; This function is called by:
  6675 ;;		_sprintf
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           
  6680                           ;psect for function _scale
  6681  0000'                    _scale:	
  6682                           
  6683                           ;incstack = 0
  6684                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6685                           ;scale@scl stored from wreg
  6686  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  6687  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  6688  0002' 00A8'              	movwf	scale@scl
  6689                           
  6690                           ;doprnt.c: 428: if(scl < 0) {
  6691  0003' 1FA8'              	btfss	scale@scl,7
  6692  0004' 2800'              	goto	l4811
  6693                           
  6694                           ;doprnt.c: 429: scl = -scl;
  6695  0005' 09A8'              	comf	scale@scl,f
  6696  0006' 0AA8'              	incf	scale@scl,f
  6697                           
  6698                           ;doprnt.c: 430: if(scl>=110)
  6699  0007' 0828'              	movf	scale@scl,w
  6700  0008' 3A80               	xorlw	128
  6701  0009' 3E12               	addlw	-238
  6702  000A' 1C03               	skipc
  6703  000B' 2800'              	goto	l4801
  6704                           
  6705                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6706  000C' 3003               	movlw	3
  6707  000D' 00A3'              	movwf	??_scale
  6708  000E' 0823'              	movf	??_scale,w
  6709  000F' 008C'              	movwf	___bmul@multiplicand
  6710  0010' 300A               	movlw	10
  6711  0011' 0083'              	movwf	___awdiv@divisor
  6712  0012' 3000               	movlw	0
  6713  0013' 0084'              	movwf	___awdiv@divisor+1
  6714  0014' 0828'              	movf	scale@scl,w
  6715  0015' 0086'              	movwf	___awmod@dividend
  6716  0016' 0187'              	clrf	___awmod@dividend+1
  6717  0017' 1B86'              	btfsc	___awmod@dividend,7
  6718  0018' 0387'              	decf	___awmod@dividend+1,f
  6719  0019' 3064               	movlw	100
  6720  001A' 0084'              	movwf	___awmod@divisor
  6721  001B' 3000               	movlw	0
  6722  001C' 0085'              	movwf	___awmod@divisor+1
  6723  001D' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  6724  0022' 0805'              	movf	?___awmod+1,w
  6725  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  6726  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  6727  0025' 0186'              	clrf	___awdiv@dividend+1
  6728  0026' 0786'              	addwf	___awdiv@dividend+1,f
  6729  0027' 0804'              	movf	?___awmod,w
  6730  0028' 0185'              	clrf	___awdiv@dividend
  6731  0029' 0785'              	addwf	___awdiv@dividend,f
  6732  002A' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  6733  002F' 1283               	bcf	3,5	;RP0=0, select bank0
  6734  0030' 1303               	bcf	3,6	;RP1=0, select bank0
  6735  0031' 0803'              	movf	?___awdiv,w
  6736  0032' 3E09               	addlw	9
  6737  0033' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  6738  0038' 3E29               	addlw	low (__npowers_-__stringbase)
  6739  0039' 0084               	movwf	4
  6740  003A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6741  003F' 1283               	bcf	3,5	;RP0=0, select bank0
  6742  0040' 1303               	bcf	3,6	;RP1=0, select bank0
  6743  0041' 0090'              	movwf	___ftmul@f1
  6744  0042' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6745  0047' 0091'              	movwf	___ftmul@f1+1
  6746  0048' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6747  004D' 0092'              	movwf	___ftmul@f1+2
  6748  004E' 3003               	movlw	3
  6749  004F' 00A4'              	movwf	??_scale+1
  6750  0050' 0824'              	movf	??_scale+1,w
  6751  0051' 008C'              	movwf	___bmul@multiplicand
  6752  0052' 3064               	movlw	100
  6753  0053' 0083'              	movwf	___awdiv@divisor
  6754  0054' 3000               	movlw	0
  6755  0055' 0084'              	movwf	___awdiv@divisor+1
  6756  0056' 0828'              	movf	scale@scl,w
  6757  0057' 0085'              	movwf	___awdiv@dividend
  6758  0058' 0186'              	clrf	___awdiv@dividend+1
  6759  0059' 1B85'              	btfsc	___awdiv@dividend,7
  6760  005A' 0386'              	decf	___awdiv@dividend+1,f
  6761  005B' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  6762  0060' 1283               	bcf	3,5	;RP0=0, select bank0
  6763  0061' 1303               	bcf	3,6	;RP1=0, select bank0
  6764  0062' 0803'              	movf	?___awdiv,w
  6765  0063' 3E12               	addlw	18
  6766  0064' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  6767  0069' 3E29               	addlw	low (__npowers_-__stringbase)
  6768  006A' 0084               	movwf	4
  6769  006B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6770  0070' 1283               	bcf	3,5	;RP0=0, select bank0
  6771  0071' 1303               	bcf	3,6	;RP1=0, select bank0
  6772  0072' 0093'              	movwf	___ftmul@f2
  6773  0073' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6774  0078' 0094'              	movwf	___ftmul@f2+1
  6775  0079' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6776  007E' 0095'              	movwf	___ftmul@f2+2
  6777  007F' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  6778  0084' 1283               	bcf	3,5	;RP0=0, select bank0
  6779  0085' 1303               	bcf	3,6	;RP1=0, select bank0
  6780  0086' 0810'              	movf	?___ftmul,w
  6781  0087' 00A5'              	movwf	_scale$1017
  6782  0088' 0811'              	movf	?___ftmul+1,w
  6783  0089' 00A6'              	movwf	_scale$1017+1
  6784  008A' 0812'              	movf	?___ftmul+2,w
  6785  008B' 00A7'              	movwf	_scale$1017+2
  6786                           
  6787                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6788  008C' 3003               	movlw	3
  6789  008D' 00A3'              	movwf	??_scale
  6790  008E' 0823'              	movf	??_scale,w
  6791  008F' 008C'              	movwf	___bmul@multiplicand
  6792  0090' 0828'              	movf	scale@scl,w
  6793  0091' 0086'              	movwf	___awmod@dividend
  6794  0092' 0187'              	clrf	___awmod@dividend+1
  6795  0093' 1B86'              	btfsc	___awmod@dividend,7
  6796  0094' 0387'              	decf	___awmod@dividend+1,f
  6797  0095' 300A               	movlw	10
  6798  0096' 0084'              	movwf	___awmod@divisor
  6799  0097' 3000               	movlw	0
  6800  0098' 0085'              	movwf	___awmod@divisor+1
  6801  0099' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  6802  009E' 0804'              	movf	?___awmod,w
  6803  009F' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  6804  00A4' 3E29               	addlw	low (__npowers_-__stringbase)
  6805  00A5' 0084               	movwf	4
  6806  00A6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6807  00AB' 1283               	bcf	3,5	;RP0=0, select bank0
  6808  00AC' 1303               	bcf	3,6	;RP1=0, select bank0
  6809  00AD' 0090'              	movwf	___ftmul@f1
  6810  00AE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6811  00B3' 0091'              	movwf	___ftmul@f1+1
  6812  00B4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6813  00B9' 0092'              	movwf	___ftmul@f1+2
  6814  00BA' 0825'              	movf	_scale$1017,w
  6815  00BB' 0093'              	movwf	___ftmul@f2
  6816  00BC' 0826'              	movf	_scale$1017+1,w
  6817  00BD' 0094'              	movwf	___ftmul@f2+1
  6818  00BE' 0827'              	movf	_scale$1017+2,w
  6819  00BF' 0095'              	movwf	___ftmul@f2+2
  6820  00C0' 120A' 118A' 2000'  	fcall	___ftmul
  6821  00C3' 1283               	bcf	3,5	;RP0=0, select bank0
  6822  00C4' 1303               	bcf	3,6	;RP1=0, select bank0
  6823  00C5' 0810'              	movf	?___ftmul,w
  6824  00C6' 00A0'              	movwf	?_scale
  6825  00C7' 0811'              	movf	?___ftmul+1,w
  6826  00C8' 00A1'              	movwf	?_scale+1
  6827  00C9' 0812'              	movf	?___ftmul+2,w
  6828  00CA' 00A2'              	movwf	?_scale+2
  6829  00CB' 0008               	return
  6830  00CC'                    l4801:	
  6831                           
  6832                           ;doprnt.c: 432: else if(scl > 10)
  6833  00CC' 0828'              	movf	scale@scl,w
  6834  00CD' 3A80               	xorlw	128
  6835  00CE' 3E75               	addlw	-139
  6836  00CF' 1C03               	skipc
  6837  00D0' 2800'              	goto	l4807
  6838                           
  6839                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6840  00D1' 3003               	movlw	3
  6841  00D2' 00A3'              	movwf	??_scale
  6842  00D3' 0823'              	movf	??_scale,w
  6843  00D4' 008C'              	movwf	___bmul@multiplicand
  6844  00D5' 0828'              	movf	scale@scl,w
  6845  00D6' 0086'              	movwf	___awmod@dividend
  6846  00D7' 0187'              	clrf	___awmod@dividend+1
  6847  00D8' 1B86'              	btfsc	___awmod@dividend,7
  6848  00D9' 0387'              	decf	___awmod@dividend+1,f
  6849  00DA' 300A               	movlw	10
  6850  00DB' 0084'              	movwf	___awmod@divisor
  6851  00DC' 3000               	movlw	0
  6852  00DD' 0085'              	movwf	___awmod@divisor+1
  6853  00DE' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  6854  00E3' 0804'              	movf	?___awmod,w
  6855  00E4' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  6856  00E9' 3E29               	addlw	low (__npowers_-__stringbase)
  6857  00EA' 0084               	movwf	4
  6858  00EB' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6859  00F0' 1283               	bcf	3,5	;RP0=0, select bank0
  6860  00F1' 1303               	bcf	3,6	;RP1=0, select bank0
  6861  00F2' 0090'              	movwf	___ftmul@f1
  6862  00F3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6863  00F8' 0091'              	movwf	___ftmul@f1+1
  6864  00F9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6865  00FE' 0092'              	movwf	___ftmul@f1+2
  6866  00FF' 3003               	movlw	3
  6867  0100' 00A4'              	movwf	??_scale+1
  6868  0101' 0824'              	movf	??_scale+1,w
  6869  0102' 008C'              	movwf	___bmul@multiplicand
  6870  0103' 300A               	movlw	10
  6871  0104' 0083'              	movwf	___awdiv@divisor
  6872  0105' 3000               	movlw	0
  6873  0106' 0084'              	movwf	___awdiv@divisor+1
  6874  0107' 0828'              	movf	scale@scl,w
  6875  0108' 0085'              	movwf	___awdiv@dividend
  6876  0109' 0186'              	clrf	___awdiv@dividend+1
  6877  010A' 1B85'              	btfsc	___awdiv@dividend,7
  6878  010B' 0386'              	decf	___awdiv@dividend+1,f
  6879  010C' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  6880  0111' 1283               	bcf	3,5	;RP0=0, select bank0
  6881  0112' 1303               	bcf	3,6	;RP1=0, select bank0
  6882  0113' 0803'              	movf	?___awdiv,w
  6883  0114' 3E09               	addlw	9
  6884  0115' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  6885  011A' 3E29               	addlw	low (__npowers_-__stringbase)
  6886  011B' 0084               	movwf	4
  6887  011C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6888  0121' 1283               	bcf	3,5	;RP0=0, select bank0
  6889  0122' 1303               	bcf	3,6	;RP1=0, select bank0
  6890  0123' 0093'              	movwf	___ftmul@f2
  6891  0124' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6892  0129' 0094'              	movwf	___ftmul@f2+1
  6893  012A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6894  012F' 0095'              	movwf	___ftmul@f2+2
  6895  0130' 120A' 118A' 2000'  	fcall	___ftmul
  6896  0133' 1283               	bcf	3,5	;RP0=0, select bank0
  6897  0134' 1303               	bcf	3,6	;RP1=0, select bank0
  6898  0135' 0810'              	movf	?___ftmul,w
  6899  0136' 00A0'              	movwf	?_scale
  6900  0137' 0811'              	movf	?___ftmul+1,w
  6901  0138' 00A1'              	movwf	?_scale+1
  6902  0139' 0812'              	movf	?___ftmul+2,w
  6903  013A' 00A2'              	movwf	?_scale+2
  6904  013B' 0008               	return
  6905  013C'                    l4807:	
  6906                           
  6907                           ;doprnt.c: 434: return _npowers_[scl];
  6908  013C' 3003               	movlw	3
  6909  013D' 00A3'              	movwf	??_scale
  6910  013E' 0823'              	movf	??_scale,w
  6911  013F' 008C'              	movwf	___bmul@multiplicand
  6912  0140' 0828'              	movf	scale@scl,w
  6913  0141' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  6914  0146' 3E29               	addlw	low (__npowers_-__stringbase)
  6915  0147' 0084               	movwf	4
  6916  0148' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6917  014D' 1283               	bcf	3,5	;RP0=0, select bank0
  6918  014E' 1303               	bcf	3,6	;RP1=0, select bank0
  6919  014F' 00A0'              	movwf	?_scale
  6920  0150' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6921  0155' 00A1'              	movwf	?_scale+1
  6922  0156' 120A' 118A' 2000'  	fcall	stringdir
  6923  0159' 00A2'              	movwf	?_scale+2
  6924  015A' 0008               	return
  6925  015B'                    l4811:	
  6926                           
  6927                           ;doprnt.c: 435: }
  6928                           ;doprnt.c: 436: if(scl>=110)
  6929  015B' 0828'              	movf	scale@scl,w
  6930  015C' 3A80               	xorlw	128
  6931  015D' 3E12               	addlw	-238
  6932  015E' 1C03               	skipc
  6933  015F' 2800'              	goto	l4819
  6934                           
  6935                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6936  0160' 3003               	movlw	3
  6937  0161' 00A3'              	movwf	??_scale
  6938  0162' 0823'              	movf	??_scale,w
  6939  0163' 008C'              	movwf	___bmul@multiplicand
  6940  0164' 300A               	movlw	10
  6941  0165' 0083'              	movwf	___awdiv@divisor
  6942  0166' 3000               	movlw	0
  6943  0167' 0084'              	movwf	___awdiv@divisor+1
  6944  0168' 0828'              	movf	scale@scl,w
  6945  0169' 0086'              	movwf	___awmod@dividend
  6946  016A' 0187'              	clrf	___awmod@dividend+1
  6947  016B' 1B86'              	btfsc	___awmod@dividend,7
  6948  016C' 0387'              	decf	___awmod@dividend+1,f
  6949  016D' 3064               	movlw	100
  6950  016E' 0084'              	movwf	___awmod@divisor
  6951  016F' 3000               	movlw	0
  6952  0170' 0085'              	movwf	___awmod@divisor+1
  6953  0171' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  6954  0176' 0805'              	movf	?___awmod+1,w
  6955  0177' 1283               	bcf	3,5	;RP0=0, select bank0
  6956  0178' 1303               	bcf	3,6	;RP1=0, select bank0
  6957  0179' 0186'              	clrf	___awdiv@dividend+1
  6958  017A' 0786'              	addwf	___awdiv@dividend+1,f
  6959  017B' 0804'              	movf	?___awmod,w
  6960  017C' 0185'              	clrf	___awdiv@dividend
  6961  017D' 0785'              	addwf	___awdiv@dividend,f
  6962  017E' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  6963  0183' 1283               	bcf	3,5	;RP0=0, select bank0
  6964  0184' 1303               	bcf	3,6	;RP1=0, select bank0
  6965  0185' 0803'              	movf	?___awdiv,w
  6966  0186' 3E09               	addlw	9
  6967  0187' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  6968  018C' 3E50               	addlw	low (__powers_-__stringbase)
  6969  018D' 0084               	movwf	4
  6970  018E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6971  0193' 1283               	bcf	3,5	;RP0=0, select bank0
  6972  0194' 1303               	bcf	3,6	;RP1=0, select bank0
  6973  0195' 0090'              	movwf	___ftmul@f1
  6974  0196' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6975  019B' 0091'              	movwf	___ftmul@f1+1
  6976  019C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  6977  01A1' 0092'              	movwf	___ftmul@f1+2
  6978  01A2' 3003               	movlw	3
  6979  01A3' 00A4'              	movwf	??_scale+1
  6980  01A4' 0824'              	movf	??_scale+1,w
  6981  01A5' 008C'              	movwf	___bmul@multiplicand
  6982  01A6' 3064               	movlw	100
  6983  01A7' 0083'              	movwf	___awdiv@divisor
  6984  01A8' 3000               	movlw	0
  6985  01A9' 0084'              	movwf	___awdiv@divisor+1
  6986  01AA' 0828'              	movf	scale@scl,w
  6987  01AB' 0085'              	movwf	___awdiv@dividend
  6988  01AC' 0186'              	clrf	___awdiv@dividend+1
  6989  01AD' 1B85'              	btfsc	___awdiv@dividend,7
  6990  01AE' 0386'              	decf	___awdiv@dividend+1,f
  6991  01AF' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  6992  01B4' 1283               	bcf	3,5	;RP0=0, select bank0
  6993  01B5' 1303               	bcf	3,6	;RP1=0, select bank0
  6994  01B6' 0803'              	movf	?___awdiv,w
  6995  01B7' 3E12               	addlw	18
  6996  01B8' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  6997  01BD' 3E50               	addlw	low (__powers_-__stringbase)
  6998  01BE' 0084               	movwf	4
  6999  01BF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7000  01C4' 1283               	bcf	3,5	;RP0=0, select bank0
  7001  01C5' 1303               	bcf	3,6	;RP1=0, select bank0
  7002  01C6' 0093'              	movwf	___ftmul@f2
  7003  01C7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7004  01CC' 0094'              	movwf	___ftmul@f2+1
  7005  01CD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7006  01D2' 0095'              	movwf	___ftmul@f2+2
  7007  01D3' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  7008  01D8' 1283               	bcf	3,5	;RP0=0, select bank0
  7009  01D9' 1303               	bcf	3,6	;RP1=0, select bank0
  7010  01DA' 0810'              	movf	?___ftmul,w
  7011  01DB' 00A5'              	movwf	_scale$1017
  7012  01DC' 0811'              	movf	?___ftmul+1,w
  7013  01DD' 00A6'              	movwf	_scale$1017+1
  7014  01DE' 0812'              	movf	?___ftmul+2,w
  7015  01DF' 00A7'              	movwf	_scale$1017+2
  7016                           
  7017                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7018  01E0' 3003               	movlw	3
  7019  01E1' 00A3'              	movwf	??_scale
  7020  01E2' 0823'              	movf	??_scale,w
  7021  01E3' 008C'              	movwf	___bmul@multiplicand
  7022  01E4' 0828'              	movf	scale@scl,w
  7023  01E5' 0086'              	movwf	___awmod@dividend
  7024  01E6' 0187'              	clrf	___awmod@dividend+1
  7025  01E7' 1B86'              	btfsc	___awmod@dividend,7
  7026  01E8' 0387'              	decf	___awmod@dividend+1,f
  7027  01E9' 300A               	movlw	10
  7028  01EA' 0084'              	movwf	___awmod@divisor
  7029  01EB' 3000               	movlw	0
  7030  01EC' 0085'              	movwf	___awmod@divisor+1
  7031  01ED' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  7032  01F2' 0804'              	movf	?___awmod,w
  7033  01F3' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7034  01F8' 3E50               	addlw	low (__powers_-__stringbase)
  7035  01F9' 0084               	movwf	4
  7036  01FA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7037  01FF' 1283               	bcf	3,5	;RP0=0, select bank0
  7038  0200' 1303               	bcf	3,6	;RP1=0, select bank0
  7039  0201' 0090'              	movwf	___ftmul@f1
  7040  0202' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7041  0207' 0091'              	movwf	___ftmul@f1+1
  7042  0208' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7043  020D' 0092'              	movwf	___ftmul@f1+2
  7044  020E' 0825'              	movf	_scale$1017,w
  7045  020F' 0093'              	movwf	___ftmul@f2
  7046  0210' 0826'              	movf	_scale$1017+1,w
  7047  0211' 0094'              	movwf	___ftmul@f2+1
  7048  0212' 0827'              	movf	_scale$1017+2,w
  7049  0213' 0095'              	movwf	___ftmul@f2+2
  7050  0214' 120A' 118A' 2000'  	fcall	___ftmul
  7051  0217' 1283               	bcf	3,5	;RP0=0, select bank0
  7052  0218' 1303               	bcf	3,6	;RP1=0, select bank0
  7053  0219' 0810'              	movf	?___ftmul,w
  7054  021A' 00A0'              	movwf	?_scale
  7055  021B' 0811'              	movf	?___ftmul+1,w
  7056  021C' 00A1'              	movwf	?_scale+1
  7057  021D' 0812'              	movf	?___ftmul+2,w
  7058  021E' 00A2'              	movwf	?_scale+2
  7059  021F' 0008               	return
  7060  0220'                    l4819:	
  7061                           
  7062                           ;doprnt.c: 438: else if(scl > 10)
  7063  0220' 0828'              	movf	scale@scl,w
  7064  0221' 3A80               	xorlw	128
  7065  0222' 3E75               	addlw	-139
  7066  0223' 1C03               	skipc
  7067  0224' 2800'              	goto	l4825
  7068                           
  7069                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7070  0225' 3003               	movlw	3
  7071  0226' 00A3'              	movwf	??_scale
  7072  0227' 0823'              	movf	??_scale,w
  7073  0228' 008C'              	movwf	___bmul@multiplicand
  7074  0229' 0828'              	movf	scale@scl,w
  7075  022A' 0086'              	movwf	___awmod@dividend
  7076  022B' 0187'              	clrf	___awmod@dividend+1
  7077  022C' 1B86'              	btfsc	___awmod@dividend,7
  7078  022D' 0387'              	decf	___awmod@dividend+1,f
  7079  022E' 300A               	movlw	10
  7080  022F' 0084'              	movwf	___awmod@divisor
  7081  0230' 3000               	movlw	0
  7082  0231' 0085'              	movwf	___awmod@divisor+1
  7083  0232' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  7084  0237' 0804'              	movf	?___awmod,w
  7085  0238' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7086  023D' 3E50               	addlw	low (__powers_-__stringbase)
  7087  023E' 0084               	movwf	4
  7088  023F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7089  0244' 1283               	bcf	3,5	;RP0=0, select bank0
  7090  0245' 1303               	bcf	3,6	;RP1=0, select bank0
  7091  0246' 0090'              	movwf	___ftmul@f1
  7092  0247' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7093  024C' 0091'              	movwf	___ftmul@f1+1
  7094  024D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7095  0252' 0092'              	movwf	___ftmul@f1+2
  7096  0253' 3003               	movlw	3
  7097  0254' 00A4'              	movwf	??_scale+1
  7098  0255' 0824'              	movf	??_scale+1,w
  7099  0256' 008C'              	movwf	___bmul@multiplicand
  7100  0257' 300A               	movlw	10
  7101  0258' 0083'              	movwf	___awdiv@divisor
  7102  0259' 3000               	movlw	0
  7103  025A' 0084'              	movwf	___awdiv@divisor+1
  7104  025B' 0828'              	movf	scale@scl,w
  7105  025C' 0085'              	movwf	___awdiv@dividend
  7106  025D' 0186'              	clrf	___awdiv@dividend+1
  7107  025E' 1B85'              	btfsc	___awdiv@dividend,7
  7108  025F' 0386'              	decf	___awdiv@dividend+1,f
  7109  0260' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  7110  0265' 1283               	bcf	3,5	;RP0=0, select bank0
  7111  0266' 1303               	bcf	3,6	;RP1=0, select bank0
  7112  0267' 0803'              	movf	?___awdiv,w
  7113  0268' 3E09               	addlw	9
  7114  0269' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7115  026E' 3E50               	addlw	low (__powers_-__stringbase)
  7116  026F' 0084               	movwf	4
  7117  0270' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7118  0275' 1283               	bcf	3,5	;RP0=0, select bank0
  7119  0276' 1303               	bcf	3,6	;RP1=0, select bank0
  7120  0277' 0093'              	movwf	___ftmul@f2
  7121  0278' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7122  027D' 0094'              	movwf	___ftmul@f2+1
  7123  027E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7124  0283' 0095'              	movwf	___ftmul@f2+2
  7125  0284' 120A' 118A' 2000'  	fcall	___ftmul
  7126  0287' 1283               	bcf	3,5	;RP0=0, select bank0
  7127  0288' 1303               	bcf	3,6	;RP1=0, select bank0
  7128  0289' 0810'              	movf	?___ftmul,w
  7129  028A' 00A0'              	movwf	?_scale
  7130  028B' 0811'              	movf	?___ftmul+1,w
  7131  028C' 00A1'              	movwf	?_scale+1
  7132  028D' 0812'              	movf	?___ftmul+2,w
  7133  028E' 00A2'              	movwf	?_scale+2
  7134  028F' 0008               	return
  7135  0290'                    l4825:	
  7136                           
  7137                           ;doprnt.c: 440: return _powers_[scl];
  7138  0290' 3003               	movlw	3
  7139  0291' 00A3'              	movwf	??_scale
  7140  0292' 0823'              	movf	??_scale,w
  7141  0293' 008C'              	movwf	___bmul@multiplicand
  7142  0294' 0828'              	movf	scale@scl,w
  7143  0295' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7144  029A' 3E50               	addlw	low (__powers_-__stringbase)
  7145  029B' 0084               	movwf	4
  7146  029C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7147  02A1' 1283               	bcf	3,5	;RP0=0, select bank0
  7148  02A2' 1303               	bcf	3,6	;RP1=0, select bank0
  7149  02A3' 00A0'              	movwf	?_scale
  7150  02A4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7151  02A9' 00A1'              	movwf	?_scale+1
  7152  02AA' 120A' 118A' 2000'  	fcall	stringdir
  7153  02AD' 00A2'              	movwf	?_scale+2
  7154  02AE' 0008               	return
  7155  02AF'                    __end_of_scale:	
  7156                           
  7157                           	psect	text8
  7158  0000'                    __ptext8:	
  7159 ;; *************** function _isdigit *****************
  7160 ;; Defined at:
  7161 ;;		line 8 in file "/opt/microchip/xc8/v1.33/sources/common/isdigit.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;  c               1    wreg     unsigned char 
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;  c               1    5[COMMON] unsigned char 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;		None               void
  7168 ;; Registers used:
  7169 ;;		wreg, status,2, status,0
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7175 ;;      Params:         0       0       0       0       0
  7176 ;;      Locals:         2       0       0       0       0
  7177 ;;      Temps:          0       0       0       0       0
  7178 ;;      Totals:         2       0       0       0       0
  7179 ;;Total ram usage:        2 bytes
  7180 ;; Hardware stack levels used:    1
  7181 ;; Hardware stack levels required when called:    1
  7182 ;; This function calls:
  7183 ;;		Nothing
  7184 ;; This function is called by:
  7185 ;;		_sprintf
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           
  7190                           ;psect for function _isdigit
  7191  0000'                    _isdigit:	
  7192                           
  7193                           ;incstack = 0
  7194                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7195                           ;isdigit@c stored from wreg
  7196  0000' 0085'              	movwf	isdigit@c
  7197  0001' 0184'              	clrf	_isdigit$762
  7198  0002' 303A               	movlw	58
  7199  0003' 0205'              	subwf	isdigit@c,w
  7200  0004' 1803               	skipnc
  7201  0005' 2800'              	goto	l4837
  7202  0006' 3030               	movlw	48
  7203  0007' 0205'              	subwf	isdigit@c,w
  7204  0008' 1C03               	skipc
  7205  0009' 2800'              	goto	l4837
  7206  000A' 0184'              	clrf	_isdigit$762
  7207  000B' 0A84'              	incf	_isdigit$762,f
  7208  000C'                    l4837:	
  7209  000C' 0C04'              	rrf	_isdigit$762,w
  7210  000D' 0008               	return
  7211  000E'                    __end_of_isdigit:	
  7212                           
  7213                           	psect	text9
  7214  0000'                    __ptext9:	
  7215 ;; *************** function _fround *****************
  7216 ;; Defined at:
  7217 ;;		line 409 in file "/opt/microchip/xc8/v1.33/sources/common/doprnt.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;  prec            1    wreg     unsigned char 
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;  prec            1   47[BANK0 ] unsigned char 
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  3   32[BANK0 ] unsigned char 
  7224 ;; Registers used:
  7225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7231 ;;      Params:         0       3       0       0       0
  7232 ;;      Locals:         0       7       0       0       0
  7233 ;;      Temps:          0       6       0       0       0
  7234 ;;      Totals:         0      16       0       0       0
  7235 ;;Total ram usage:       16 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:    3
  7238 ;; This function calls:
  7239 ;;		___awdiv
  7240 ;;		___awmod
  7241 ;;		___bmul
  7242 ;;		___ftmul
  7243 ;; This function is called by:
  7244 ;;		_sprintf
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           
  7249                           ;psect for function _fround
  7250  0000'                    _fround:	
  7251                           
  7252                           ;incstack = 0
  7253                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7254                           ;fround@prec stored from wreg
  7255  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7256  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7257  0002' 00AF'              	movwf	fround@prec
  7258                           
  7259                           ;doprnt.c: 413: if(prec>=110)
  7260  0003' 306E               	movlw	110
  7261  0004' 022F'              	subwf	fround@prec,w
  7262  0005' 1C03               	skipc
  7263  0006' 2800'              	goto	l4777
  7264                           
  7265                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7266  0007' 3003               	movlw	3
  7267  0008' 00A3'              	movwf	??_fround
  7268  0009' 0823'              	movf	??_fround,w
  7269  000A' 008C'              	movwf	___bmul@multiplicand
  7270  000B' 300A               	movlw	10
  7271  000C' 0083'              	movwf	___awdiv@divisor
  7272  000D' 3000               	movlw	0
  7273  000E' 0084'              	movwf	___awdiv@divisor+1
  7274  000F' 082F'              	movf	fround@prec,w
  7275  0010' 00A4'              	movwf	??_fround+1
  7276  0011' 01A5'              	clrf	??_fround+2
  7277  0012' 0824'              	movf	??_fround+1,w
  7278  0013' 0086'              	movwf	___awmod@dividend
  7279  0014' 0825'              	movf	??_fround+2,w
  7280  0015' 0087'              	movwf	___awmod@dividend+1
  7281  0016' 3064               	movlw	100
  7282  0017' 0084'              	movwf	___awmod@divisor
  7283  0018' 3000               	movlw	0
  7284  0019' 0085'              	movwf	___awmod@divisor+1
  7285  001A' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  7286  001F' 0805'              	movf	?___awmod+1,w
  7287  0020' 1283               	bcf	3,5	;RP0=0, select bank0
  7288  0021' 1303               	bcf	3,6	;RP1=0, select bank0
  7289  0022' 0186'              	clrf	___awdiv@dividend+1
  7290  0023' 0786'              	addwf	___awdiv@dividend+1,f
  7291  0024' 0804'              	movf	?___awmod,w
  7292  0025' 0185'              	clrf	___awdiv@dividend
  7293  0026' 0785'              	addwf	___awdiv@dividend,f
  7294  0027' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  7295  002C' 1283               	bcf	3,5	;RP0=0, select bank0
  7296  002D' 1303               	bcf	3,6	;RP1=0, select bank0
  7297  002E' 0803'              	movf	?___awdiv,w
  7298  002F' 3E09               	addlw	9
  7299  0030' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7300  0035' 3E29               	addlw	low (__npowers_-__stringbase)
  7301  0036' 0084               	movwf	4
  7302  0037' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7303  003C' 1283               	bcf	3,5	;RP0=0, select bank0
  7304  003D' 1303               	bcf	3,6	;RP1=0, select bank0
  7305  003E' 0090'              	movwf	___ftmul@f1
  7306  003F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7307  0044' 0091'              	movwf	___ftmul@f1+1
  7308  0045' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7309  004A' 0092'              	movwf	___ftmul@f1+2
  7310  004B' 3003               	movlw	3
  7311  004C' 00A6'              	movwf	??_fround+3
  7312  004D' 0826'              	movf	??_fround+3,w
  7313  004E' 008C'              	movwf	___bmul@multiplicand
  7314  004F' 3064               	movlw	100
  7315  0050' 0083'              	movwf	___awdiv@divisor
  7316  0051' 3000               	movlw	0
  7317  0052' 0084'              	movwf	___awdiv@divisor+1
  7318  0053' 082F'              	movf	fround@prec,w
  7319  0054' 00A7'              	movwf	??_fround+4
  7320  0055' 01A8'              	clrf	??_fround+5
  7321  0056' 0827'              	movf	??_fround+4,w
  7322  0057' 0085'              	movwf	___awdiv@dividend
  7323  0058' 0828'              	movf	??_fround+5,w
  7324  0059' 0086'              	movwf	___awdiv@dividend+1
  7325  005A' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  7326  005F' 1283               	bcf	3,5	;RP0=0, select bank0
  7327  0060' 1303               	bcf	3,6	;RP1=0, select bank0
  7328  0061' 0803'              	movf	?___awdiv,w
  7329  0062' 3E12               	addlw	18
  7330  0063' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7331  0068' 3E29               	addlw	low (__npowers_-__stringbase)
  7332  0069' 0084               	movwf	4
  7333  006A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7334  006F' 1283               	bcf	3,5	;RP0=0, select bank0
  7335  0070' 1303               	bcf	3,6	;RP1=0, select bank0
  7336  0071' 0093'              	movwf	___ftmul@f2
  7337  0072' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7338  0077' 0094'              	movwf	___ftmul@f2+1
  7339  0078' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7340  007D' 0095'              	movwf	___ftmul@f2+2
  7341  007E' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  7342  0083' 1283               	bcf	3,5	;RP0=0, select bank0
  7343  0084' 1303               	bcf	3,6	;RP1=0, select bank0
  7344  0085' 0810'              	movf	?___ftmul,w
  7345  0086' 00AC'              	movwf	_fround$1015
  7346  0087' 0811'              	movf	?___ftmul+1,w
  7347  0088' 00AD'              	movwf	_fround$1015+1
  7348  0089' 0812'              	movf	?___ftmul+2,w
  7349  008A' 00AE'              	movwf	_fround$1015+2
  7350                           
  7351                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7352  008B' 3003               	movlw	3
  7353  008C' 00A3'              	movwf	??_fround
  7354  008D' 0823'              	movf	??_fround,w
  7355  008E' 008C'              	movwf	___bmul@multiplicand
  7356  008F' 082F'              	movf	fround@prec,w
  7357  0090' 00A4'              	movwf	??_fround+1
  7358  0091' 01A5'              	clrf	??_fround+2
  7359  0092' 0824'              	movf	??_fround+1,w
  7360  0093' 0086'              	movwf	___awmod@dividend
  7361  0094' 0825'              	movf	??_fround+2,w
  7362  0095' 0087'              	movwf	___awmod@dividend+1
  7363  0096' 300A               	movlw	10
  7364  0097' 0084'              	movwf	___awmod@divisor
  7365  0098' 3000               	movlw	0
  7366  0099' 0085'              	movwf	___awmod@divisor+1
  7367  009A' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  7368  009F' 0804'              	movf	?___awmod,w
  7369  00A0' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7370  00A5' 3E29               	addlw	low (__npowers_-__stringbase)
  7371  00A6' 0084               	movwf	4
  7372  00A7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7373  00AC' 1283               	bcf	3,5	;RP0=0, select bank0
  7374  00AD' 1303               	bcf	3,6	;RP1=0, select bank0
  7375  00AE' 0090'              	movwf	___ftmul@f1
  7376  00AF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7377  00B4' 0091'              	movwf	___ftmul@f1+1
  7378  00B5' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7379  00BA' 0092'              	movwf	___ftmul@f1+2
  7380  00BB' 082C'              	movf	_fround$1015,w
  7381  00BC' 0093'              	movwf	___ftmul@f2
  7382  00BD' 082D'              	movf	_fround$1015+1,w
  7383  00BE' 0094'              	movwf	___ftmul@f2+1
  7384  00BF' 082E'              	movf	_fround$1015+2,w
  7385  00C0' 0095'              	movwf	___ftmul@f2+2
  7386  00C1' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  7387  00C6' 1283               	bcf	3,5	;RP0=0, select bank0
  7388  00C7' 1303               	bcf	3,6	;RP1=0, select bank0
  7389  00C8' 0810'              	movf	?___ftmul,w
  7390  00C9' 00A9'              	movwf	_fround$1016
  7391  00CA' 0811'              	movf	?___ftmul+1,w
  7392  00CB' 00AA'              	movwf	_fround$1016+1
  7393  00CC' 0812'              	movf	?___ftmul+2,w
  7394  00CD' 00AB'              	movwf	_fround$1016+2
  7395                           
  7396                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7397  00CE' 3000               	movlw	0
  7398  00CF' 0090'              	movwf	___ftmul@f1
  7399  00D0' 3000               	movlw	0
  7400  00D1' 0091'              	movwf	___ftmul@f1+1
  7401  00D2' 303F               	movlw	63
  7402  00D3' 0092'              	movwf	___ftmul@f1+2
  7403  00D4' 0829'              	movf	_fround$1016,w
  7404  00D5' 0093'              	movwf	___ftmul@f2
  7405  00D6' 082A'              	movf	_fround$1016+1,w
  7406  00D7' 0094'              	movwf	___ftmul@f2+1
  7407  00D8' 082B'              	movf	_fround$1016+2,w
  7408  00D9' 0095'              	movwf	___ftmul@f2+2
  7409  00DA' 120A' 118A' 2000'  	fcall	___ftmul
  7410  00DD' 1283               	bcf	3,5	;RP0=0, select bank0
  7411  00DE' 1303               	bcf	3,6	;RP1=0, select bank0
  7412  00DF' 0810'              	movf	?___ftmul,w
  7413  00E0' 00A0'              	movwf	?_fround
  7414  00E1' 0811'              	movf	?___ftmul+1,w
  7415  00E2' 00A1'              	movwf	?_fround+1
  7416  00E3' 0812'              	movf	?___ftmul+2,w
  7417  00E4' 00A2'              	movwf	?_fround+2
  7418  00E5' 0008               	return
  7419  00E6'                    l4777:	
  7420                           
  7421                           ;doprnt.c: 415: else if(prec > 10)
  7422  00E6' 300B               	movlw	11
  7423  00E7' 022F'              	subwf	fround@prec,w
  7424  00E8' 1C03               	skipc
  7425  00E9' 2800'              	goto	l4785
  7426                           
  7427                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7428  00EA' 3003               	movlw	3
  7429  00EB' 00A3'              	movwf	??_fround
  7430  00EC' 0823'              	movf	??_fround,w
  7431  00ED' 008C'              	movwf	___bmul@multiplicand
  7432  00EE' 082F'              	movf	fround@prec,w
  7433  00EF' 00A4'              	movwf	??_fround+1
  7434  00F0' 01A5'              	clrf	??_fround+2
  7435  00F1' 0824'              	movf	??_fround+1,w
  7436  00F2' 0086'              	movwf	___awmod@dividend
  7437  00F3' 0825'              	movf	??_fround+2,w
  7438  00F4' 0087'              	movwf	___awmod@dividend+1
  7439  00F5' 300A               	movlw	10
  7440  00F6' 0084'              	movwf	___awmod@divisor
  7441  00F7' 3000               	movlw	0
  7442  00F8' 0085'              	movwf	___awmod@divisor+1
  7443  00F9' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  7444  00FE' 0804'              	movf	?___awmod,w
  7445  00FF' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7446  0104' 3E29               	addlw	low (__npowers_-__stringbase)
  7447  0105' 0084               	movwf	4
  7448  0106' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7449  010B' 1283               	bcf	3,5	;RP0=0, select bank0
  7450  010C' 1303               	bcf	3,6	;RP1=0, select bank0
  7451  010D' 0090'              	movwf	___ftmul@f1
  7452  010E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7453  0113' 0091'              	movwf	___ftmul@f1+1
  7454  0114' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7455  0119' 0092'              	movwf	___ftmul@f1+2
  7456  011A' 3003               	movlw	3
  7457  011B' 00A6'              	movwf	??_fround+3
  7458  011C' 0826'              	movf	??_fround+3,w
  7459  011D' 008C'              	movwf	___bmul@multiplicand
  7460  011E' 300A               	movlw	10
  7461  011F' 0083'              	movwf	___awdiv@divisor
  7462  0120' 3000               	movlw	0
  7463  0121' 0084'              	movwf	___awdiv@divisor+1
  7464  0122' 082F'              	movf	fround@prec,w
  7465  0123' 00A7'              	movwf	??_fround+4
  7466  0124' 01A8'              	clrf	??_fround+5
  7467  0125' 0827'              	movf	??_fround+4,w
  7468  0126' 0085'              	movwf	___awdiv@dividend
  7469  0127' 0828'              	movf	??_fround+5,w
  7470  0128' 0086'              	movwf	___awdiv@dividend+1
  7471  0129' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  7472  012E' 1283               	bcf	3,5	;RP0=0, select bank0
  7473  012F' 1303               	bcf	3,6	;RP1=0, select bank0
  7474  0130' 0803'              	movf	?___awdiv,w
  7475  0131' 3E09               	addlw	9
  7476  0132' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7477  0137' 3E29               	addlw	low (__npowers_-__stringbase)
  7478  0138' 0084               	movwf	4
  7479  0139' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7480  013E' 1283               	bcf	3,5	;RP0=0, select bank0
  7481  013F' 1303               	bcf	3,6	;RP1=0, select bank0
  7482  0140' 0093'              	movwf	___ftmul@f2
  7483  0141' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7484  0146' 0094'              	movwf	___ftmul@f2+1
  7485  0147' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7486  014C' 0095'              	movwf	___ftmul@f2+2
  7487  014D' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  7488  0152' 1283               	bcf	3,5	;RP0=0, select bank0
  7489  0153' 1303               	bcf	3,6	;RP1=0, select bank0
  7490  0154' 0810'              	movf	?___ftmul,w
  7491  0155' 00AC'              	movwf	_fround$1015
  7492  0156' 0811'              	movf	?___ftmul+1,w
  7493  0157' 00AD'              	movwf	_fround$1015+1
  7494  0158' 0812'              	movf	?___ftmul+2,w
  7495  0159' 00AE'              	movwf	_fround$1015+2
  7496                           
  7497                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7498  015A' 3000               	movlw	0
  7499  015B' 0090'              	movwf	___ftmul@f1
  7500  015C' 3000               	movlw	0
  7501  015D' 0091'              	movwf	___ftmul@f1+1
  7502  015E' 303F               	movlw	63
  7503  015F' 0092'              	movwf	___ftmul@f1+2
  7504  0160' 082C'              	movf	_fround$1015,w
  7505  0161' 0093'              	movwf	___ftmul@f2
  7506  0162' 082D'              	movf	_fround$1015+1,w
  7507  0163' 0094'              	movwf	___ftmul@f2+1
  7508  0164' 082E'              	movf	_fround$1015+2,w
  7509  0165' 0095'              	movwf	___ftmul@f2+2
  7510  0166' 120A' 118A' 2000'  	fcall	___ftmul
  7511  0169' 1283               	bcf	3,5	;RP0=0, select bank0
  7512  016A' 1303               	bcf	3,6	;RP1=0, select bank0
  7513  016B' 0810'              	movf	?___ftmul,w
  7514  016C' 00A0'              	movwf	?_fround
  7515  016D' 0811'              	movf	?___ftmul+1,w
  7516  016E' 00A1'              	movwf	?_fround+1
  7517  016F' 0812'              	movf	?___ftmul+2,w
  7518  0170' 00A2'              	movwf	?_fround+2
  7519  0171' 0008               	return
  7520  0172'                    l4785:	
  7521                           
  7522                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  7523  0172' 3000               	movlw	0
  7524  0173' 0090'              	movwf	___ftmul@f1
  7525  0174' 3000               	movlw	0
  7526  0175' 0091'              	movwf	___ftmul@f1+1
  7527  0176' 303F               	movlw	63
  7528  0177' 0092'              	movwf	___ftmul@f1+2
  7529  0178' 3003               	movlw	3
  7530  0179' 00A3'              	movwf	??_fround
  7531  017A' 0823'              	movf	??_fround,w
  7532  017B' 008C'              	movwf	___bmul@multiplicand
  7533  017C' 082F'              	movf	fround@prec,w
  7534  017D' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
  7535  0182' 3E29               	addlw	low (__npowers_-__stringbase)
  7536  0183' 0084               	movwf	4
  7537  0184' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7538  0189' 1283               	bcf	3,5	;RP0=0, select bank0
  7539  018A' 1303               	bcf	3,6	;RP1=0, select bank0
  7540  018B' 0093'              	movwf	___ftmul@f2
  7541  018C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7542  0191' 0094'              	movwf	___ftmul@f2+1
  7543  0192' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  7544  0197' 0095'              	movwf	___ftmul@f2+2
  7545  0198' 120A' 118A' 2000'  	fcall	___ftmul
  7546  019B' 1283               	bcf	3,5	;RP0=0, select bank0
  7547  019C' 1303               	bcf	3,6	;RP1=0, select bank0
  7548  019D' 0810'              	movf	?___ftmul,w
  7549  019E' 00A0'              	movwf	?_fround
  7550  019F' 0811'              	movf	?___ftmul+1,w
  7551  01A0' 00A1'              	movwf	?_fround+1
  7552  01A1' 0812'              	movf	?___ftmul+2,w
  7553  01A2' 00A2'              	movwf	?_fround+2
  7554  01A3' 0008               	return
  7555  01A4'                    __end_of_fround:	
  7556                           
  7557                           	psect	text10
  7558  0000'                    __ptext10:	
  7559 ;; *************** function __tdiv_to_l_ *****************
  7560 ;; Defined at:
  7561 ;;		line 60 in file "/opt/microchip/xc8/v1.33/sources/common/ftdivl.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  f1              3    0[BANK0 ] float 
  7564 ;;  f2              3    3[BANK0 ] float 
  7565 ;; Auto vars:     Size  Location     Type
  7566 ;;  quot            4    6[BANK0 ] unsigned long 
  7567 ;;  exp1            1   11[BANK0 ] unsigned char 
  7568 ;;  cntr            1   10[BANK0 ] unsigned char 
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  4    0[BANK0 ] unsigned long 
  7571 ;; Registers used:
  7572 ;;		wreg, status,2, status,0
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7578 ;;      Params:         0       6       0       0       0
  7579 ;;      Locals:         0       6       0       0       0
  7580 ;;      Temps:          4       0       0       0       0
  7581 ;;      Totals:         4      12       0       0       0
  7582 ;;Total ram usage:       16 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; Hardware stack levels required when called:    1
  7585 ;; This function calls:
  7586 ;;		Nothing
  7587 ;; This function is called by:
  7588 ;;		_sprintf
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592                           
  7593                           ;psect for function __tdiv_to_l_
  7594  0000'                    __tdiv_to_l_:	
  7595                           
  7596                           ;incstack = 0
  7597                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7598  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7599  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7600  0002' 0800'              	movf	__tdiv_to_l_@f1,w
  7601  0003' 0084'              	movwf	??__tdiv_to_l_
  7602  0004' 0801'              	movf	__tdiv_to_l_@f1+1,w
  7603  0005' 0085'              	movwf	??__tdiv_to_l_+1
  7604  0006' 0802'              	movf	__tdiv_to_l_@f1+2,w
  7605  0007' 0086'              	movwf	??__tdiv_to_l_+2
  7606  0008' 1003               	clrc
  7607  0009' 0D05'              	rlf	??__tdiv_to_l_+1,w
  7608  000A' 0D06'              	rlf	??__tdiv_to_l_+2,w
  7609  000B' 0087'              	movwf	??__tdiv_to_l_+3
  7610  000C' 0807'              	movf	??__tdiv_to_l_+3,w
  7611  000D' 008B'              	movwf	__tdiv_to_l_@exp1
  7612  000E' 088B'              	movf	__tdiv_to_l_@exp1,f
  7613  000F' 1D03               	skipz
  7614  0010' 2800'              	goto	l4847
  7615  0011' 3000               	movlw	0
  7616  0012' 0083'              	movwf	?__tdiv_to_l_+3
  7617  0013' 3000               	movlw	0
  7618  0014' 0082'              	movwf	?__tdiv_to_l_+2
  7619  0015' 3000               	movlw	0
  7620  0016' 0081'              	movwf	?__tdiv_to_l_+1
  7621  0017' 3000               	movlw	0
  7622  0018' 0080'              	movwf	?__tdiv_to_l_
  7623  0019' 0008               	return
  7624  001A'                    l4847:	
  7625  001A' 0803'              	movf	__tdiv_to_l_@f2,w
  7626  001B' 0084'              	movwf	??__tdiv_to_l_
  7627  001C' 0804'              	movf	__tdiv_to_l_@f2+1,w
  7628  001D' 0085'              	movwf	??__tdiv_to_l_+1
  7629  001E' 0805'              	movf	__tdiv_to_l_@f2+2,w
  7630  001F' 0086'              	movwf	??__tdiv_to_l_+2
  7631  0020' 1003               	clrc
  7632  0021' 0D05'              	rlf	??__tdiv_to_l_+1,w
  7633  0022' 0D06'              	rlf	??__tdiv_to_l_+2,w
  7634  0023' 0087'              	movwf	??__tdiv_to_l_+3
  7635  0024' 0807'              	movf	??__tdiv_to_l_+3,w
  7636  0025' 008A'              	movwf	__tdiv_to_l_@cntr
  7637  0026' 088A'              	movf	__tdiv_to_l_@cntr,f
  7638  0027' 1D03               	skipz
  7639  0028' 2800'              	goto	l685
  7640  0029' 3000               	movlw	0
  7641  002A' 0083'              	movwf	?__tdiv_to_l_+3
  7642  002B' 3000               	movlw	0
  7643  002C' 0082'              	movwf	?__tdiv_to_l_+2
  7644  002D' 3000               	movlw	0
  7645  002E' 0081'              	movwf	?__tdiv_to_l_+1
  7646  002F' 3000               	movlw	0
  7647  0030' 0080'              	movwf	?__tdiv_to_l_
  7648  0031' 0008               	return
  7649  0032'                    l685:	
  7650  0032' 1781'              	bsf	__tdiv_to_l_@f1+1,7
  7651  0033' 30FF               	movlw	255
  7652  0034' 0580'              	andwf	__tdiv_to_l_@f1,f
  7653  0035' 30FF               	movlw	255
  7654  0036' 0581'              	andwf	__tdiv_to_l_@f1+1,f
  7655  0037' 3000               	movlw	0
  7656  0038' 0582'              	andwf	__tdiv_to_l_@f1+2,f
  7657  0039' 1784'              	bsf	__tdiv_to_l_@f2+1,7
  7658  003A' 30FF               	movlw	255
  7659  003B' 0583'              	andwf	__tdiv_to_l_@f2,f
  7660  003C' 30FF               	movlw	255
  7661  003D' 0584'              	andwf	__tdiv_to_l_@f2+1,f
  7662  003E' 3000               	movlw	0
  7663  003F' 0585'              	andwf	__tdiv_to_l_@f2+2,f
  7664  0040' 3000               	movlw	0
  7665  0041' 0089'              	movwf	__tdiv_to_l_@quot+3
  7666  0042' 3000               	movlw	0
  7667  0043' 0088'              	movwf	__tdiv_to_l_@quot+2
  7668  0044' 3000               	movlw	0
  7669  0045' 0087'              	movwf	__tdiv_to_l_@quot+1
  7670  0046' 3000               	movlw	0
  7671  0047' 0086'              	movwf	__tdiv_to_l_@quot
  7672  0048' 307F               	movlw	127
  7673  0049' 028B'              	subwf	__tdiv_to_l_@exp1,f
  7674  004A' 3098               	movlw	152
  7675  004B' 070A'              	addwf	__tdiv_to_l_@cntr,w
  7676  004C' 0084'              	movwf	??__tdiv_to_l_
  7677  004D' 0804'              	movf	??__tdiv_to_l_,w
  7678  004E' 028B'              	subwf	__tdiv_to_l_@exp1,f
  7679  004F' 3018               	movlw	24
  7680  0050' 0084'              	movwf	??__tdiv_to_l_
  7681  0051' 0804'              	movf	??__tdiv_to_l_,w
  7682  0052' 008A'              	movwf	__tdiv_to_l_@cntr
  7683  0053'                    l4861:	
  7684  0053' 3001               	movlw	1
  7685  0054' 0084'              	movwf	??__tdiv_to_l_
  7686  0055'                    u6565:	
  7687  0055' 1003               	clrc
  7688  0056' 0D86'              	rlf	__tdiv_to_l_@quot,f
  7689  0057' 0D87'              	rlf	__tdiv_to_l_@quot+1,f
  7690  0058' 0D88'              	rlf	__tdiv_to_l_@quot+2,f
  7691  0059' 0D89'              	rlf	__tdiv_to_l_@quot+3,f
  7692  005A' 0B84'              	decfsz	??__tdiv_to_l_,f
  7693  005B' 2800'              	goto	u6565
  7694  005C' 0805'              	movf	__tdiv_to_l_@f2+2,w
  7695  005D' 0202'              	subwf	__tdiv_to_l_@f1+2,w
  7696  005E' 1D03               	skipz
  7697  005F' 2800'              	goto	u6575
  7698  0060' 0804'              	movf	__tdiv_to_l_@f2+1,w
  7699  0061' 0201'              	subwf	__tdiv_to_l_@f1+1,w
  7700  0062' 1D03               	skipz
  7701  0063' 2800'              	goto	u6575
  7702  0064' 0803'              	movf	__tdiv_to_l_@f2,w
  7703  0065' 0200'              	subwf	__tdiv_to_l_@f1,w
  7704  0066'                    u6575:	
  7705  0066' 1C03               	skipc
  7706  0067' 2800'              	goto	l4869
  7707  0068' 0803'              	movf	__tdiv_to_l_@f2,w
  7708  0069' 0280'              	subwf	__tdiv_to_l_@f1,f
  7709  006A' 0804'              	movf	__tdiv_to_l_@f2+1,w
  7710  006B' 1C03               	skipc
  7711  006C' 0F04'              	incfsz	__tdiv_to_l_@f2+1,w
  7712  006D' 0281'              	subwf	__tdiv_to_l_@f1+1,f
  7713  006E' 0805'              	movf	__tdiv_to_l_@f2+2,w
  7714  006F' 1C03               	skipc
  7715  0070' 0A05'              	incf	__tdiv_to_l_@f2+2,w
  7716  0071' 0282'              	subwf	__tdiv_to_l_@f1+2,f
  7717  0072' 1406'              	bsf	__tdiv_to_l_@quot,0
  7718  0073'                    l4869:	
  7719  0073' 3001               	movlw	1
  7720  0074'                    u6585:	
  7721  0074' 1003               	clrc
  7722  0075' 0D80'              	rlf	__tdiv_to_l_@f1,f
  7723  0076' 0D81'              	rlf	__tdiv_to_l_@f1+1,f
  7724  0077' 0D82'              	rlf	__tdiv_to_l_@f1+2,f
  7725  0078' 3EFF               	addlw	-1
  7726  0079' 1D03               	skipz
  7727  007A' 2800'              	goto	u6585
  7728  007B' 3001               	movlw	1
  7729  007C' 028A'              	subwf	__tdiv_to_l_@cntr,f
  7730  007D' 1D03               	btfss	3,2
  7731  007E' 2800'              	goto	l4861
  7732  007F' 1F8B'              	btfss	__tdiv_to_l_@exp1,7
  7733  0080' 2800'              	goto	l4881
  7734  0081' 080B'              	movf	__tdiv_to_l_@exp1,w
  7735  0082' 3A80               	xorlw	128
  7736  0083' 3E97               	addlw	151
  7737  0084' 1803               	skipnc
  7738  0085' 2800'              	goto	l4879
  7739  0086' 3000               	movlw	0
  7740  0087' 0083'              	movwf	?__tdiv_to_l_+3
  7741  0088' 3000               	movlw	0
  7742  0089' 0082'              	movwf	?__tdiv_to_l_+2
  7743  008A' 3000               	movlw	0
  7744  008B' 0081'              	movwf	?__tdiv_to_l_+1
  7745  008C' 3000               	movlw	0
  7746  008D' 0080'              	movwf	?__tdiv_to_l_
  7747  008E' 0008               	return
  7748  008F'                    l4879:	
  7749  008F' 3001               	movlw	1
  7750  0090'                    u6625:	
  7751  0090' 1003               	clrc
  7752  0091' 0C89'              	rrf	__tdiv_to_l_@quot+3,f
  7753  0092' 0C88'              	rrf	__tdiv_to_l_@quot+2,f
  7754  0093' 0C87'              	rrf	__tdiv_to_l_@quot+1,f
  7755  0094' 0C86'              	rrf	__tdiv_to_l_@quot,f
  7756  0095' 3EFF               	addlw	-1
  7757  0096' 1D03               	skipz
  7758  0097' 2800'              	goto	u6625
  7759  0098' 3001               	movlw	1
  7760  0099' 0084'              	movwf	??__tdiv_to_l_
  7761  009A' 0804'              	movf	??__tdiv_to_l_,w
  7762  009B' 078B'              	addwf	__tdiv_to_l_@exp1,f
  7763  009C' 1903               	btfsc	3,2
  7764  009D' 2800'              	goto	l4891
  7765  009E' 2800'              	goto	l4879
  7766  009F'                    l4881:	
  7767  009F' 3018               	movlw	24
  7768  00A0' 020B'              	subwf	__tdiv_to_l_@exp1,w
  7769  00A1' 1C03               	skipc
  7770  00A2' 2800'              	goto	l4889
  7771  00A3' 3000               	movlw	0
  7772  00A4' 0083'              	movwf	?__tdiv_to_l_+3
  7773  00A5' 3000               	movlw	0
  7774  00A6' 0082'              	movwf	?__tdiv_to_l_+2
  7775  00A7' 3000               	movlw	0
  7776  00A8' 0081'              	movwf	?__tdiv_to_l_+1
  7777  00A9' 3000               	movlw	0
  7778  00AA' 0080'              	movwf	?__tdiv_to_l_
  7779  00AB' 0008               	return
  7780  00AC'                    l4887:	
  7781  00AC' 3001               	movlw	1
  7782  00AD' 0084'              	movwf	??__tdiv_to_l_
  7783  00AE'                    u6655:	
  7784  00AE' 1003               	clrc
  7785  00AF' 0D86'              	rlf	__tdiv_to_l_@quot,f
  7786  00B0' 0D87'              	rlf	__tdiv_to_l_@quot+1,f
  7787  00B1' 0D88'              	rlf	__tdiv_to_l_@quot+2,f
  7788  00B2' 0D89'              	rlf	__tdiv_to_l_@quot+3,f
  7789  00B3' 0B84'              	decfsz	??__tdiv_to_l_,f
  7790  00B4' 2800'              	goto	u6655
  7791  00B5' 3001               	movlw	1
  7792  00B6' 028B'              	subwf	__tdiv_to_l_@exp1,f
  7793  00B7'                    l4889:	
  7794  00B7' 088B'              	movf	__tdiv_to_l_@exp1,f
  7795  00B8' 1D03               	skipz
  7796  00B9' 2800'              	goto	l4887
  7797  00BA'                    l4891:	
  7798  00BA' 0809'              	movf	__tdiv_to_l_@quot+3,w
  7799  00BB' 0083'              	movwf	?__tdiv_to_l_+3
  7800  00BC' 0808'              	movf	__tdiv_to_l_@quot+2,w
  7801  00BD' 0082'              	movwf	?__tdiv_to_l_+2
  7802  00BE' 0807'              	movf	__tdiv_to_l_@quot+1,w
  7803  00BF' 0081'              	movwf	?__tdiv_to_l_+1
  7804  00C0' 0806'              	movf	__tdiv_to_l_@quot,w
  7805  00C1' 0080'              	movwf	?__tdiv_to_l_
  7806  00C2' 0008               	return
  7807  00C3'                    __end_of__tdiv_to_l_:	
  7808                           
  7809                           	psect	text11
  7810  0000'                    __ptext11:	
  7811 ;; *************** function __div_to_l_ *****************
  7812 ;; Defined at:
  7813 ;;		line 60 in file "/opt/microchip/xc8/v1.33/sources/common/fldivl.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;  f1              3    0[BANK0 ] unsigned long 
  7816 ;;  f2              3    3[BANK0 ] unsigned long 
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;  quot            4   14[BANK0 ] unsigned long 
  7819 ;;  exp1            1   19[BANK0 ] unsigned char 
  7820 ;;  cntr            1   18[BANK0 ] unsigned char 
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  4    0[BANK0 ] unsigned long 
  7823 ;; Registers used:
  7824 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7830 ;;      Params:         0       6       0       0       0
  7831 ;;      Locals:         0       6       0       0       0
  7832 ;;      Temps:          0       8       0       0       0
  7833 ;;      Totals:         0      20       0       0       0
  7834 ;;Total ram usage:       20 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:    1
  7837 ;; This function calls:
  7838 ;;		Nothing
  7839 ;; This function is called by:
  7840 ;;		_sprintf
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843                           
  7844                           
  7845                           ;psect for function __div_to_l_
  7846  0000'                    __div_to_l_:	
  7847                           
  7848                           ;incstack = 0
  7849                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  7850  0000' 3000'              	movlw	low __div_to_l_@f1
  7851  0001' 0084               	movwf	4
  7852  0002' 1383               	bcf	3,7	;select IRP bank0
  7853  0003' 0800               	movf	0,w
  7854  0004' 1283               	bcf	3,5	;RP0=0, select bank0
  7855  0005' 1303               	bcf	3,6	;RP1=0, select bank0
  7856  0006' 0086'              	movwf	??__div_to_l_
  7857  0007' 0A84               	incf	4,f
  7858  0008' 0800               	movf	0,w
  7859  0009' 0087'              	movwf	??__div_to_l_+1
  7860  000A' 0A84               	incf	4,f
  7861  000B' 0800               	movf	0,w
  7862  000C' 0088'              	movwf	??__div_to_l_+2
  7863  000D' 0A84               	incf	4,f
  7864  000E' 0800               	movf	0,w
  7865  000F' 0089'              	movwf	??__div_to_l_+3
  7866  0010' 1003               	clrc
  7867  0011' 0D08'              	rlf	??__div_to_l_+2,w
  7868  0012' 0D09'              	rlf	??__div_to_l_+3,w
  7869  0013' 008A'              	movwf	??__div_to_l_+4
  7870  0014' 080A'              	movf	??__div_to_l_+4,w
  7871  0015' 0093'              	movwf	__div_to_l_@exp1
  7872  0016' 0893'              	movf	__div_to_l_@exp1,f
  7873  0017' 1D03               	skipz
  7874  0018' 2800'              	goto	l4901
  7875  0019' 3000               	movlw	0
  7876  001A' 0083'              	movwf	?__div_to_l_+3
  7877  001B' 3000               	movlw	0
  7878  001C' 0082'              	movwf	?__div_to_l_+2
  7879  001D' 3000               	movlw	0
  7880  001E' 0081'              	movwf	?__div_to_l_+1
  7881  001F' 3000               	movlw	0
  7882  0020' 0080'              	movwf	?__div_to_l_
  7883  0021' 0008               	return
  7884  0022'                    l4901:	
  7885  0022' 3000'              	movlw	low __div_to_l_@f2
  7886  0023' 0084               	movwf	4
  7887  0024' 0800               	movf	0,w
  7888  0025' 0086'              	movwf	??__div_to_l_
  7889  0026' 0A84               	incf	4,f
  7890  0027' 0800               	movf	0,w
  7891  0028' 0087'              	movwf	??__div_to_l_+1
  7892  0029' 0A84               	incf	4,f
  7893  002A' 0800               	movf	0,w
  7894  002B' 0088'              	movwf	??__div_to_l_+2
  7895  002C' 0A84               	incf	4,f
  7896  002D' 0800               	movf	0,w
  7897  002E' 0089'              	movwf	??__div_to_l_+3
  7898  002F' 1003               	clrc
  7899  0030' 0D08'              	rlf	??__div_to_l_+2,w
  7900  0031' 0D09'              	rlf	??__div_to_l_+3,w
  7901  0032' 008A'              	movwf	??__div_to_l_+4
  7902  0033' 080A'              	movf	??__div_to_l_+4,w
  7903  0034' 0092'              	movwf	__div_to_l_@cntr
  7904  0035' 0892'              	movf	__div_to_l_@cntr,f
  7905  0036' 1D03               	skipz
  7906  0037' 2800'              	goto	l4907
  7907  0038' 3000               	movlw	0
  7908  0039' 0083'              	movwf	?__div_to_l_+3
  7909  003A' 3000               	movlw	0
  7910  003B' 0082'              	movwf	?__div_to_l_+2
  7911  003C' 3000               	movlw	0
  7912  003D' 0081'              	movwf	?__div_to_l_+1
  7913  003E' 3000               	movlw	0
  7914  003F' 0080'              	movwf	?__div_to_l_
  7915  0040' 0008               	return
  7916  0041'                    l4907:	
  7917  0041' 3000'              	movlw	low __div_to_l_@f1
  7918  0042' 0084               	movwf	4
  7919  0043' 3000               	movlw	0
  7920  0044' 0480               	iorwf	0,f
  7921  0045' 0A84               	incf	4,f
  7922  0046' 3000               	movlw	0
  7923  0047' 0480               	iorwf	0,f
  7924  0048' 0A84               	incf	4,f
  7925  0049' 3080               	movlw	128
  7926  004A' 0480               	iorwf	0,f
  7927  004B' 0A84               	incf	4,f
  7928  004C' 3000               	movlw	0
  7929  004D' 0480               	iorwf	0,f
  7930  004E' 3000'              	movlw	low __div_to_l_@f1
  7931  004F' 0084               	movwf	4
  7932  0050' 30FF               	movlw	255
  7933  0051' 0580               	andwf	0,f
  7934  0052' 0A84               	incf	4,f
  7935  0053' 30FF               	movlw	255
  7936  0054' 0580               	andwf	0,f
  7937  0055' 0A84               	incf	4,f
  7938  0056' 30FF               	movlw	255
  7939  0057' 0580               	andwf	0,f
  7940  0058' 0A84               	incf	4,f
  7941  0059' 3000               	movlw	0
  7942  005A' 0580               	andwf	0,f
  7943  005B' 3000'              	movlw	low __div_to_l_@f2
  7944  005C' 0084               	movwf	4
  7945  005D' 3000               	movlw	0
  7946  005E' 0480               	iorwf	0,f
  7947  005F' 0A84               	incf	4,f
  7948  0060' 3000               	movlw	0
  7949  0061' 0480               	iorwf	0,f
  7950  0062' 0A84               	incf	4,f
  7951  0063' 3080               	movlw	128
  7952  0064' 0480               	iorwf	0,f
  7953  0065' 0A84               	incf	4,f
  7954  0066' 3000               	movlw	0
  7955  0067' 0480               	iorwf	0,f
  7956  0068' 3000'              	movlw	low __div_to_l_@f2
  7957  0069' 0084               	movwf	4
  7958  006A' 30FF               	movlw	255
  7959  006B' 0580               	andwf	0,f
  7960  006C' 0A84               	incf	4,f
  7961  006D' 30FF               	movlw	255
  7962  006E' 0580               	andwf	0,f
  7963  006F' 0A84               	incf	4,f
  7964  0070' 30FF               	movlw	255
  7965  0071' 0580               	andwf	0,f
  7966  0072' 0A84               	incf	4,f
  7967  0073' 3000               	movlw	0
  7968  0074' 0580               	andwf	0,f
  7969  0075' 3000               	movlw	0
  7970  0076' 0091'              	movwf	__div_to_l_@quot+3
  7971  0077' 3000               	movlw	0
  7972  0078' 0090'              	movwf	__div_to_l_@quot+2
  7973  0079' 3000               	movlw	0
  7974  007A' 008F'              	movwf	__div_to_l_@quot+1
  7975  007B' 3000               	movlw	0
  7976  007C' 008E'              	movwf	__div_to_l_@quot
  7977  007D' 307F               	movlw	127
  7978  007E' 0293'              	subwf	__div_to_l_@exp1,f
  7979  007F' 30A0               	movlw	160
  7980  0080' 0712'              	addwf	__div_to_l_@cntr,w
  7981  0081' 0086'              	movwf	??__div_to_l_
  7982  0082' 0806'              	movf	??__div_to_l_,w
  7983  0083' 0293'              	subwf	__div_to_l_@exp1,f
  7984  0084' 3020               	movlw	32
  7985  0085' 0086'              	movwf	??__div_to_l_
  7986  0086' 0806'              	movf	??__div_to_l_,w
  7987  0087' 0092'              	movwf	__div_to_l_@cntr
  7988  0088'                    l4917:	
  7989  0088' 3001               	movlw	1
  7990  0089' 0086'              	movwf	??__div_to_l_
  7991  008A'                    u6695:	
  7992  008A' 1003               	clrc
  7993  008B' 0D8E'              	rlf	__div_to_l_@quot,f
  7994  008C' 0D8F'              	rlf	__div_to_l_@quot+1,f
  7995  008D' 0D90'              	rlf	__div_to_l_@quot+2,f
  7996  008E' 0D91'              	rlf	__div_to_l_@quot+3,f
  7997  008F' 0B86'              	decfsz	??__div_to_l_,f
  7998  0090' 2800'              	goto	u6695
  7999  0091' 3000'              	movlw	low __div_to_l_@f2
  8000  0092' 0084               	movwf	4
  8001  0093' 0800               	movf	0,w
  8002  0094' 0086'              	movwf	??__div_to_l_
  8003  0095' 0A84               	incf	4,f
  8004  0096' 0800               	movf	0,w
  8005  0097' 0087'              	movwf	??__div_to_l_+1
  8006  0098' 0A84               	incf	4,f
  8007  0099' 0800               	movf	0,w
  8008  009A' 0088'              	movwf	??__div_to_l_+2
  8009  009B' 0A84               	incf	4,f
  8010  009C' 0800               	movf	0,w
  8011  009D' 0089'              	movwf	??__div_to_l_+3
  8012  009E' 3000'              	movlw	low __div_to_l_@f1
  8013  009F' 0084               	movwf	4
  8014  00A0' 0800               	movf	0,w
  8015  00A1' 008A'              	movwf	??__div_to_l_+4
  8016  00A2' 0A84               	incf	4,f
  8017  00A3' 0800               	movf	0,w
  8018  00A4' 008B'              	movwf	??__div_to_l_+5
  8019  00A5' 0A84               	incf	4,f
  8020  00A6' 0800               	movf	0,w
  8021  00A7' 008C'              	movwf	??__div_to_l_+6
  8022  00A8' 0A84               	incf	4,f
  8023  00A9' 0800               	movf	0,w
  8024  00AA' 008D'              	movwf	??__div_to_l_+7
  8025  00AB' 0809'              	movf	??__div_to_l_+3,w
  8026  00AC' 020D'              	subwf	??__div_to_l_+7,w
  8027  00AD' 1D03               	skipz
  8028  00AE' 2800'              	goto	u6705
  8029  00AF' 0808'              	movf	??__div_to_l_+2,w
  8030  00B0' 020C'              	subwf	??__div_to_l_+6,w
  8031  00B1' 1D03               	skipz
  8032  00B2' 2800'              	goto	u6705
  8033  00B3' 0807'              	movf	??__div_to_l_+1,w
  8034  00B4' 020B'              	subwf	??__div_to_l_+5,w
  8035  00B5' 1D03               	skipz
  8036  00B6' 2800'              	goto	u6705
  8037  00B7' 0806'              	movf	??__div_to_l_,w
  8038  00B8' 020A'              	subwf	??__div_to_l_+4,w
  8039  00B9'                    u6705:	
  8040  00B9' 1C03               	skipc
  8041  00BA' 2800'              	goto	l577
  8042  00BB' 3000'              	movlw	low __div_to_l_@f2
  8043  00BC' 0084               	movwf	4
  8044  00BD' 0800               	movf	0,w
  8045  00BE' 0086'              	movwf	??__div_to_l_
  8046  00BF' 0A84               	incf	4,f
  8047  00C0' 0800               	movf	0,w
  8048  00C1' 0087'              	movwf	??__div_to_l_+1
  8049  00C2' 0A84               	incf	4,f
  8050  00C3' 0800               	movf	0,w
  8051  00C4' 0088'              	movwf	??__div_to_l_+2
  8052  00C5' 0A84               	incf	4,f
  8053  00C6' 0800               	movf	0,w
  8054  00C7' 0089'              	movwf	??__div_to_l_+3
  8055  00C8' 3000'              	movlw	low __div_to_l_@f1
  8056  00C9' 0084               	movwf	4
  8057  00CA' 0806'              	movf	??__div_to_l_,w
  8058  00CB' 0280               	subwf	0,f
  8059  00CC' 0A84               	incf	4,f
  8060  00CD' 0807'              	movf	??__div_to_l_+1,w
  8061  00CE' 1C03               	skipc
  8062  00CF' 0F07'              	incfsz	??__div_to_l_+1,w
  8063  00D0' 0280               	subwf	0,f
  8064  00D1' 0A84               	incf	4,f
  8065  00D2' 0808'              	movf	??__div_to_l_+2,w
  8066  00D3' 1C03               	skipc
  8067  00D4' 0F08'              	incfsz	??__div_to_l_+2,w
  8068  00D5' 0280               	subwf	0,f
  8069  00D6' 0A84               	incf	4,f
  8070  00D7' 0809'              	movf	??__div_to_l_+3,w
  8071  00D8' 1C03               	skipc
  8072  00D9' 0A09'              	incf	??__div_to_l_+3,w
  8073  00DA' 0280               	subwf	0,f
  8074  00DB' 3003               	movlw	3
  8075  00DC' 0284               	subwf	4,f
  8076  00DD' 140E'              	bsf	__div_to_l_@quot,0
  8077  00DE'                    l577:	
  8078  00DE' 3000'              	movlw	low __div_to_l_@f1
  8079  00DF' 0084               	movwf	4
  8080  00E0' 1003               	clrc
  8081  00E1' 0D80               	rlf	0,f
  8082  00E2' 0A84               	incf	4,f
  8083  00E3' 0D80               	rlf	0,f
  8084  00E4' 0A84               	incf	4,f
  8085  00E5' 0D80               	rlf	0,f
  8086  00E6' 0A84               	incf	4,f
  8087  00E7' 0D80               	rlf	0,f
  8088  00E8' 0384               	decf	4,f
  8089  00E9' 0384               	decf	4,f
  8090  00EA' 0384               	decf	4,f
  8091  00EB' 3001               	movlw	1
  8092  00EC' 0292'              	subwf	__div_to_l_@cntr,f
  8093  00ED' 1D03               	btfss	3,2
  8094  00EE' 2800'              	goto	l4917
  8095  00EF' 1F93'              	btfss	__div_to_l_@exp1,7
  8096  00F0' 2800'              	goto	l4935
  8097  00F1' 0813'              	movf	__div_to_l_@exp1,w
  8098  00F2' 3A80               	xorlw	128
  8099  00F3' 3E9F               	addlw	159
  8100  00F4' 1803               	skipnc
  8101  00F5' 2800'              	goto	l4933
  8102  00F6' 3000               	movlw	0
  8103  00F7' 0083'              	movwf	?__div_to_l_+3
  8104  00F8' 3000               	movlw	0
  8105  00F9' 0082'              	movwf	?__div_to_l_+2
  8106  00FA' 3000               	movlw	0
  8107  00FB' 0081'              	movwf	?__div_to_l_+1
  8108  00FC' 3000               	movlw	0
  8109  00FD' 0080'              	movwf	?__div_to_l_
  8110  00FE' 0008               	return
  8111  00FF'                    l4933:	
  8112  00FF' 3001               	movlw	1
  8113  0100'                    u6745:	
  8114  0100' 1003               	clrc
  8115  0101' 0C91'              	rrf	__div_to_l_@quot+3,f
  8116  0102' 0C90'              	rrf	__div_to_l_@quot+2,f
  8117  0103' 0C8F'              	rrf	__div_to_l_@quot+1,f
  8118  0104' 0C8E'              	rrf	__div_to_l_@quot,f
  8119  0105' 3EFF               	addlw	-1
  8120  0106' 1D03               	skipz
  8121  0107' 2800'              	goto	u6745
  8122  0108' 3001               	movlw	1
  8123  0109' 0086'              	movwf	??__div_to_l_
  8124  010A' 0806'              	movf	??__div_to_l_,w
  8125  010B' 0793'              	addwf	__div_to_l_@exp1,f
  8126  010C' 1903               	btfsc	3,2
  8127  010D' 2800'              	goto	l4945
  8128  010E' 2800'              	goto	l4933
  8129  010F'                    l4935:	
  8130  010F' 3020               	movlw	32
  8131  0110' 0213'              	subwf	__div_to_l_@exp1,w
  8132  0111' 1C03               	skipc
  8133  0112' 2800'              	goto	l4943
  8134  0113' 3000               	movlw	0
  8135  0114' 0083'              	movwf	?__div_to_l_+3
  8136  0115' 3000               	movlw	0
  8137  0116' 0082'              	movwf	?__div_to_l_+2
  8138  0117' 3000               	movlw	0
  8139  0118' 0081'              	movwf	?__div_to_l_+1
  8140  0119' 3000               	movlw	0
  8141  011A' 0080'              	movwf	?__div_to_l_
  8142  011B' 0008               	return
  8143  011C'                    l4941:	
  8144  011C' 3001               	movlw	1
  8145  011D' 0086'              	movwf	??__div_to_l_
  8146  011E'                    u6775:	
  8147  011E' 1003               	clrc
  8148  011F' 0D8E'              	rlf	__div_to_l_@quot,f
  8149  0120' 0D8F'              	rlf	__div_to_l_@quot+1,f
  8150  0121' 0D90'              	rlf	__div_to_l_@quot+2,f
  8151  0122' 0D91'              	rlf	__div_to_l_@quot+3,f
  8152  0123' 0B86'              	decfsz	??__div_to_l_,f
  8153  0124' 2800'              	goto	u6775
  8154  0125' 3001               	movlw	1
  8155  0126' 0293'              	subwf	__div_to_l_@exp1,f
  8156  0127'                    l4943:	
  8157  0127' 0893'              	movf	__div_to_l_@exp1,f
  8158  0128' 1D03               	skipz
  8159  0129' 2800'              	goto	l4941
  8160  012A'                    l4945:	
  8161  012A' 0811'              	movf	__div_to_l_@quot+3,w
  8162  012B' 0083'              	movwf	?__div_to_l_+3
  8163  012C' 0810'              	movf	__div_to_l_@quot+2,w
  8164  012D' 0082'              	movwf	?__div_to_l_+2
  8165  012E' 080F'              	movf	__div_to_l_@quot+1,w
  8166  012F' 0081'              	movwf	?__div_to_l_+1
  8167  0130' 080E'              	movf	__div_to_l_@quot,w
  8168  0131' 0080'              	movwf	?__div_to_l_
  8169  0132' 0008               	return
  8170  0133'                    __end_of__div_to_l_:	
  8171                           
  8172                           	psect	text12
  8173  0000'                    __ptext12:	
  8174 ;; *************** function ___wmul *****************
  8175 ;; Defined at:
  8176 ;;		line 15 in file "/opt/microchip/xc8/v1.33/sources/common/Umul16.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;  multiplier      2    4[COMMON] unsigned int 
  8179 ;;  multiplicand    2    6[COMMON] unsigned int 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;  product         2    0[BANK0 ] unsigned int 
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  2    4[COMMON] unsigned int 
  8184 ;; Registers used:
  8185 ;;		wreg, status,2, status,0
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8191 ;;      Params:         4       0       0       0       0
  8192 ;;      Locals:         0       2       0       0       0
  8193 ;;      Temps:          0       0       0       0       0
  8194 ;;      Totals:         4       2       0       0       0
  8195 ;;Total ram usage:        6 bytes
  8196 ;; Hardware stack levels used:    1
  8197 ;; Hardware stack levels required when called:    1
  8198 ;; This function calls:
  8199 ;;		Nothing
  8200 ;; This function is called by:
  8201 ;;		_sprintf
  8202 ;;		_wait_ms
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           
  8207                           ;psect for function ___wmul
  8208  0000'                    ___wmul:	
  8209                           
  8210                           ;incstack = 0
  8211                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8212  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8213  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8214  0002' 0180'              	clrf	___wmul@product
  8215  0003' 0181'              	clrf	___wmul@product+1
  8216  0004'                    l4951:	
  8217  0004' 1C04'              	btfss	___wmul@multiplier,0
  8218  0005' 2800'              	goto	l392
  8219  0006' 0806'              	movf	___wmul@multiplicand,w
  8220  0007' 1283               	bcf	3,5	;RP0=0, select bank0
  8221  0008' 1303               	bcf	3,6	;RP1=0, select bank0
  8222  0009' 0780'              	addwf	___wmul@product,f
  8223  000A' 1803               	skipnc
  8224  000B' 0A81'              	incf	___wmul@product+1,f
  8225  000C' 0807'              	movf	___wmul@multiplicand+1,w
  8226  000D' 0781'              	addwf	___wmul@product+1,f
  8227  000E'                    l392:	
  8228  000E' 3001               	movlw	1
  8229  000F'                    u6805:	
  8230  000F' 1003               	clrc
  8231  0010' 0D86'              	rlf	___wmul@multiplicand,f
  8232  0011' 0D87'              	rlf	___wmul@multiplicand+1,f
  8233  0012' 3EFF               	addlw	-1
  8234  0013' 1D03               	skipz
  8235  0014' 2800'              	goto	u6805
  8236  0015' 3001               	movlw	1
  8237  0016'                    u6815:	
  8238  0016' 1003               	clrc
  8239  0017' 0C85'              	rrf	___wmul@multiplier+1,f
  8240  0018' 0C84'              	rrf	___wmul@multiplier,f
  8241  0019' 3EFF               	addlw	-1
  8242  001A' 1D03               	skipz
  8243  001B' 2800'              	goto	u6815
  8244  001C' 0805'              	movf	___wmul@multiplier+1,w
  8245  001D' 0404'              	iorwf	___wmul@multiplier,w
  8246  001E' 1D03               	skipz
  8247  001F' 2800'              	goto	l4951
  8248  0020' 1283               	bcf	3,5	;RP0=0, select bank0
  8249  0021' 1303               	bcf	3,6	;RP1=0, select bank0
  8250  0022' 0801'              	movf	___wmul@product+1,w
  8251  0023' 0185'              	clrf	?___wmul+1
  8252  0024' 0785'              	addwf	?___wmul+1,f
  8253  0025' 0800'              	movf	___wmul@product,w
  8254  0026' 0184'              	clrf	?___wmul
  8255  0027' 0784'              	addwf	?___wmul,f
  8256  0028' 0008               	return
  8257  0029'                    __end_of___wmul:	
  8258                           
  8259                           	psect	text13
  8260  0000'                    __ptext13:	
  8261 ;; *************** function ___llmod *****************
  8262 ;; Defined at:
  8263 ;;		line 6 in file "/opt/microchip/xc8/v1.33/sources/common/llmod.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;  divisor         4    0[BANK0 ] unsigned long 
  8266 ;;  dividend        4    4[BANK0 ] unsigned long 
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;  counter         1    5[COMMON] unsigned char 
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  4    0[BANK0 ] unsigned long 
  8271 ;; Registers used:
  8272 ;;		wreg, status,2, status,0
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8278 ;;      Params:         0       8       0       0       0
  8279 ;;      Locals:         1       0       0       0       0
  8280 ;;      Temps:          1       0       0       0       0
  8281 ;;      Totals:         2       8       0       0       0
  8282 ;;Total ram usage:       10 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; Hardware stack levels required when called:    1
  8285 ;; This function calls:
  8286 ;;		Nothing
  8287 ;; This function is called by:
  8288 ;;		_sprintf
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           
  8293                           ;psect for function ___llmod
  8294  0000'                    ___llmod:	
  8295                           
  8296                           ;incstack = 0
  8297                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8298  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8299  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8300  0002' 0803'              	movf	___llmod@divisor+3,w
  8301  0003' 0402'              	iorwf	___llmod@divisor+2,w
  8302  0004' 0401'              	iorwf	___llmod@divisor+1,w
  8303  0005' 0400'              	iorwf	___llmod@divisor,w
  8304  0006' 1903               	skipnz
  8305  0007' 2800'              	goto	l5001
  8306  0008' 0185'              	clrf	___llmod@counter
  8307  0009' 0A85'              	incf	___llmod@counter,f
  8308  000A'                    l4991:	
  8309  000A' 1B83'              	btfsc	___llmod@divisor+3,7
  8310  000B' 2800'              	goto	l4993
  8311  000C' 3001               	movlw	1
  8312  000D' 0084'              	movwf	??___llmod
  8313  000E'                    u6915:	
  8314  000E' 1003               	clrc
  8315  000F' 0D80'              	rlf	___llmod@divisor,f
  8316  0010' 0D81'              	rlf	___llmod@divisor+1,f
  8317  0011' 0D82'              	rlf	___llmod@divisor+2,f
  8318  0012' 0D83'              	rlf	___llmod@divisor+3,f
  8319  0013' 0B84'              	decfsz	??___llmod,f
  8320  0014' 2800'              	goto	u6915
  8321  0015' 3001               	movlw	1
  8322  0016' 0084'              	movwf	??___llmod
  8323  0017' 0804'              	movf	??___llmod,w
  8324  0018' 0785'              	addwf	___llmod@counter,f
  8325  0019' 2800'              	goto	l4991
  8326  001A'                    l4993:	
  8327  001A' 0803'              	movf	___llmod@divisor+3,w
  8328  001B' 0207'              	subwf	___llmod@dividend+3,w
  8329  001C' 1D03               	skipz
  8330  001D' 2800'              	goto	u6935
  8331  001E' 0802'              	movf	___llmod@divisor+2,w
  8332  001F' 0206'              	subwf	___llmod@dividend+2,w
  8333  0020' 1D03               	skipz
  8334  0021' 2800'              	goto	u6935
  8335  0022' 0801'              	movf	___llmod@divisor+1,w
  8336  0023' 0205'              	subwf	___llmod@dividend+1,w
  8337  0024' 1D03               	skipz
  8338  0025' 2800'              	goto	u6935
  8339  0026' 0800'              	movf	___llmod@divisor,w
  8340  0027' 0204'              	subwf	___llmod@dividend,w
  8341  0028'                    u6935:	
  8342  0028' 1C03               	skipc
  8343  0029' 2800'              	goto	l4997
  8344  002A' 0800'              	movf	___llmod@divisor,w
  8345  002B' 0284'              	subwf	___llmod@dividend,f
  8346  002C' 0801'              	movf	___llmod@divisor+1,w
  8347  002D' 1C03               	skipc
  8348  002E' 0F01'              	incfsz	___llmod@divisor+1,w
  8349  002F' 0285'              	subwf	___llmod@dividend+1,f
  8350  0030' 0802'              	movf	___llmod@divisor+2,w
  8351  0031' 1C03               	skipc
  8352  0032' 0F02'              	incfsz	___llmod@divisor+2,w
  8353  0033' 0286'              	subwf	___llmod@dividend+2,f
  8354  0034' 0803'              	movf	___llmod@divisor+3,w
  8355  0035' 1C03               	skipc
  8356  0036' 0F03'              	incfsz	___llmod@divisor+3,w
  8357  0037' 0287'              	subwf	___llmod@dividend+3,f
  8358  0038'                    l4997:	
  8359  0038' 3001               	movlw	1
  8360  0039'                    u6945:	
  8361  0039' 1003               	clrc
  8362  003A' 0C83'              	rrf	___llmod@divisor+3,f
  8363  003B' 0C82'              	rrf	___llmod@divisor+2,f
  8364  003C' 0C81'              	rrf	___llmod@divisor+1,f
  8365  003D' 0C80'              	rrf	___llmod@divisor,f
  8366  003E' 3EFF               	addlw	-1
  8367  003F' 1D03               	skipz
  8368  0040' 2800'              	goto	u6945
  8369  0041' 3001               	movlw	1
  8370  0042' 0285'              	subwf	___llmod@counter,f
  8371  0043' 1D03               	btfss	3,2
  8372  0044' 2800'              	goto	l4993
  8373  0045'                    l5001:	
  8374  0045' 0807'              	movf	___llmod@dividend+3,w
  8375  0046' 0083'              	movwf	?___llmod+3
  8376  0047' 0806'              	movf	___llmod@dividend+2,w
  8377  0048' 0082'              	movwf	?___llmod+2
  8378  0049' 0805'              	movf	___llmod@dividend+1,w
  8379  004A' 0081'              	movwf	?___llmod+1
  8380  004B' 0804'              	movf	___llmod@dividend,w
  8381  004C' 0080'              	movwf	?___llmod
  8382  004D' 0008               	return
  8383  004E'                    __end_of___llmod:	
  8384                           
  8385                           	psect	text14
  8386  0000'                    __ptext14:	
  8387 ;; *************** function ___lldiv *****************
  8388 ;; Defined at:
  8389 ;;		line 6 in file "/opt/microchip/xc8/v1.33/sources/common/lldiv.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;  divisor         4    0[BANK0 ] unsigned long 
  8392 ;;  dividend        4    4[BANK0 ] unsigned long 
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;  quotient        4    8[BANK0 ] unsigned long 
  8395 ;;  counter         1   12[BANK0 ] unsigned char 
  8396 ;; Return value:  Size  Location     Type
  8397 ;;                  4    0[BANK0 ] unsigned long 
  8398 ;; Registers used:
  8399 ;;		wreg, status,2, status,0
  8400 ;; Tracked objects:
  8401 ;;		On entry : 0/0
  8402 ;;		On exit  : 0/0
  8403 ;;		Unchanged: 0/0
  8404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8405 ;;      Params:         0       8       0       0       0
  8406 ;;      Locals:         0       5       0       0       0
  8407 ;;      Temps:          1       0       0       0       0
  8408 ;;      Totals:         1      13       0       0       0
  8409 ;;Total ram usage:       14 bytes
  8410 ;; Hardware stack levels used:    1
  8411 ;; Hardware stack levels required when called:    1
  8412 ;; This function calls:
  8413 ;;		Nothing
  8414 ;; This function is called by:
  8415 ;;		_sprintf
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           
  8420                           ;psect for function ___lldiv
  8421  0000'                    ___lldiv:	
  8422                           
  8423                           ;incstack = 0
  8424                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8425  0000' 3000               	movlw	0
  8426  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  8427  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  8428  0003' 008B'              	movwf	___lldiv@quotient+3
  8429  0004' 3000               	movlw	0
  8430  0005' 008A'              	movwf	___lldiv@quotient+2
  8431  0006' 3000               	movlw	0
  8432  0007' 0089'              	movwf	___lldiv@quotient+1
  8433  0008' 3000               	movlw	0
  8434  0009' 0088'              	movwf	___lldiv@quotient
  8435  000A' 0803'              	movf	___lldiv@divisor+3,w
  8436  000B' 0402'              	iorwf	___lldiv@divisor+2,w
  8437  000C' 0401'              	iorwf	___lldiv@divisor+1,w
  8438  000D' 0400'              	iorwf	___lldiv@divisor,w
  8439  000E' 1903               	skipnz
  8440  000F' 2800'              	goto	l4981
  8441  0010' 018C'              	clrf	___lldiv@counter
  8442  0011' 0A8C'              	incf	___lldiv@counter,f
  8443  0012'                    l4967:	
  8444  0012' 1B83'              	btfsc	___lldiv@divisor+3,7
  8445  0013' 2800'              	goto	l4969
  8446  0014' 3001               	movlw	1
  8447  0015' 0084'              	movwf	??___lldiv
  8448  0016'                    u6845:	
  8449  0016' 1003               	clrc
  8450  0017' 0D80'              	rlf	___lldiv@divisor,f
  8451  0018' 0D81'              	rlf	___lldiv@divisor+1,f
  8452  0019' 0D82'              	rlf	___lldiv@divisor+2,f
  8453  001A' 0D83'              	rlf	___lldiv@divisor+3,f
  8454  001B' 0B84'              	decfsz	??___lldiv,f
  8455  001C' 2800'              	goto	u6845
  8456  001D' 3001               	movlw	1
  8457  001E' 0084'              	movwf	??___lldiv
  8458  001F' 0804'              	movf	??___lldiv,w
  8459  0020' 078C'              	addwf	___lldiv@counter,f
  8460  0021' 2800'              	goto	l4967
  8461  0022'                    l4969:	
  8462  0022' 3001               	movlw	1
  8463  0023' 0084'              	movwf	??___lldiv
  8464  0024'                    u6865:	
  8465  0024' 1003               	clrc
  8466  0025' 0D88'              	rlf	___lldiv@quotient,f
  8467  0026' 0D89'              	rlf	___lldiv@quotient+1,f
  8468  0027' 0D8A'              	rlf	___lldiv@quotient+2,f
  8469  0028' 0D8B'              	rlf	___lldiv@quotient+3,f
  8470  0029' 0B84'              	decfsz	??___lldiv,f
  8471  002A' 2800'              	goto	u6865
  8472  002B' 0803'              	movf	___lldiv@divisor+3,w
  8473  002C' 0207'              	subwf	___lldiv@dividend+3,w
  8474  002D' 1D03               	skipz
  8475  002E' 2800'              	goto	u6875
  8476  002F' 0802'              	movf	___lldiv@divisor+2,w
  8477  0030' 0206'              	subwf	___lldiv@dividend+2,w
  8478  0031' 1D03               	skipz
  8479  0032' 2800'              	goto	u6875
  8480  0033' 0801'              	movf	___lldiv@divisor+1,w
  8481  0034' 0205'              	subwf	___lldiv@dividend+1,w
  8482  0035' 1D03               	skipz
  8483  0036' 2800'              	goto	u6875
  8484  0037' 0800'              	movf	___lldiv@divisor,w
  8485  0038' 0204'              	subwf	___lldiv@dividend,w
  8486  0039'                    u6875:	
  8487  0039' 1C03               	skipc
  8488  003A' 2800'              	goto	l4977
  8489  003B' 0800'              	movf	___lldiv@divisor,w
  8490  003C' 0284'              	subwf	___lldiv@dividend,f
  8491  003D' 0801'              	movf	___lldiv@divisor+1,w
  8492  003E' 1C03               	skipc
  8493  003F' 0F01'              	incfsz	___lldiv@divisor+1,w
  8494  0040' 0285'              	subwf	___lldiv@dividend+1,f
  8495  0041' 0802'              	movf	___lldiv@divisor+2,w
  8496  0042' 1C03               	skipc
  8497  0043' 0F02'              	incfsz	___lldiv@divisor+2,w
  8498  0044' 0286'              	subwf	___lldiv@dividend+2,f
  8499  0045' 0803'              	movf	___lldiv@divisor+3,w
  8500  0046' 1C03               	skipc
  8501  0047' 0F03'              	incfsz	___lldiv@divisor+3,w
  8502  0048' 0287'              	subwf	___lldiv@dividend+3,f
  8503  0049' 1408'              	bsf	___lldiv@quotient,0
  8504  004A'                    l4977:	
  8505  004A' 3001               	movlw	1
  8506  004B'                    u6885:	
  8507  004B' 1003               	clrc
  8508  004C' 0C83'              	rrf	___lldiv@divisor+3,f
  8509  004D' 0C82'              	rrf	___lldiv@divisor+2,f
  8510  004E' 0C81'              	rrf	___lldiv@divisor+1,f
  8511  004F' 0C80'              	rrf	___lldiv@divisor,f
  8512  0050' 3EFF               	addlw	-1
  8513  0051' 1D03               	skipz
  8514  0052' 2800'              	goto	u6885
  8515  0053' 3001               	movlw	1
  8516  0054' 028C'              	subwf	___lldiv@counter,f
  8517  0055' 1D03               	btfss	3,2
  8518  0056' 2800'              	goto	l4969
  8519  0057'                    l4981:	
  8520  0057' 080B'              	movf	___lldiv@quotient+3,w
  8521  0058' 0083'              	movwf	?___lldiv+3
  8522  0059' 080A'              	movf	___lldiv@quotient+2,w
  8523  005A' 0082'              	movwf	?___lldiv+2
  8524  005B' 0809'              	movf	___lldiv@quotient+1,w
  8525  005C' 0081'              	movwf	?___lldiv+1
  8526  005D' 0808'              	movf	___lldiv@quotient,w
  8527  005E' 0080'              	movwf	?___lldiv
  8528  005F' 0008               	return
  8529  0060'                    __end_of___lldiv:	
  8530                           
  8531                           	psect	text15
  8532  0000'                    __ptext15:	
  8533 ;; *************** function _buf_wait *****************
  8534 ;; Defined at:
  8535 ;;		line 63 in file "user.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;		None
  8538 ;; Auto vars:     Size  Location     Type
  8539 ;;		None
  8540 ;; Return value:  Size  Location     Type
  8541 ;;		None               void
  8542 ;; Registers used:
  8543 ;;		None
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8549 ;;      Params:         0       0       0       0       0
  8550 ;;      Locals:         0       0       0       0       0
  8551 ;;      Temps:          0       0       0       0       0
  8552 ;;      Totals:         0       0       0       0       0
  8553 ;;Total ram usage:        0 bytes
  8554 ;; Hardware stack levels used:    1
  8555 ;; Hardware stack levels required when called:    1
  8556 ;; This function calls:
  8557 ;;		Nothing
  8558 ;; This function is called by:
  8559 ;;		_main
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           
  8564                           ;psect for function _buf_wait
  8565  0000'                    _buf_wait:	
  8566  0000'                    l111:	
  8567                           ;user.c: 65: while (!SSPSTATbits.BF);
  8568                           
  8569                           ;incstack = 0
  8570                           ; Regs used in _buf_wait: []
  8571                           
  8572  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  8573  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  8574  0002' 1814               	btfsc	20,0	;volatile
  8575  0003' 0008               	return
  8576  0004' 2800'              	goto	l111
  8577  0005'                    __end_of_buf_wait:	
  8578                           
  8579                           	psect	text16
  8580  0000'                    __ptext16:	
  8581 ;; *************** function _binary_decimal *****************
  8582 ;; Defined at:
  8583 ;;		line 261 in file "user.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;  n               2   32[BANK1 ] int 
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;  i               2   44[BANK1 ] int 
  8588 ;;  decimal         2   42[BANK1 ] int 
  8589 ;;  rem             2   40[BANK1 ] int 
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  2   32[BANK1 ] int 
  8592 ;; Registers used:
  8593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/0
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8599 ;;      Params:         0       0       2       0       0
  8600 ;;      Locals:         0       0      12       0       0
  8601 ;;      Temps:          0       0       0       0       0
  8602 ;;      Totals:         0       0      14       0       0
  8603 ;;Total ram usage:       14 bytes
  8604 ;; Hardware stack levels used:    1
  8605 ;; Hardware stack levels required when called:    6
  8606 ;; This function calls:
  8607 ;;		___awdiv
  8608 ;;		___awmod
  8609 ;;		___awtoft
  8610 ;;		___ftmul
  8611 ;;		___fttol
  8612 ;;		_pow
  8613 ;; This function is called by:
  8614 ;;		_main
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           
  8619                           ;psect for function _binary_decimal
  8620  0000'                    _binary_decimal:	
  8621                           
  8622                           ;user.c: 263: int decimal=0, i=0, rem;
  8623                           
  8624                           ;incstack = 0
  8625                           ; Regs used in _binary_decimal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8626  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  8627  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  8628  0002' 0180'              	clrf	binary_decimal@decimal^(0+128)
  8629  0003' 0180'              	clrf	(binary_decimal@decimal+1)^(0+128)
  8630  0004' 0180'              	clrf	binary_decimal@i^(0+128)
  8631  0005' 0180'              	clrf	(binary_decimal@i+1)^(0+128)
  8632  0006'                    l5379:	
  8633                           ;user.c: 264: while (n!=0)
  8634                           
  8635  0006' 0800'              	movf	(binary_decimal@n+1)^(0+128),w
  8636  0007' 0400'              	iorwf	binary_decimal@n^(0+128),w
  8637  0008' 1903               	btfsc	3,2
  8638  0009' 2800'              	goto	l5381
  8639                           
  8640                           ;user.c: 265: {
  8641                           ;user.c: 266: rem = n%10;
  8642  000A' 300A               	movlw	10
  8643  000B' 0084'              	movwf	___awmod@divisor
  8644  000C' 3000               	movlw	0
  8645  000D' 0085'              	movwf	___awmod@divisor+1
  8646  000E' 0800'              	movf	(binary_decimal@n+1)^(0+128),w
  8647  000F' 0187'              	clrf	___awmod@dividend+1
  8648  0010' 0787'              	addwf	___awmod@dividend+1,f
  8649  0011' 0800'              	movf	binary_decimal@n^(0+128),w
  8650  0012' 0186'              	clrf	___awmod@dividend
  8651  0013' 0786'              	addwf	___awmod@dividend,f
  8652  0014' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  8653  0019' 0805'              	movf	?___awmod+1,w
  8654  001A' 1683               	bsf	3,5	;RP0=1, select bank1
  8655  001B' 1303               	bcf	3,6	;RP1=0, select bank1
  8656  001C' 0180'              	clrf	(binary_decimal@rem+1)^(0+128)
  8657  001D' 0780'              	addwf	(binary_decimal@rem+1)^(0+128),f
  8658  001E' 0804'              	movf	?___awmod,w
  8659  001F' 0180'              	clrf	binary_decimal@rem^(0+128)
  8660  0020' 0780'              	addwf	binary_decimal@rem^(0+128),f
  8661                           
  8662                           ;user.c: 267: n/=10;
  8663  0021' 300A               	movlw	10
  8664  0022' 1283               	bcf	3,5	;RP0=0, select bank0
  8665  0023' 1303               	bcf	3,6	;RP1=0, select bank0
  8666  0024' 0083'              	movwf	___awdiv@divisor
  8667  0025' 3000               	movlw	0
  8668  0026' 0084'              	movwf	___awdiv@divisor+1
  8669  0027' 1683               	bsf	3,5	;RP0=1, select bank1
  8670  0028' 1303               	bcf	3,6	;RP1=0, select bank1
  8671  0029' 0800'              	movf	(binary_decimal@n+1)^(0+128),w
  8672  002A' 1283               	bcf	3,5	;RP0=0, select bank0
  8673  002B' 1303               	bcf	3,6	;RP1=0, select bank0
  8674  002C' 0186'              	clrf	___awdiv@dividend+1
  8675  002D' 0786'              	addwf	___awdiv@dividend+1,f
  8676  002E' 1683               	bsf	3,5	;RP0=1, select bank1
  8677  002F' 1303               	bcf	3,6	;RP1=0, select bank1
  8678  0030' 0800'              	movf	binary_decimal@n^(0+128),w
  8679  0031' 1283               	bcf	3,5	;RP0=0, select bank0
  8680  0032' 1303               	bcf	3,6	;RP1=0, select bank0
  8681  0033' 0185'              	clrf	___awdiv@dividend
  8682  0034' 0785'              	addwf	___awdiv@dividend,f
  8683  0035' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  8684  003A' 1283               	bcf	3,5	;RP0=0, select bank0
  8685  003B' 1303               	bcf	3,6	;RP1=0, select bank0
  8686  003C' 0804'              	movf	?___awdiv+1,w
  8687  003D' 1683               	bsf	3,5	;RP0=1, select bank1
  8688  003E' 1303               	bcf	3,6	;RP1=0, select bank1
  8689  003F' 0180'              	clrf	(binary_decimal@n+1)^(0+128)
  8690  0040' 0780'              	addwf	(binary_decimal@n+1)^(0+128),f
  8691  0041' 1283               	bcf	3,5	;RP0=0, select bank0
  8692  0042' 1303               	bcf	3,6	;RP1=0, select bank0
  8693  0043' 0803'              	movf	?___awdiv,w
  8694  0044' 1683               	bsf	3,5	;RP0=1, select bank1
  8695  0045' 1303               	bcf	3,6	;RP1=0, select bank1
  8696  0046' 0180'              	clrf	binary_decimal@n^(0+128)
  8697  0047' 0780'              	addwf	binary_decimal@n^(0+128),f
  8698                           
  8699                           ;user.c: 268: decimal += rem * pow(2,i);
  8700  0048' 0800'              	movf	(binary_decimal@i+1)^(0+128),w
  8701  0049' 1283               	bcf	3,5	;RP0=0, select bank0
  8702  004A' 1303               	bcf	3,6	;RP1=0, select bank0
  8703  004B' 0186'              	clrf	___awtoft@c+1
  8704  004C' 0786'              	addwf	___awtoft@c+1,f
  8705  004D' 1683               	bsf	3,5	;RP0=1, select bank1
  8706  004E' 1303               	bcf	3,6	;RP1=0, select bank1
  8707  004F' 0800'              	movf	binary_decimal@i^(0+128),w
  8708  0050' 1283               	bcf	3,5	;RP0=0, select bank0
  8709  0051' 1303               	bcf	3,6	;RP1=0, select bank0
  8710  0052' 0185'              	clrf	___awtoft@c
  8711  0053' 0785'              	addwf	___awtoft@c,f
  8712  0054' 120A' 118A' 2000' 120A' 118A' 	fcall	___awtoft
  8713  0059' 1283               	bcf	3,5	;RP0=0, select bank0
  8714  005A' 1303               	bcf	3,6	;RP1=0, select bank0
  8715  005B' 0805'              	movf	?___awtoft,w
  8716  005C' 1683               	bsf	3,5	;RP0=1, select bank1
  8717  005D' 1303               	bcf	3,6	;RP1=0, select bank1
  8718  005E' 0080'              	movwf	_binary_decimal$1006^(0+128)
  8719  005F' 1283               	bcf	3,5	;RP0=0, select bank0
  8720  0060' 1303               	bcf	3,6	;RP1=0, select bank0
  8721  0061' 0806'              	movf	?___awtoft+1,w
  8722  0062' 1683               	bsf	3,5	;RP0=1, select bank1
  8723  0063' 1303               	bcf	3,6	;RP1=0, select bank1
  8724  0064' 0080'              	movwf	(_binary_decimal$1006+1)^(0+128)
  8725  0065' 1283               	bcf	3,5	;RP0=0, select bank0
  8726  0066' 1303               	bcf	3,6	;RP1=0, select bank0
  8727  0067' 0807'              	movf	?___awtoft+2,w
  8728  0068' 1683               	bsf	3,5	;RP0=1, select bank1
  8729  0069' 1303               	bcf	3,6	;RP1=0, select bank1
  8730  006A' 0080'              	movwf	(_binary_decimal$1006+2)^(0+128)
  8731                           
  8732                           ;user.c: 268: decimal += rem * pow(2,i);
  8733  006B' 0800'              	movf	_binary_decimal$1006^(0+128),w
  8734  006C' 0080'              	movwf	pow@y^(0+128)
  8735  006D' 0800'              	movf	(_binary_decimal$1006+1)^(0+128),w
  8736  006E' 0080'              	movwf	(pow@y+1)^(0+128)
  8737  006F' 0800'              	movf	(_binary_decimal$1006+2)^(0+128),w
  8738  0070' 0080'              	movwf	(pow@y+2)^(0+128)
  8739  0071' 3000               	movlw	0
  8740  0072' 0080'              	movwf	pow@x^(0+128)
  8741  0073' 3000               	movlw	0
  8742  0074' 0080'              	movwf	(pow@x+1)^(0+128)
  8743  0075' 3040               	movlw	64
  8744  0076' 0080'              	movwf	(pow@x+2)^(0+128)
  8745  0077' 120A' 118A' 2000' 120A' 118A' 	fcall	_pow
  8746  007C' 1683               	bsf	3,5	;RP0=1, select bank1
  8747  007D' 1303               	bcf	3,6	;RP1=0, select bank1
  8748  007E' 0800'              	movf	?_pow^(0+128),w
  8749  007F' 0080'              	movwf	_binary_decimal$1007^(0+128)
  8750  0080' 0800'              	movf	(?_pow+1)^(0+128),w
  8751  0081' 0080'              	movwf	(_binary_decimal$1007+1)^(0+128)
  8752  0082' 0800'              	movf	(?_pow+2)^(0+128),w
  8753  0083' 0080'              	movwf	(_binary_decimal$1007+2)^(0+128)
  8754                           
  8755                           ;user.c: 268: decimal += rem * pow(2,i);
  8756  0084' 0800'              	movf	(binary_decimal@rem+1)^(0+128),w
  8757  0085' 1283               	bcf	3,5	;RP0=0, select bank0
  8758  0086' 1303               	bcf	3,6	;RP1=0, select bank0
  8759  0087' 0186'              	clrf	___awtoft@c+1
  8760  0088' 0786'              	addwf	___awtoft@c+1,f
  8761  0089' 1683               	bsf	3,5	;RP0=1, select bank1
  8762  008A' 1303               	bcf	3,6	;RP1=0, select bank1
  8763  008B' 0800'              	movf	binary_decimal@rem^(0+128),w
  8764  008C' 1283               	bcf	3,5	;RP0=0, select bank0
  8765  008D' 1303               	bcf	3,6	;RP1=0, select bank0
  8766  008E' 0185'              	clrf	___awtoft@c
  8767  008F' 0785'              	addwf	___awtoft@c,f
  8768  0090' 120A' 118A' 2000' 120A' 118A' 	fcall	___awtoft
  8769  0095' 1283               	bcf	3,5	;RP0=0, select bank0
  8770  0096' 1303               	bcf	3,6	;RP1=0, select bank0
  8771  0097' 0805'              	movf	?___awtoft,w
  8772  0098' 0093'              	movwf	___ftmul@f2
  8773  0099' 0806'              	movf	?___awtoft+1,w
  8774  009A' 0094'              	movwf	___ftmul@f2+1
  8775  009B' 0807'              	movf	?___awtoft+2,w
  8776  009C' 0095'              	movwf	___ftmul@f2+2
  8777  009D' 1683               	bsf	3,5	;RP0=1, select bank1
  8778  009E' 1303               	bcf	3,6	;RP1=0, select bank1
  8779  009F' 0800'              	movf	_binary_decimal$1007^(0+128),w
  8780  00A0' 1283               	bcf	3,5	;RP0=0, select bank0
  8781  00A1' 1303               	bcf	3,6	;RP1=0, select bank0
  8782  00A2' 0090'              	movwf	___ftmul@f1
  8783  00A3' 1683               	bsf	3,5	;RP0=1, select bank1
  8784  00A4' 1303               	bcf	3,6	;RP1=0, select bank1
  8785  00A5' 0800'              	movf	(_binary_decimal$1007+1)^(0+128),w
  8786  00A6' 1283               	bcf	3,5	;RP0=0, select bank0
  8787  00A7' 1303               	bcf	3,6	;RP1=0, select bank0
  8788  00A8' 0091'              	movwf	___ftmul@f1+1
  8789  00A9' 1683               	bsf	3,5	;RP0=1, select bank1
  8790  00AA' 1303               	bcf	3,6	;RP1=0, select bank1
  8791  00AB' 0800'              	movf	(_binary_decimal$1007+2)^(0+128),w
  8792  00AC' 1283               	bcf	3,5	;RP0=0, select bank0
  8793  00AD' 1303               	bcf	3,6	;RP1=0, select bank0
  8794  00AE' 0092'              	movwf	___ftmul@f1+2
  8795  00AF' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  8796  00B4' 1283               	bcf	3,5	;RP0=0, select bank0
  8797  00B5' 1303               	bcf	3,6	;RP1=0, select bank0
  8798  00B6' 0810'              	movf	?___ftmul,w
  8799  00B7' 00A9'              	movwf	___fttol@f1
  8800  00B8' 0811'              	movf	?___ftmul+1,w
  8801  00B9' 00AA'              	movwf	___fttol@f1+1
  8802  00BA' 0812'              	movf	?___ftmul+2,w
  8803  00BB' 00AB'              	movwf	___fttol@f1+2
  8804  00BC' 120A' 118A' 2000' 120A' 118A' 	fcall	___fttol
  8805  00C1' 1283               	bcf	3,5	;RP0=0, select bank0
  8806  00C2' 1303               	bcf	3,6	;RP1=0, select bank0
  8807  00C3' 0829'              	movf	?___fttol,w
  8808  00C4' 1683               	bsf	3,5	;RP0=1, select bank1
  8809  00C5' 1303               	bcf	3,6	;RP1=0, select bank1
  8810  00C6' 0780'              	addwf	binary_decimal@decimal^(0+128),f
  8811  00C7' 1803               	skipnc
  8812  00C8' 0A80'              	incf	(binary_decimal@decimal+1)^(0+128),f
  8813  00C9' 1283               	bcf	3,5	;RP0=0, select bank0
  8814  00CA' 1303               	bcf	3,6	;RP1=0, select bank0
  8815  00CB' 082A'              	movf	?___fttol+1,w
  8816  00CC' 1683               	bsf	3,5	;RP0=1, select bank1
  8817  00CD' 1303               	bcf	3,6	;RP1=0, select bank1
  8818  00CE' 0780'              	addwf	(binary_decimal@decimal+1)^(0+128),f
  8819                           
  8820                           ;user.c: 269: ++i;
  8821  00CF' 3001               	movlw	1
  8822  00D0' 0780'              	addwf	binary_decimal@i^(0+128),f
  8823  00D1' 1803               	skipnc
  8824  00D2' 0A80'              	incf	(binary_decimal@i+1)^(0+128),f
  8825  00D3' 3000               	movlw	0
  8826  00D4' 0780'              	addwf	(binary_decimal@i+1)^(0+128),f
  8827  00D5' 2800'              	goto	l5379
  8828  00D6'                    l5381:	
  8829                           
  8830                           ;user.c: 270: }
  8831                           ;user.c: 271: return decimal;
  8832  00D6' 0800'              	movf	(binary_decimal@decimal+1)^(0+128),w
  8833  00D7' 0180'              	clrf	(?_binary_decimal+1)^(0+128)
  8834  00D8' 0780'              	addwf	(?_binary_decimal+1)^(0+128),f
  8835  00D9' 0800'              	movf	binary_decimal@decimal^(0+128),w
  8836  00DA' 0180'              	clrf	?_binary_decimal^(0+128)
  8837  00DB' 0780'              	addwf	?_binary_decimal^(0+128),f
  8838  00DC' 0008               	return
  8839  00DD'                    __end_of_binary_decimal:	
  8840                           
  8841                           	psect	text17
  8842  0000'                    __ptext17:	
  8843 ;; *************** function _pow *****************
  8844 ;; Defined at:
  8845 ;;		line 5 in file "/opt/microchip/xc8/v1.33/sources/common/pow.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;  x               3   15[BANK1 ] int 
  8848 ;;  y               3   18[BANK1 ] int 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;  yi              4   28[BANK1 ] unsigned long 
  8851 ;;  sign            1   27[BANK1 ] unsigned char 
  8852 ;; Return value:  Size  Location     Type
  8853 ;;                  3   15[BANK1 ] unsigned char 
  8854 ;; Registers used:
  8855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8856 ;; Tracked objects:
  8857 ;;		On entry : 0/0
  8858 ;;		On exit  : 0/0
  8859 ;;		Unchanged: 0/0
  8860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8861 ;;      Params:         0       0       6       0       0
  8862 ;;      Locals:         0       0      11       0       0
  8863 ;;      Temps:          0       1       0       0       0
  8864 ;;      Totals:         0       1      17       0       0
  8865 ;;Total ram usage:       18 bytes
  8866 ;; Hardware stack levels used:    1
  8867 ;; Hardware stack levels required when called:    5
  8868 ;; This function calls:
  8869 ;;		___ftge
  8870 ;;		___ftmul
  8871 ;;		___ftneg
  8872 ;;		___fttol
  8873 ;;		___lltoft
  8874 ;;		_exp
  8875 ;;		_log
  8876 ;; This function is called by:
  8877 ;;		_binary_decimal
  8878 ;;		_temp_voltage
  8879 ;;		_voltage_temp
  8880 ;; This function uses a non-reentrant model
  8881 ;;
  8882                           
  8883                           
  8884                           ;psect for function _pow
  8885  0000'                    _pow:	
  8886                           
  8887                           ;incstack = 0
  8888                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8889  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  8890  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  8891  0002' 0180'              	clrf	pow@sign^(0+128)
  8892  0003' 0800'              	movf	(pow@x+2)^(0+128),w
  8893  0004' 0400'              	iorwf	(pow@x+1)^(0+128),w
  8894  0005' 0400'              	iorwf	pow@x^(0+128),w
  8895  0006' 1D03               	skipz
  8896  0007' 2800'              	goto	l5339
  8897  0008' 3000               	movlw	0
  8898  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  8899  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  8900  000B' 0080'              	movwf	___ftge@ff1
  8901  000C' 3000               	movlw	0
  8902  000D' 0081'              	movwf	___ftge@ff1+1
  8903  000E' 3000               	movlw	0
  8904  000F' 0082'              	movwf	___ftge@ff1+2
  8905  0010' 1683               	bsf	3,5	;RP0=1, select bank1
  8906  0011' 1303               	bcf	3,6	;RP1=0, select bank1
  8907  0012' 0800'              	movf	pow@y^(0+128),w
  8908  0013' 1283               	bcf	3,5	;RP0=0, select bank0
  8909  0014' 1303               	bcf	3,6	;RP1=0, select bank0
  8910  0015' 0083'              	movwf	___ftge@ff2
  8911  0016' 1683               	bsf	3,5	;RP0=1, select bank1
  8912  0017' 1303               	bcf	3,6	;RP1=0, select bank1
  8913  0018' 0800'              	movf	(pow@y+1)^(0+128),w
  8914  0019' 1283               	bcf	3,5	;RP0=0, select bank0
  8915  001A' 1303               	bcf	3,6	;RP1=0, select bank0
  8916  001B' 0084'              	movwf	___ftge@ff2+1
  8917  001C' 1683               	bsf	3,5	;RP0=1, select bank1
  8918  001D' 1303               	bcf	3,6	;RP1=0, select bank1
  8919  001E' 0800'              	movf	(pow@y+2)^(0+128),w
  8920  001F' 1283               	bcf	3,5	;RP0=0, select bank0
  8921  0020' 1303               	bcf	3,6	;RP1=0, select bank0
  8922  0021' 0085'              	movwf	___ftge@ff2+2
  8923  0022' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  8924  0027' 1C03               	btfss	3,0
  8925  0028' 2800'              	goto	l852
  8926  0029' 3021               	movlw	33
  8927  002A' 0080'              	movwf	_errno
  8928  002B' 3000               	movlw	0
  8929  002C' 0081'              	movwf	_errno+1
  8930  002D'                    l852:	
  8931  002D' 3000               	movlw	0
  8932  002E' 1683               	bsf	3,5	;RP0=1, select bank1
  8933  002F' 1303               	bcf	3,6	;RP1=0, select bank1
  8934  0030' 0080'              	movwf	?_pow^(0+128)
  8935  0031' 3000               	movlw	0
  8936  0032' 0080'              	movwf	(?_pow+1)^(0+128)
  8937  0033' 3000               	movlw	0
  8938  0034' 0080'              	movwf	(?_pow+2)^(0+128)
  8939  0035' 0008               	return
  8940  0036'                    l5339:	
  8941  0036' 0800'              	movf	(pow@y+2)^(0+128),w
  8942  0037' 0400'              	iorwf	(pow@y+1)^(0+128),w
  8943  0038' 0400'              	iorwf	pow@y^(0+128),w
  8944  0039' 1D03               	skipz
  8945  003A' 2800'              	goto	l5345
  8946  003B' 3000               	movlw	0
  8947  003C' 0080'              	movwf	?_pow^(0+128)
  8948  003D' 3080               	movlw	128
  8949  003E' 0080'              	movwf	(?_pow+1)^(0+128)
  8950  003F' 303F               	movlw	63
  8951  0040' 0080'              	movwf	(?_pow+2)^(0+128)
  8952  0041' 0008               	return
  8953  0042'                    l5345:	
  8954  0042' 0800'              	movf	pow@x^(0+128),w
  8955  0043' 1283               	bcf	3,5	;RP0=0, select bank0
  8956  0044' 1303               	bcf	3,6	;RP1=0, select bank0
  8957  0045' 0080'              	movwf	___ftge@ff1
  8958  0046' 1683               	bsf	3,5	;RP0=1, select bank1
  8959  0047' 1303               	bcf	3,6	;RP1=0, select bank1
  8960  0048' 0800'              	movf	(pow@x+1)^(0+128),w
  8961  0049' 1283               	bcf	3,5	;RP0=0, select bank0
  8962  004A' 1303               	bcf	3,6	;RP1=0, select bank0
  8963  004B' 0081'              	movwf	___ftge@ff1+1
  8964  004C' 1683               	bsf	3,5	;RP0=1, select bank1
  8965  004D' 1303               	bcf	3,6	;RP1=0, select bank1
  8966  004E' 0800'              	movf	(pow@x+2)^(0+128),w
  8967  004F' 1283               	bcf	3,5	;RP0=0, select bank0
  8968  0050' 1303               	bcf	3,6	;RP1=0, select bank0
  8969  0051' 0082'              	movwf	___ftge@ff1+2
  8970  0052' 3000               	movlw	0
  8971  0053' 0083'              	movwf	___ftge@ff2
  8972  0054' 3000               	movlw	0
  8973  0055' 0084'              	movwf	___ftge@ff2+1
  8974  0056' 3000               	movlw	0
  8975  0057' 0085'              	movwf	___ftge@ff2+2
  8976  0058' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  8977  005D' 1803               	btfsc	3,0
  8978  005E' 2800'              	goto	l5357
  8979  005F' 1683               	bsf	3,5	;RP0=1, select bank1
  8980  0060' 1303               	bcf	3,6	;RP1=0, select bank1
  8981  0061' 0800'              	movf	pow@y^(0+128),w
  8982  0062' 1283               	bcf	3,5	;RP0=0, select bank0
  8983  0063' 1303               	bcf	3,6	;RP1=0, select bank0
  8984  0064' 00A9'              	movwf	___fttol@f1
  8985  0065' 1683               	bsf	3,5	;RP0=1, select bank1
  8986  0066' 1303               	bcf	3,6	;RP1=0, select bank1
  8987  0067' 0800'              	movf	(pow@y+1)^(0+128),w
  8988  0068' 1283               	bcf	3,5	;RP0=0, select bank0
  8989  0069' 1303               	bcf	3,6	;RP1=0, select bank0
  8990  006A' 00AA'              	movwf	___fttol@f1+1
  8991  006B' 1683               	bsf	3,5	;RP0=1, select bank1
  8992  006C' 1303               	bcf	3,6	;RP1=0, select bank1
  8993  006D' 0800'              	movf	(pow@y+2)^(0+128),w
  8994  006E' 1283               	bcf	3,5	;RP0=0, select bank0
  8995  006F' 1303               	bcf	3,6	;RP1=0, select bank0
  8996  0070' 00AB'              	movwf	___fttol@f1+2
  8997  0071' 120A' 118A' 2000' 120A' 118A' 	fcall	___fttol
  8998  0076' 1283               	bcf	3,5	;RP0=0, select bank0
  8999  0077' 1303               	bcf	3,6	;RP1=0, select bank0
  9000  0078' 082C'              	movf	?___fttol+3,w
  9001  0079' 1683               	bsf	3,5	;RP0=1, select bank1
  9002  007A' 1303               	bcf	3,6	;RP1=0, select bank1
  9003  007B' 0080'              	movwf	(pow@yi+3)^(0+128)
  9004  007C' 1283               	bcf	3,5	;RP0=0, select bank0
  9005  007D' 1303               	bcf	3,6	;RP1=0, select bank0
  9006  007E' 082B'              	movf	?___fttol+2,w
  9007  007F' 1683               	bsf	3,5	;RP0=1, select bank1
  9008  0080' 1303               	bcf	3,6	;RP1=0, select bank1
  9009  0081' 0080'              	movwf	(pow@yi+2)^(0+128)
  9010  0082' 1283               	bcf	3,5	;RP0=0, select bank0
  9011  0083' 1303               	bcf	3,6	;RP1=0, select bank0
  9012  0084' 082A'              	movf	?___fttol+1,w
  9013  0085' 1683               	bsf	3,5	;RP0=1, select bank1
  9014  0086' 1303               	bcf	3,6	;RP1=0, select bank1
  9015  0087' 0080'              	movwf	(pow@yi+1)^(0+128)
  9016  0088' 1283               	bcf	3,5	;RP0=0, select bank0
  9017  0089' 1303               	bcf	3,6	;RP1=0, select bank0
  9018  008A' 0829'              	movf	?___fttol,w
  9019  008B' 1683               	bsf	3,5	;RP0=1, select bank1
  9020  008C' 1303               	bcf	3,6	;RP1=0, select bank1
  9021  008D' 0080'              	movwf	pow@yi^(0+128)
  9022  008E' 0800'              	movf	(pow@yi+3)^(0+128),w
  9023  008F' 1283               	bcf	3,5	;RP0=0, select bank0
  9024  0090' 1303               	bcf	3,6	;RP1=0, select bank0
  9025  0091' 0088'              	movwf	___lltoft@c+3
  9026  0092' 1683               	bsf	3,5	;RP0=1, select bank1
  9027  0093' 1303               	bcf	3,6	;RP1=0, select bank1
  9028  0094' 0800'              	movf	(pow@yi+2)^(0+128),w
  9029  0095' 1283               	bcf	3,5	;RP0=0, select bank0
  9030  0096' 1303               	bcf	3,6	;RP1=0, select bank0
  9031  0097' 0087'              	movwf	___lltoft@c+2
  9032  0098' 1683               	bsf	3,5	;RP0=1, select bank1
  9033  0099' 1303               	bcf	3,6	;RP1=0, select bank1
  9034  009A' 0800'              	movf	(pow@yi+1)^(0+128),w
  9035  009B' 1283               	bcf	3,5	;RP0=0, select bank0
  9036  009C' 1303               	bcf	3,6	;RP1=0, select bank0
  9037  009D' 0086'              	movwf	___lltoft@c+1
  9038  009E' 1683               	bsf	3,5	;RP0=1, select bank1
  9039  009F' 1303               	bcf	3,6	;RP1=0, select bank1
  9040  00A0' 0800'              	movf	pow@yi^(0+128),w
  9041  00A1' 1283               	bcf	3,5	;RP0=0, select bank0
  9042  00A2' 1303               	bcf	3,6	;RP1=0, select bank0
  9043  00A3' 0085'              	movwf	___lltoft@c
  9044  00A4' 120A' 118A' 2000' 120A' 118A' 	fcall	___lltoft
  9045  00A9' 1683               	bsf	3,5	;RP0=1, select bank1
  9046  00AA' 1303               	bcf	3,6	;RP1=0, select bank1
  9047  00AB' 0800'              	movf	(pow@y+2)^(0+128),w
  9048  00AC' 1283               	bcf	3,5	;RP0=0, select bank0
  9049  00AD' 1303               	bcf	3,6	;RP1=0, select bank0
  9050  00AE' 0607'              	xorwf	?___lltoft+2,w
  9051  00AF' 1D03               	skipz
  9052  00B0' 2800'              	goto	u7605
  9053  00B1' 1683               	bsf	3,5	;RP0=1, select bank1
  9054  00B2' 1303               	bcf	3,6	;RP1=0, select bank1
  9055  00B3' 0800'              	movf	(pow@y+1)^(0+128),w
  9056  00B4' 1283               	bcf	3,5	;RP0=0, select bank0
  9057  00B5' 1303               	bcf	3,6	;RP1=0, select bank0
  9058  00B6' 0606'              	xorwf	?___lltoft+1,w
  9059  00B7' 1D03               	skipz
  9060  00B8' 2800'              	goto	u7605
  9061  00B9' 1683               	bsf	3,5	;RP0=1, select bank1
  9062  00BA' 1303               	bcf	3,6	;RP1=0, select bank1
  9063  00BB' 0800'              	movf	pow@y^(0+128),w
  9064  00BC' 1283               	bcf	3,5	;RP0=0, select bank0
  9065  00BD' 1303               	bcf	3,6	;RP1=0, select bank0
  9066  00BE' 0605'              	xorwf	?___lltoft,w
  9067  00BF'                    u7605:	
  9068  00BF' 1903               	skipnz
  9069  00C0' 2800'              	goto	l5353
  9070  00C1' 3021               	movlw	33
  9071  00C2' 0080'              	movwf	_errno
  9072  00C3' 3000               	movlw	0
  9073  00C4' 0081'              	movwf	_errno+1
  9074  00C5' 3000               	movlw	0
  9075  00C6' 1683               	bsf	3,5	;RP0=1, select bank1
  9076  00C7' 1303               	bcf	3,6	;RP1=0, select bank1
  9077  00C8' 0080'              	movwf	?_pow^(0+128)
  9078  00C9' 3000               	movlw	0
  9079  00CA' 0080'              	movwf	(?_pow+1)^(0+128)
  9080  00CB' 3000               	movlw	0
  9081  00CC' 0080'              	movwf	(?_pow+2)^(0+128)
  9082  00CD' 0008               	return
  9083  00CE'                    l5353:	
  9084  00CE' 1683               	bsf	3,5	;RP0=1, select bank1
  9085  00CF' 1303               	bcf	3,6	;RP1=0, select bank1
  9086  00D0' 0800'              	movf	pow@yi^(0+128),w
  9087  00D1' 3901               	andlw	1
  9088  00D2' 1283               	bcf	3,5	;RP0=0, select bank0
  9089  00D3' 1303               	bcf	3,6	;RP1=0, select bank0
  9090  00D4' 00CF'              	movwf	??_pow
  9091  00D5' 084F'              	movf	??_pow,w
  9092  00D6' 1683               	bsf	3,5	;RP0=1, select bank1
  9093  00D7' 1303               	bcf	3,6	;RP1=0, select bank1
  9094  00D8' 0080'              	movwf	pow@sign^(0+128)
  9095  00D9' 0800'              	movf	pow@x^(0+128),w
  9096  00DA' 0084'              	movwf	___ftneg@f1
  9097  00DB' 0800'              	movf	(pow@x+1)^(0+128),w
  9098  00DC' 0085'              	movwf	___ftneg@f1+1
  9099  00DD' 0800'              	movf	(pow@x+2)^(0+128),w
  9100  00DE' 0086'              	movwf	___ftneg@f1+2
  9101  00DF' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftneg
  9102  00E4' 0804'              	movf	?___ftneg,w
  9103  00E5' 1683               	bsf	3,5	;RP0=1, select bank1
  9104  00E6' 1303               	bcf	3,6	;RP1=0, select bank1
  9105  00E7' 0080'              	movwf	pow@x^(0+128)
  9106  00E8' 0805'              	movf	?___ftneg+1,w
  9107  00E9' 0080'              	movwf	(pow@x+1)^(0+128)
  9108  00EA' 0806'              	movf	?___ftneg+2,w
  9109  00EB' 0080'              	movwf	(pow@x+2)^(0+128)
  9110  00EC'                    l5357:	
  9111  00EC' 1683               	bsf	3,5	;RP0=1, select bank1
  9112  00ED' 1303               	bcf	3,6	;RP1=0, select bank1
  9113  00EE' 0800'              	movf	pow@x^(0+128),w
  9114  00EF' 1283               	bcf	3,5	;RP0=0, select bank0
  9115  00F0' 1303               	bcf	3,6	;RP1=0, select bank0
  9116  00F1' 00C7'              	movwf	log@x
  9117  00F2' 1683               	bsf	3,5	;RP0=1, select bank1
  9118  00F3' 1303               	bcf	3,6	;RP1=0, select bank1
  9119  00F4' 0800'              	movf	(pow@x+1)^(0+128),w
  9120  00F5' 1283               	bcf	3,5	;RP0=0, select bank0
  9121  00F6' 1303               	bcf	3,6	;RP1=0, select bank0
  9122  00F7' 00C8'              	movwf	log@x+1
  9123  00F8' 1683               	bsf	3,5	;RP0=1, select bank1
  9124  00F9' 1303               	bcf	3,6	;RP1=0, select bank1
  9125  00FA' 0800'              	movf	(pow@x+2)^(0+128),w
  9126  00FB' 1283               	bcf	3,5	;RP0=0, select bank0
  9127  00FC' 1303               	bcf	3,6	;RP1=0, select bank0
  9128  00FD' 00C9'              	movwf	log@x+2
  9129  00FE' 120A' 118A' 2000' 120A' 118A' 	fcall	_log
  9130  0103' 1283               	bcf	3,5	;RP0=0, select bank0
  9131  0104' 1303               	bcf	3,6	;RP1=0, select bank0
  9132  0105' 0847'              	movf	?_log,w
  9133  0106' 1683               	bsf	3,5	;RP0=1, select bank1
  9134  0107' 1303               	bcf	3,6	;RP1=0, select bank1
  9135  0108' 0080'              	movwf	_pow$1020^(0+128)
  9136  0109' 1283               	bcf	3,5	;RP0=0, select bank0
  9137  010A' 1303               	bcf	3,6	;RP1=0, select bank0
  9138  010B' 0848'              	movf	?_log+1,w
  9139  010C' 1683               	bsf	3,5	;RP0=1, select bank1
  9140  010D' 1303               	bcf	3,6	;RP1=0, select bank1
  9141  010E' 0080'              	movwf	(_pow$1020+1)^(0+128)
  9142  010F' 1283               	bcf	3,5	;RP0=0, select bank0
  9143  0110' 1303               	bcf	3,6	;RP1=0, select bank0
  9144  0111' 0849'              	movf	?_log+2,w
  9145  0112' 1683               	bsf	3,5	;RP0=1, select bank1
  9146  0113' 1303               	bcf	3,6	;RP1=0, select bank1
  9147  0114' 0080'              	movwf	(_pow$1020+2)^(0+128)
  9148  0115' 0800'              	movf	pow@y^(0+128),w
  9149  0116' 1283               	bcf	3,5	;RP0=0, select bank0
  9150  0117' 1303               	bcf	3,6	;RP1=0, select bank0
  9151  0118' 0090'              	movwf	___ftmul@f1
  9152  0119' 1683               	bsf	3,5	;RP0=1, select bank1
  9153  011A' 1303               	bcf	3,6	;RP1=0, select bank1
  9154  011B' 0800'              	movf	(pow@y+1)^(0+128),w
  9155  011C' 1283               	bcf	3,5	;RP0=0, select bank0
  9156  011D' 1303               	bcf	3,6	;RP1=0, select bank0
  9157  011E' 0091'              	movwf	___ftmul@f1+1
  9158  011F' 1683               	bsf	3,5	;RP0=1, select bank1
  9159  0120' 1303               	bcf	3,6	;RP1=0, select bank1
  9160  0121' 0800'              	movf	(pow@y+2)^(0+128),w
  9161  0122' 1283               	bcf	3,5	;RP0=0, select bank0
  9162  0123' 1303               	bcf	3,6	;RP1=0, select bank0
  9163  0124' 0092'              	movwf	___ftmul@f1+2
  9164  0125' 1683               	bsf	3,5	;RP0=1, select bank1
  9165  0126' 1303               	bcf	3,6	;RP1=0, select bank1
  9166  0127' 0800'              	movf	_pow$1020^(0+128),w
  9167  0128' 1283               	bcf	3,5	;RP0=0, select bank0
  9168  0129' 1303               	bcf	3,6	;RP1=0, select bank0
  9169  012A' 0093'              	movwf	___ftmul@f2
  9170  012B' 1683               	bsf	3,5	;RP0=1, select bank1
  9171  012C' 1303               	bcf	3,6	;RP1=0, select bank1
  9172  012D' 0800'              	movf	(_pow$1020+1)^(0+128),w
  9173  012E' 1283               	bcf	3,5	;RP0=0, select bank0
  9174  012F' 1303               	bcf	3,6	;RP1=0, select bank0
  9175  0130' 0094'              	movwf	___ftmul@f2+1
  9176  0131' 1683               	bsf	3,5	;RP0=1, select bank1
  9177  0132' 1303               	bcf	3,6	;RP1=0, select bank1
  9178  0133' 0800'              	movf	(_pow$1020+2)^(0+128),w
  9179  0134' 1283               	bcf	3,5	;RP0=0, select bank0
  9180  0135' 1303               	bcf	3,6	;RP1=0, select bank0
  9181  0136' 0095'              	movwf	___ftmul@f2+2
  9182  0137' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  9183  013C' 1283               	bcf	3,5	;RP0=0, select bank0
  9184  013D' 1303               	bcf	3,6	;RP1=0, select bank0
  9185  013E' 0810'              	movf	?___ftmul,w
  9186  013F' 1683               	bsf	3,5	;RP0=1, select bank1
  9187  0140' 1303               	bcf	3,6	;RP1=0, select bank1
  9188  0141' 0080'              	movwf	_pow$1021^(0+128)
  9189  0142' 1283               	bcf	3,5	;RP0=0, select bank0
  9190  0143' 1303               	bcf	3,6	;RP1=0, select bank0
  9191  0144' 0811'              	movf	?___ftmul+1,w
  9192  0145' 1683               	bsf	3,5	;RP0=1, select bank1
  9193  0146' 1303               	bcf	3,6	;RP1=0, select bank1
  9194  0147' 0080'              	movwf	(_pow$1021+1)^(0+128)
  9195  0148' 1283               	bcf	3,5	;RP0=0, select bank0
  9196  0149' 1303               	bcf	3,6	;RP1=0, select bank0
  9197  014A' 0812'              	movf	?___ftmul+2,w
  9198  014B' 1683               	bsf	3,5	;RP0=1, select bank1
  9199  014C' 1303               	bcf	3,6	;RP1=0, select bank1
  9200  014D' 0080'              	movwf	(_pow$1021+2)^(0+128)
  9201  014E' 0800'              	movf	_pow$1021^(0+128),w
  9202  014F' 0080'              	movwf	exp@x^(0+128)
  9203  0150' 0800'              	movf	(_pow$1021+1)^(0+128),w
  9204  0151' 0080'              	movwf	(exp@x+1)^(0+128)
  9205  0152' 0800'              	movf	(_pow$1021+2)^(0+128),w
  9206  0153' 0080'              	movwf	(exp@x+2)^(0+128)
  9207  0154' 120A' 118A' 2000' 120A' 118A' 	fcall	_exp
  9208  0159' 1683               	bsf	3,5	;RP0=1, select bank1
  9209  015A' 1303               	bcf	3,6	;RP1=0, select bank1
  9210  015B' 0800'              	movf	?_exp^(0+128),w
  9211  015C' 0080'              	movwf	pow@x^(0+128)
  9212  015D' 0800'              	movf	(?_exp+1)^(0+128),w
  9213  015E' 0080'              	movwf	(pow@x+1)^(0+128)
  9214  015F' 0800'              	movf	(?_exp+2)^(0+128),w
  9215  0160' 0080'              	movwf	(pow@x+2)^(0+128)
  9216  0161' 0800'              	movf	pow@sign^(0+128),w
  9217  0162' 1903               	btfsc	3,2
  9218  0163' 0008               	return
  9219  0164' 0800'              	movf	pow@x^(0+128),w
  9220  0165' 0084'              	movwf	___ftneg@f1
  9221  0166' 0800'              	movf	(pow@x+1)^(0+128),w
  9222  0167' 0085'              	movwf	___ftneg@f1+1
  9223  0168' 0800'              	movf	(pow@x+2)^(0+128),w
  9224  0169' 0086'              	movwf	___ftneg@f1+2
  9225  016A' 120A' 118A' 2000'  	fcall	___ftneg
  9226  016D' 0804'              	movf	?___ftneg,w
  9227  016E' 1683               	bsf	3,5	;RP0=1, select bank1
  9228  016F' 1303               	bcf	3,6	;RP1=0, select bank1
  9229  0170' 0080'              	movwf	?_pow^(0+128)
  9230  0171' 0805'              	movf	?___ftneg+1,w
  9231  0172' 0080'              	movwf	(?_pow+1)^(0+128)
  9232  0173' 0806'              	movf	?___ftneg+2,w
  9233  0174' 0080'              	movwf	(?_pow+2)^(0+128)
  9234  0175' 0008               	return
  9235  0176'                    __end_of_pow:	
  9236                           
  9237                           	psect	text18
  9238  0000'                    __ptext18:	
  9239 ;; *************** function _log *****************
  9240 ;; Defined at:
  9241 ;;		line 5 in file "/opt/microchip/xc8/v1.33/sources/common/log.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;  x               3   71[BANK0 ] unsigned char 
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;  exponent        2   75[BANK0 ] int 
  9246 ;; Return value:  Size  Location     Type
  9247 ;;                  3   71[BANK0 ] int 
  9248 ;; Registers used:
  9249 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9255 ;;      Params:         0       3       0       0       0
  9256 ;;      Locals:         0       2       0       0       0
  9257 ;;      Temps:          0       1       0       0       0
  9258 ;;      Totals:         0       6       0       0       0
  9259 ;;Total ram usage:        6 bytes
  9260 ;; Hardware stack levels used:    1
  9261 ;; Hardware stack levels required when called:    4
  9262 ;; This function calls:
  9263 ;;		___awtoft
  9264 ;;		___ftadd
  9265 ;;		___ftge
  9266 ;;		___ftmul
  9267 ;;		_eval_poly
  9268 ;;		_frexp
  9269 ;; This function is called by:
  9270 ;;		_pow
  9271 ;; This function uses a non-reentrant model
  9272 ;;
  9273                           
  9274                           
  9275                           ;psect for function _log
  9276  0000'                    _log:	
  9277                           
  9278                           ;incstack = 0
  9279                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9280  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9281  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9282  0002' 0847'              	movf	log@x,w
  9283  0003' 0080'              	movwf	___ftge@ff1
  9284  0004' 0848'              	movf	log@x+1,w
  9285  0005' 0081'              	movwf	___ftge@ff1+1
  9286  0006' 0849'              	movf	log@x+2,w
  9287  0007' 0082'              	movwf	___ftge@ff1+2
  9288  0008' 3000               	movlw	0
  9289  0009' 0083'              	movwf	___ftge@ff2
  9290  000A' 3000               	movlw	0
  9291  000B' 0084'              	movwf	___ftge@ff2+1
  9292  000C' 3000               	movlw	0
  9293  000D' 0085'              	movwf	___ftge@ff2+2
  9294  000E' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  9295  0013' 1803               	btfsc	3,0
  9296  0014' 2800'              	goto	l5021
  9297  0015' 3021               	movlw	33
  9298  0016' 0080'              	movwf	_errno
  9299  0017' 3000               	movlw	0
  9300  0018' 0081'              	movwf	_errno+1
  9301  0019' 3000               	movlw	0
  9302  001A' 1283               	bcf	3,5	;RP0=0, select bank0
  9303  001B' 1303               	bcf	3,6	;RP1=0, select bank0
  9304  001C' 00C7'              	movwf	?_log
  9305  001D' 3000               	movlw	0
  9306  001E' 00C8'              	movwf	?_log+1
  9307  001F' 3000               	movlw	0
  9308  0020' 00C9'              	movwf	?_log+2
  9309  0021' 0008               	return
  9310  0022'                    l5021:	
  9311  0022' 1283               	bcf	3,5	;RP0=0, select bank0
  9312  0023' 1303               	bcf	3,6	;RP1=0, select bank0
  9313  0024' 0849'              	movf	log@x+2,w
  9314  0025' 0448'              	iorwf	log@x+1,w
  9315  0026' 0447'              	iorwf	log@x,w
  9316  0027' 1D03               	skipz
  9317  0028' 2800'              	goto	l5027
  9318  0029' 3022               	movlw	34
  9319  002A' 0080'              	movwf	_errno
  9320  002B' 3000               	movlw	0
  9321  002C' 0081'              	movwf	_errno+1
  9322  002D' 3000               	movlw	0
  9323  002E' 00C7'              	movwf	?_log
  9324  002F' 3000               	movlw	0
  9325  0030' 00C8'              	movwf	?_log+1
  9326  0031' 3000               	movlw	0
  9327  0032' 00C9'              	movwf	?_log+2
  9328  0033' 0008               	return
  9329  0034'                    l5027:	
  9330  0034' 3000               	movlw	0
  9331  0035' 00B0'              	movwf	___ftadd@f1
  9332  0036' 3080               	movlw	128
  9333  0037' 00B1'              	movwf	___ftadd@f1+1
  9334  0038' 30BF               	movlw	191
  9335  0039' 00B2'              	movwf	___ftadd@f1+2
  9336  003A' 3000               	movlw	0
  9337  003B' 0090'              	movwf	___ftmul@f1
  9338  003C' 3000               	movlw	0
  9339  003D' 0091'              	movwf	___ftmul@f1+1
  9340  003E' 3040               	movlw	64
  9341  003F' 0092'              	movwf	___ftmul@f1+2
  9342  0040' 3000'              	movlw	log@exponent& (0+255)
  9343  0041' 00CA'              	movwf	??_log
  9344  0042' 084A'              	movf	??_log,w
  9345  0043' 0087'              	movwf	frexp@eptr
  9346  0044' 0847'              	movf	log@x,w
  9347  0045' 0084'              	movwf	frexp@value
  9348  0046' 0848'              	movf	log@x+1,w
  9349  0047' 0085'              	movwf	frexp@value+1
  9350  0048' 0849'              	movf	log@x+2,w
  9351  0049' 0086'              	movwf	frexp@value+2
  9352  004A' 120A' 118A' 2000' 120A' 118A' 	fcall	_frexp
  9353  004F' 0804'              	movf	?_frexp,w
  9354  0050' 1283               	bcf	3,5	;RP0=0, select bank0
  9355  0051' 1303               	bcf	3,6	;RP1=0, select bank0
  9356  0052' 0093'              	movwf	___ftmul@f2
  9357  0053' 0805'              	movf	?_frexp+1,w
  9358  0054' 0094'              	movwf	___ftmul@f2+1
  9359  0055' 0806'              	movf	?_frexp+2,w
  9360  0056' 0095'              	movwf	___ftmul@f2+2
  9361  0057' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  9362  005C' 1283               	bcf	3,5	;RP0=0, select bank0
  9363  005D' 1303               	bcf	3,6	;RP1=0, select bank0
  9364  005E' 0810'              	movf	?___ftmul,w
  9365  005F' 00B3'              	movwf	___ftadd@f2
  9366  0060' 0811'              	movf	?___ftmul+1,w
  9367  0061' 00B4'              	movwf	___ftadd@f2+1
  9368  0062' 0812'              	movf	?___ftmul+2,w
  9369  0063' 00B5'              	movwf	___ftadd@f2+2
  9370  0064' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftadd
  9371  0069' 1283               	bcf	3,5	;RP0=0, select bank0
  9372  006A' 1303               	bcf	3,6	;RP1=0, select bank0
  9373  006B' 0830'              	movf	?___ftadd,w
  9374  006C' 00C7'              	movwf	log@x
  9375  006D' 0831'              	movf	?___ftadd+1,w
  9376  006E' 00C8'              	movwf	log@x+1
  9377  006F' 0832'              	movf	?___ftadd+2,w
  9378  0070' 00C9'              	movwf	log@x+2
  9379  0071' 30FF               	movlw	255
  9380  0072' 07CB'              	addwf	log@exponent,f
  9381  0073' 1803               	skipnc
  9382  0074' 0ACC'              	incf	log@exponent+1,f
  9383  0075' 30FF               	movlw	255
  9384  0076' 07CC'              	addwf	log@exponent+1,f
  9385  0077' 0847'              	movf	log@x,w
  9386  0078' 00BD'              	movwf	eval_poly@x
  9387  0079' 0848'              	movf	log@x+1,w
  9388  007A' 00BE'              	movwf	eval_poly@x+1
  9389  007B' 0849'              	movf	log@x+2,w
  9390  007C' 00BF'              	movwf	eval_poly@x+2
  9391  007D' 3095               	movlw	(log@coeff-__stringbase)& (0+255)
  9392  007E' 00CA'              	movwf	??_log
  9393  007F' 084A'              	movf	??_log,w
  9394  0080' 00C0'              	movwf	eval_poly@d
  9395  0081' 3008               	movlw	8
  9396  0082' 00C1'              	movwf	eval_poly@n
  9397  0083' 3000               	movlw	0
  9398  0084' 00C2'              	movwf	eval_poly@n+1
  9399  0085' 120A' 118A' 2000' 120A' 118A' 	fcall	_eval_poly
  9400  008A' 1283               	bcf	3,5	;RP0=0, select bank0
  9401  008B' 1303               	bcf	3,6	;RP1=0, select bank0
  9402  008C' 083D'              	movf	?_eval_poly,w
  9403  008D' 00C7'              	movwf	log@x
  9404  008E' 083E'              	movf	?_eval_poly+1,w
  9405  008F' 00C8'              	movwf	log@x+1
  9406  0090' 083F'              	movf	?_eval_poly+2,w
  9407  0091' 00C9'              	movwf	log@x+2
  9408  0092' 0847'              	movf	log@x,w
  9409  0093' 00B0'              	movwf	___ftadd@f1
  9410  0094' 0848'              	movf	log@x+1,w
  9411  0095' 00B1'              	movwf	___ftadd@f1+1
  9412  0096' 0849'              	movf	log@x+2,w
  9413  0097' 00B2'              	movwf	___ftadd@f1+2
  9414  0098' 3072               	movlw	114
  9415  0099' 0090'              	movwf	___ftmul@f1
  9416  009A' 3031               	movlw	49
  9417  009B' 0091'              	movwf	___ftmul@f1+1
  9418  009C' 303F               	movlw	63
  9419  009D' 0092'              	movwf	___ftmul@f1+2
  9420  009E' 084C'              	movf	log@exponent+1,w
  9421  009F' 0186'              	clrf	___awtoft@c+1
  9422  00A0' 0786'              	addwf	___awtoft@c+1,f
  9423  00A1' 084B'              	movf	log@exponent,w
  9424  00A2' 0185'              	clrf	___awtoft@c
  9425  00A3' 0785'              	addwf	___awtoft@c,f
  9426  00A4' 120A' 118A' 2000' 120A' 118A' 	fcall	___awtoft
  9427  00A9' 1283               	bcf	3,5	;RP0=0, select bank0
  9428  00AA' 1303               	bcf	3,6	;RP1=0, select bank0
  9429  00AB' 0805'              	movf	?___awtoft,w
  9430  00AC' 0093'              	movwf	___ftmul@f2
  9431  00AD' 0806'              	movf	?___awtoft+1,w
  9432  00AE' 0094'              	movwf	___ftmul@f2+1
  9433  00AF' 0807'              	movf	?___awtoft+2,w
  9434  00B0' 0095'              	movwf	___ftmul@f2+2
  9435  00B1' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  9436  00B6' 1283               	bcf	3,5	;RP0=0, select bank0
  9437  00B7' 1303               	bcf	3,6	;RP1=0, select bank0
  9438  00B8' 0810'              	movf	?___ftmul,w
  9439  00B9' 00B3'              	movwf	___ftadd@f2
  9440  00BA' 0811'              	movf	?___ftmul+1,w
  9441  00BB' 00B4'              	movwf	___ftadd@f2+1
  9442  00BC' 0812'              	movf	?___ftmul+2,w
  9443  00BD' 00B5'              	movwf	___ftadd@f2+2
  9444  00BE' 120A' 118A' 2000'  	fcall	___ftadd
  9445  00C1' 1283               	bcf	3,5	;RP0=0, select bank0
  9446  00C2' 1303               	bcf	3,6	;RP1=0, select bank0
  9447  00C3' 0830'              	movf	?___ftadd,w
  9448  00C4' 00C7'              	movwf	?_log
  9449  00C5' 0831'              	movf	?___ftadd+1,w
  9450  00C6' 00C8'              	movwf	?_log+1
  9451  00C7' 0832'              	movf	?___ftadd+2,w
  9452  00C8' 00C9'              	movwf	?_log+2
  9453  00C9' 0008               	return
  9454  00CA'                    __end_of_log:	
  9455                           
  9456                           	psect	text19
  9457  0000'                    __ptext19:	
  9458 ;; *************** function _exp *****************
  9459 ;; Defined at:
  9460 ;;		line 12 in file "/opt/microchip/xc8/v1.33/sources/common/exp.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;  x               3    3[BANK1 ] int 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;  exponent        2   12[BANK1 ] int 
  9465 ;;  sign            1   14[BANK1 ] unsigned char 
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  3    3[BANK1 ] unsigned char 
  9468 ;; Registers used:
  9469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9470 ;; Tracked objects:
  9471 ;;		On entry : 0/0
  9472 ;;		On exit  : 0/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9475 ;;      Params:         0       0       3       0       0
  9476 ;;      Locals:         0       0       9       0       0
  9477 ;;      Temps:          0       1       0       0       0
  9478 ;;      Totals:         0       1      12       0       0
  9479 ;;Total ram usage:       13 bytes
  9480 ;; Hardware stack levels used:    1
  9481 ;; Hardware stack levels required when called:    4
  9482 ;; This function calls:
  9483 ;;		___awtoft
  9484 ;;		___ftdiv
  9485 ;;		___ftge
  9486 ;;		___ftmul
  9487 ;;		___ftneg
  9488 ;;		___ftsub
  9489 ;;		___fttol
  9490 ;;		_eval_poly
  9491 ;;		_floor
  9492 ;;		_ldexp
  9493 ;; This function is called by:
  9494 ;;		_temp_voltage
  9495 ;;		_pow
  9496 ;; This function uses a non-reentrant model
  9497 ;;
  9498                           
  9499                           
  9500                           ;psect for function _exp
  9501  0000'                    _exp:	
  9502                           
  9503                           ;incstack = 0
  9504                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9505  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  9506  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  9507  0002' 0800'              	movf	(exp@x+2)^(0+128),w
  9508  0003' 0400'              	iorwf	(exp@x+1)^(0+128),w
  9509  0004' 0400'              	iorwf	exp@x^(0+128),w
  9510  0005' 1D03               	skipz
  9511  0006' 2800'              	goto	l4719
  9512  0007' 3000               	movlw	0
  9513  0008' 0080'              	movwf	?_exp^(0+128)
  9514  0009' 3080               	movlw	128
  9515  000A' 0080'              	movwf	(?_exp+1)^(0+128)
  9516  000B' 303F               	movlw	63
  9517  000C' 0080'              	movwf	(?_exp+2)^(0+128)
  9518  000D' 0008               	return
  9519  000E'                    l4719:	
  9520  000E' 3072               	movlw	114
  9521  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  9522  0010' 1303               	bcf	3,6	;RP1=0, select bank0
  9523  0011' 0080'              	movwf	___ftge@ff1
  9524  0012' 3031               	movlw	49
  9525  0013' 0081'              	movwf	___ftge@ff1+1
  9526  0014' 3044               	movlw	68
  9527  0015' 0082'              	movwf	___ftge@ff1+2
  9528  0016' 1683               	bsf	3,5	;RP0=1, select bank1
  9529  0017' 1303               	bcf	3,6	;RP1=0, select bank1
  9530  0018' 0800'              	movf	exp@x^(0+128),w
  9531  0019' 1283               	bcf	3,5	;RP0=0, select bank0
  9532  001A' 1303               	bcf	3,6	;RP1=0, select bank0
  9533  001B' 0083'              	movwf	___ftge@ff2
  9534  001C' 1683               	bsf	3,5	;RP0=1, select bank1
  9535  001D' 1303               	bcf	3,6	;RP1=0, select bank1
  9536  001E' 0800'              	movf	(exp@x+1)^(0+128),w
  9537  001F' 1283               	bcf	3,5	;RP0=0, select bank0
  9538  0020' 1303               	bcf	3,6	;RP1=0, select bank0
  9539  0021' 0084'              	movwf	___ftge@ff2+1
  9540  0022' 1683               	bsf	3,5	;RP0=1, select bank1
  9541  0023' 1303               	bcf	3,6	;RP1=0, select bank1
  9542  0024' 0800'              	movf	(exp@x+2)^(0+128),w
  9543  0025' 1283               	bcf	3,5	;RP0=0, select bank0
  9544  0026' 1303               	bcf	3,6	;RP1=0, select bank0
  9545  0027' 0085'              	movwf	___ftge@ff2+2
  9546  0028' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  9547  002D' 1803               	btfsc	3,0
  9548  002E' 2800'              	goto	l4729
  9549  002F' 3022               	movlw	34
  9550  0030' 0080'              	movwf	_errno
  9551  0031' 3000               	movlw	0
  9552  0032' 0081'              	movwf	_errno+1
  9553  0033' 30FF               	movlw	255
  9554  0034' 1683               	bsf	3,5	;RP0=1, select bank1
  9555  0035' 1303               	bcf	3,6	;RP1=0, select bank1
  9556  0036' 0080'              	movwf	?_exp^(0+128)
  9557  0037' 307F               	movlw	127
  9558  0038' 0080'              	movwf	(?_exp+1)^(0+128)
  9559  0039' 307F               	movlw	127
  9560  003A' 0080'              	movwf	(?_exp+2)^(0+128)
  9561  003B' 0008               	return
  9562  003C'                    l4729:	
  9563  003C' 1683               	bsf	3,5	;RP0=1, select bank1
  9564  003D' 1303               	bcf	3,6	;RP1=0, select bank1
  9565  003E' 0800'              	movf	exp@x^(0+128),w
  9566  003F' 1283               	bcf	3,5	;RP0=0, select bank0
  9567  0040' 1303               	bcf	3,6	;RP1=0, select bank0
  9568  0041' 0080'              	movwf	___ftge@ff1
  9569  0042' 1683               	bsf	3,5	;RP0=1, select bank1
  9570  0043' 1303               	bcf	3,6	;RP1=0, select bank1
  9571  0044' 0800'              	movf	(exp@x+1)^(0+128),w
  9572  0045' 1283               	bcf	3,5	;RP0=0, select bank0
  9573  0046' 1303               	bcf	3,6	;RP1=0, select bank0
  9574  0047' 0081'              	movwf	___ftge@ff1+1
  9575  0048' 1683               	bsf	3,5	;RP0=1, select bank1
  9576  0049' 1303               	bcf	3,6	;RP1=0, select bank1
  9577  004A' 0800'              	movf	(exp@x+2)^(0+128),w
  9578  004B' 1283               	bcf	3,5	;RP0=0, select bank0
  9579  004C' 1303               	bcf	3,6	;RP1=0, select bank0
  9580  004D' 0082'              	movwf	___ftge@ff1+2
  9581  004E' 3049               	movlw	73
  9582  004F' 0083'              	movwf	___ftge@ff2
  9583  0050' 303A               	movlw	58
  9584  0051' 0084'              	movwf	___ftge@ff2+1
  9585  0052' 30C4               	movlw	196
  9586  0053' 0085'              	movwf	___ftge@ff2+2
  9587  0054' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  9588  0059' 1803               	btfsc	3,0
  9589  005A' 2800'              	goto	l4735
  9590  005B' 3022               	movlw	34
  9591  005C' 0080'              	movwf	_errno
  9592  005D' 3000               	movlw	0
  9593  005E' 0081'              	movwf	_errno+1
  9594  005F' 3000               	movlw	0
  9595  0060' 1683               	bsf	3,5	;RP0=1, select bank1
  9596  0061' 1303               	bcf	3,6	;RP1=0, select bank1
  9597  0062' 0080'              	movwf	?_exp^(0+128)
  9598  0063' 3000               	movlw	0
  9599  0064' 0080'              	movwf	(?_exp+1)^(0+128)
  9600  0065' 3000               	movlw	0
  9601  0066' 0080'              	movwf	(?_exp+2)^(0+128)
  9602  0067' 0008               	return
  9603  0068'                    l4735:	
  9604  0068' 1683               	bsf	3,5	;RP0=1, select bank1
  9605  0069' 1303               	bcf	3,6	;RP1=0, select bank1
  9606  006A' 0800'              	movf	exp@x^(0+128),w
  9607  006B' 1283               	bcf	3,5	;RP0=0, select bank0
  9608  006C' 1303               	bcf	3,6	;RP1=0, select bank0
  9609  006D' 0080'              	movwf	___ftge@ff1
  9610  006E' 1683               	bsf	3,5	;RP0=1, select bank1
  9611  006F' 1303               	bcf	3,6	;RP1=0, select bank1
  9612  0070' 0800'              	movf	(exp@x+1)^(0+128),w
  9613  0071' 1283               	bcf	3,5	;RP0=0, select bank0
  9614  0072' 1303               	bcf	3,6	;RP1=0, select bank0
  9615  0073' 0081'              	movwf	___ftge@ff1+1
  9616  0074' 1683               	bsf	3,5	;RP0=1, select bank1
  9617  0075' 1303               	bcf	3,6	;RP1=0, select bank1
  9618  0076' 0800'              	movf	(exp@x+2)^(0+128),w
  9619  0077' 1283               	bcf	3,5	;RP0=0, select bank0
  9620  0078' 1303               	bcf	3,6	;RP1=0, select bank0
  9621  0079' 0082'              	movwf	___ftge@ff1+2
  9622  007A' 3000               	movlw	0
  9623  007B' 0083'              	movwf	___ftge@ff2
  9624  007C' 3000               	movlw	0
  9625  007D' 0084'              	movwf	___ftge@ff2+1
  9626  007E' 3000               	movlw	0
  9627  007F' 0085'              	movwf	___ftge@ff2+2
  9628  0080' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
  9629  0085' 3000               	movlw	0
  9630  0086' 1C03               	btfss	3,0
  9631  0087' 3001               	movlw	1
  9632  0088' 1283               	bcf	3,5	;RP0=0, select bank0
  9633  0089' 1303               	bcf	3,6	;RP1=0, select bank0
  9634  008A' 00CE'              	movwf	??_exp
  9635  008B' 084E'              	movf	??_exp,w
  9636  008C' 1683               	bsf	3,5	;RP0=1, select bank1
  9637  008D' 1303               	bcf	3,6	;RP1=0, select bank1
  9638  008E' 0080'              	movwf	exp@sign^(0+128)
  9639  008F' 0800'              	movf	exp@sign^(0+128),w
  9640  0090' 1903               	btfsc	3,2
  9641  0091' 2800'              	goto	l4741
  9642  0092' 0800'              	movf	exp@x^(0+128),w
  9643  0093' 0084'              	movwf	___ftneg@f1
  9644  0094' 0800'              	movf	(exp@x+1)^(0+128),w
  9645  0095' 0085'              	movwf	___ftneg@f1+1
  9646  0096' 0800'              	movf	(exp@x+2)^(0+128),w
  9647  0097' 0086'              	movwf	___ftneg@f1+2
  9648  0098' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftneg
  9649  009D' 0804'              	movf	?___ftneg,w
  9650  009E' 1683               	bsf	3,5	;RP0=1, select bank1
  9651  009F' 1303               	bcf	3,6	;RP1=0, select bank1
  9652  00A0' 0080'              	movwf	exp@x^(0+128)
  9653  00A1' 0805'              	movf	?___ftneg+1,w
  9654  00A2' 0080'              	movwf	(exp@x+1)^(0+128)
  9655  00A3' 0806'              	movf	?___ftneg+2,w
  9656  00A4' 0080'              	movwf	(exp@x+2)^(0+128)
  9657  00A5'                    l4741:	
  9658  00A5' 30AA               	movlw	170
  9659  00A6' 1283               	bcf	3,5	;RP0=0, select bank0
  9660  00A7' 1303               	bcf	3,6	;RP1=0, select bank0
  9661  00A8' 0090'              	movwf	___ftmul@f1
  9662  00A9' 30B8               	movlw	184
  9663  00AA' 0091'              	movwf	___ftmul@f1+1
  9664  00AB' 303F               	movlw	63
  9665  00AC' 0092'              	movwf	___ftmul@f1+2
  9666  00AD' 1683               	bsf	3,5	;RP0=1, select bank1
  9667  00AE' 1303               	bcf	3,6	;RP1=0, select bank1
  9668  00AF' 0800'              	movf	exp@x^(0+128),w
  9669  00B0' 1283               	bcf	3,5	;RP0=0, select bank0
  9670  00B1' 1303               	bcf	3,6	;RP1=0, select bank0
  9671  00B2' 0093'              	movwf	___ftmul@f2
  9672  00B3' 1683               	bsf	3,5	;RP0=1, select bank1
  9673  00B4' 1303               	bcf	3,6	;RP1=0, select bank1
  9674  00B5' 0800'              	movf	(exp@x+1)^(0+128),w
  9675  00B6' 1283               	bcf	3,5	;RP0=0, select bank0
  9676  00B7' 1303               	bcf	3,6	;RP1=0, select bank0
  9677  00B8' 0094'              	movwf	___ftmul@f2+1
  9678  00B9' 1683               	bsf	3,5	;RP0=1, select bank1
  9679  00BA' 1303               	bcf	3,6	;RP1=0, select bank1
  9680  00BB' 0800'              	movf	(exp@x+2)^(0+128),w
  9681  00BC' 1283               	bcf	3,5	;RP0=0, select bank0
  9682  00BD' 1303               	bcf	3,6	;RP1=0, select bank0
  9683  00BE' 0095'              	movwf	___ftmul@f2+2
  9684  00BF' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
  9685  00C4' 1283               	bcf	3,5	;RP0=0, select bank0
  9686  00C5' 1303               	bcf	3,6	;RP1=0, select bank0
  9687  00C6' 0810'              	movf	?___ftmul,w
  9688  00C7' 1683               	bsf	3,5	;RP0=1, select bank1
  9689  00C8' 1303               	bcf	3,6	;RP1=0, select bank1
  9690  00C9' 0080'              	movwf	exp@x^(0+128)
  9691  00CA' 1283               	bcf	3,5	;RP0=0, select bank0
  9692  00CB' 1303               	bcf	3,6	;RP1=0, select bank0
  9693  00CC' 0811'              	movf	?___ftmul+1,w
  9694  00CD' 1683               	bsf	3,5	;RP0=1, select bank1
  9695  00CE' 1303               	bcf	3,6	;RP1=0, select bank1
  9696  00CF' 0080'              	movwf	(exp@x+1)^(0+128)
  9697  00D0' 1283               	bcf	3,5	;RP0=0, select bank0
  9698  00D1' 1303               	bcf	3,6	;RP1=0, select bank0
  9699  00D2' 0812'              	movf	?___ftmul+2,w
  9700  00D3' 1683               	bsf	3,5	;RP0=1, select bank1
  9701  00D4' 1303               	bcf	3,6	;RP1=0, select bank1
  9702  00D5' 0080'              	movwf	(exp@x+2)^(0+128)
  9703  00D6' 0800'              	movf	exp@x^(0+128),w
  9704  00D7' 1283               	bcf	3,5	;RP0=0, select bank0
  9705  00D8' 1303               	bcf	3,6	;RP1=0, select bank0
  9706  00D9' 00BF'              	movwf	floor@x
  9707  00DA' 1683               	bsf	3,5	;RP0=1, select bank1
  9708  00DB' 1303               	bcf	3,6	;RP1=0, select bank1
  9709  00DC' 0800'              	movf	(exp@x+1)^(0+128),w
  9710  00DD' 1283               	bcf	3,5	;RP0=0, select bank0
  9711  00DE' 1303               	bcf	3,6	;RP1=0, select bank0
  9712  00DF' 00C0'              	movwf	floor@x+1
  9713  00E0' 1683               	bsf	3,5	;RP0=1, select bank1
  9714  00E1' 1303               	bcf	3,6	;RP1=0, select bank1
  9715  00E2' 0800'              	movf	(exp@x+2)^(0+128),w
  9716  00E3' 1283               	bcf	3,5	;RP0=0, select bank0
  9717  00E4' 1303               	bcf	3,6	;RP1=0, select bank0
  9718  00E5' 00C1'              	movwf	floor@x+2
  9719  00E6' 120A' 118A' 2000' 120A' 118A' 	fcall	_floor
  9720  00EB' 1283               	bcf	3,5	;RP0=0, select bank0
  9721  00EC' 1303               	bcf	3,6	;RP1=0, select bank0
  9722  00ED' 083F'              	movf	?_floor,w
  9723  00EE' 1683               	bsf	3,5	;RP0=1, select bank1
  9724  00EF' 1303               	bcf	3,6	;RP1=0, select bank1
  9725  00F0' 0080'              	movwf	_exp$1019^(0+128)
  9726  00F1' 1283               	bcf	3,5	;RP0=0, select bank0
  9727  00F2' 1303               	bcf	3,6	;RP1=0, select bank0
  9728  00F3' 0840'              	movf	?_floor+1,w
  9729  00F4' 1683               	bsf	3,5	;RP0=1, select bank1
  9730  00F5' 1303               	bcf	3,6	;RP1=0, select bank1
  9731  00F6' 0080'              	movwf	(_exp$1019+1)^(0+128)
  9732  00F7' 1283               	bcf	3,5	;RP0=0, select bank0
  9733  00F8' 1303               	bcf	3,6	;RP1=0, select bank0
  9734  00F9' 0841'              	movf	?_floor+2,w
  9735  00FA' 1683               	bsf	3,5	;RP0=1, select bank1
  9736  00FB' 1303               	bcf	3,6	;RP1=0, select bank1
  9737  00FC' 0080'              	movwf	(_exp$1019+2)^(0+128)
  9738  00FD' 0800'              	movf	_exp$1019^(0+128),w
  9739  00FE' 1283               	bcf	3,5	;RP0=0, select bank0
  9740  00FF' 1303               	bcf	3,6	;RP1=0, select bank0
  9741  0100' 00A9'              	movwf	___fttol@f1
  9742  0101' 1683               	bsf	3,5	;RP0=1, select bank1
  9743  0102' 1303               	bcf	3,6	;RP1=0, select bank1
  9744  0103' 0800'              	movf	(_exp$1019+1)^(0+128),w
  9745  0104' 1283               	bcf	3,5	;RP0=0, select bank0
  9746  0105' 1303               	bcf	3,6	;RP1=0, select bank0
  9747  0106' 00AA'              	movwf	___fttol@f1+1
  9748  0107' 1683               	bsf	3,5	;RP0=1, select bank1
  9749  0108' 1303               	bcf	3,6	;RP1=0, select bank1
  9750  0109' 0800'              	movf	(_exp$1019+2)^(0+128),w
  9751  010A' 1283               	bcf	3,5	;RP0=0, select bank0
  9752  010B' 1303               	bcf	3,6	;RP1=0, select bank0
  9753  010C' 00AB'              	movwf	___fttol@f1+2
  9754  010D' 120A' 118A' 2000' 120A' 118A' 	fcall	___fttol
  9755  0112' 1283               	bcf	3,5	;RP0=0, select bank0
  9756  0113' 1303               	bcf	3,6	;RP1=0, select bank0
  9757  0114' 082A'              	movf	?___fttol+1,w
  9758  0115' 1683               	bsf	3,5	;RP0=1, select bank1
  9759  0116' 1303               	bcf	3,6	;RP1=0, select bank1
  9760  0117' 0180'              	clrf	(exp@exponent+1)^(0+128)
  9761  0118' 0780'              	addwf	(exp@exponent+1)^(0+128),f
  9762  0119' 1283               	bcf	3,5	;RP0=0, select bank0
  9763  011A' 1303               	bcf	3,6	;RP1=0, select bank0
  9764  011B' 0829'              	movf	?___fttol,w
  9765  011C' 1683               	bsf	3,5	;RP0=1, select bank1
  9766  011D' 1303               	bcf	3,6	;RP1=0, select bank1
  9767  011E' 0180'              	clrf	exp@exponent^(0+128)
  9768  011F' 0780'              	addwf	exp@exponent^(0+128),f
  9769  0120' 0800'              	movf	(exp@exponent+1)^(0+128),w
  9770  0121' 1283               	bcf	3,5	;RP0=0, select bank0
  9771  0122' 1303               	bcf	3,6	;RP1=0, select bank0
  9772  0123' 0186'              	clrf	___awtoft@c+1
  9773  0124' 0786'              	addwf	___awtoft@c+1,f
  9774  0125' 1683               	bsf	3,5	;RP0=1, select bank1
  9775  0126' 1303               	bcf	3,6	;RP1=0, select bank1
  9776  0127' 0800'              	movf	exp@exponent^(0+128),w
  9777  0128' 1283               	bcf	3,5	;RP0=0, select bank0
  9778  0129' 1303               	bcf	3,6	;RP1=0, select bank0
  9779  012A' 0185'              	clrf	___awtoft@c
  9780  012B' 0785'              	addwf	___awtoft@c,f
  9781  012C' 120A' 118A' 2000' 120A' 118A' 	fcall	___awtoft
  9782  0131' 1283               	bcf	3,5	;RP0=0, select bank0
  9783  0132' 1303               	bcf	3,6	;RP1=0, select bank0
  9784  0133' 0805'              	movf	?___awtoft,w
  9785  0134' 00BD'              	movwf	___ftsub@f2
  9786  0135' 0806'              	movf	?___awtoft+1,w
  9787  0136' 00BE'              	movwf	___ftsub@f2+1
  9788  0137' 0807'              	movf	?___awtoft+2,w
  9789  0138' 00BF'              	movwf	___ftsub@f2+2
  9790  0139' 1683               	bsf	3,5	;RP0=1, select bank1
  9791  013A' 1303               	bcf	3,6	;RP1=0, select bank1
  9792  013B' 0800'              	movf	exp@x^(0+128),w
  9793  013C' 1283               	bcf	3,5	;RP0=0, select bank0
  9794  013D' 1303               	bcf	3,6	;RP1=0, select bank0
  9795  013E' 00C0'              	movwf	___ftsub@f1
  9796  013F' 1683               	bsf	3,5	;RP0=1, select bank1
  9797  0140' 1303               	bcf	3,6	;RP1=0, select bank1
  9798  0141' 0800'              	movf	(exp@x+1)^(0+128),w
  9799  0142' 1283               	bcf	3,5	;RP0=0, select bank0
  9800  0143' 1303               	bcf	3,6	;RP1=0, select bank0
  9801  0144' 00C1'              	movwf	___ftsub@f1+1
  9802  0145' 1683               	bsf	3,5	;RP0=1, select bank1
  9803  0146' 1303               	bcf	3,6	;RP1=0, select bank1
  9804  0147' 0800'              	movf	(exp@x+2)^(0+128),w
  9805  0148' 1283               	bcf	3,5	;RP0=0, select bank0
  9806  0149' 1303               	bcf	3,6	;RP1=0, select bank0
  9807  014A' 00C2'              	movwf	___ftsub@f1+2
  9808  014B' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftsub
  9809  0150' 1283               	bcf	3,5	;RP0=0, select bank0
  9810  0151' 1303               	bcf	3,6	;RP1=0, select bank0
  9811  0152' 083D'              	movf	?___ftsub,w
  9812  0153' 1683               	bsf	3,5	;RP0=1, select bank1
  9813  0154' 1303               	bcf	3,6	;RP1=0, select bank1
  9814  0155' 0080'              	movwf	exp@x^(0+128)
  9815  0156' 1283               	bcf	3,5	;RP0=0, select bank0
  9816  0157' 1303               	bcf	3,6	;RP1=0, select bank0
  9817  0158' 083E'              	movf	?___ftsub+1,w
  9818  0159' 1683               	bsf	3,5	;RP0=1, select bank1
  9819  015A' 1303               	bcf	3,6	;RP1=0, select bank1
  9820  015B' 0080'              	movwf	(exp@x+1)^(0+128)
  9821  015C' 1283               	bcf	3,5	;RP0=0, select bank0
  9822  015D' 1303               	bcf	3,6	;RP1=0, select bank0
  9823  015E' 083F'              	movf	?___ftsub+2,w
  9824  015F' 1683               	bsf	3,5	;RP0=1, select bank1
  9825  0160' 1303               	bcf	3,6	;RP1=0, select bank1
  9826  0161' 0080'              	movwf	(exp@x+2)^(0+128)
  9827  0162' 0800'              	movf	exp@x^(0+128),w
  9828  0163' 1283               	bcf	3,5	;RP0=0, select bank0
  9829  0164' 1303               	bcf	3,6	;RP1=0, select bank0
  9830  0165' 00BD'              	movwf	eval_poly@x
  9831  0166' 1683               	bsf	3,5	;RP0=1, select bank1
  9832  0167' 1303               	bcf	3,6	;RP1=0, select bank1
  9833  0168' 0800'              	movf	(exp@x+1)^(0+128),w
  9834  0169' 1283               	bcf	3,5	;RP0=0, select bank0
  9835  016A' 1303               	bcf	3,6	;RP1=0, select bank0
  9836  016B' 00BE'              	movwf	eval_poly@x+1
  9837  016C' 1683               	bsf	3,5	;RP0=1, select bank1
  9838  016D' 1303               	bcf	3,6	;RP1=0, select bank1
  9839  016E' 0800'              	movf	(exp@x+2)^(0+128),w
  9840  016F' 1283               	bcf	3,5	;RP0=0, select bank0
  9841  0170' 1303               	bcf	3,6	;RP1=0, select bank0
  9842  0171' 00BF'              	movwf	eval_poly@x+2
  9843  0172' 3077               	movlw	(exp@coeff-__stringbase)& (0+255)
  9844  0173' 00CE'              	movwf	??_exp
  9845  0174' 084E'              	movf	??_exp,w
  9846  0175' 00C0'              	movwf	eval_poly@d
  9847  0176' 3009               	movlw	9
  9848  0177' 00C1'              	movwf	eval_poly@n
  9849  0178' 3000               	movlw	0
  9850  0179' 00C2'              	movwf	eval_poly@n+1
  9851  017A' 120A' 118A' 2000' 120A' 118A' 	fcall	_eval_poly
  9852  017F' 1283               	bcf	3,5	;RP0=0, select bank0
  9853  0180' 1303               	bcf	3,6	;RP1=0, select bank0
  9854  0181' 083D'              	movf	?_eval_poly,w
  9855  0182' 00C7'              	movwf	ldexp@value
  9856  0183' 083E'              	movf	?_eval_poly+1,w
  9857  0184' 00C8'              	movwf	ldexp@value+1
  9858  0185' 083F'              	movf	?_eval_poly+2,w
  9859  0186' 00C9'              	movwf	ldexp@value+2
  9860  0187' 1683               	bsf	3,5	;RP0=1, select bank1
  9861  0188' 1303               	bcf	3,6	;RP1=0, select bank1
  9862  0189' 0800'              	movf	(exp@exponent+1)^(0+128),w
  9863  018A' 1283               	bcf	3,5	;RP0=0, select bank0
  9864  018B' 1303               	bcf	3,6	;RP1=0, select bank0
  9865  018C' 01CB'              	clrf	ldexp@newexp+1
  9866  018D' 07CB'              	addwf	ldexp@newexp+1,f
  9867  018E' 1683               	bsf	3,5	;RP0=1, select bank1
  9868  018F' 1303               	bcf	3,6	;RP1=0, select bank1
  9869  0190' 0800'              	movf	exp@exponent^(0+128),w
  9870  0191' 1283               	bcf	3,5	;RP0=0, select bank0
  9871  0192' 1303               	bcf	3,6	;RP1=0, select bank0
  9872  0193' 01CA'              	clrf	ldexp@newexp
  9873  0194' 07CA'              	addwf	ldexp@newexp,f
  9874  0195' 120A' 118A' 2000' 120A' 118A' 	fcall	_ldexp
  9875  019A' 1283               	bcf	3,5	;RP0=0, select bank0
  9876  019B' 1303               	bcf	3,6	;RP1=0, select bank0
  9877  019C' 0847'              	movf	?_ldexp,w
  9878  019D' 1683               	bsf	3,5	;RP0=1, select bank1
  9879  019E' 1303               	bcf	3,6	;RP1=0, select bank1
  9880  019F' 0080'              	movwf	exp@x^(0+128)
  9881  01A0' 1283               	bcf	3,5	;RP0=0, select bank0
  9882  01A1' 1303               	bcf	3,6	;RP1=0, select bank0
  9883  01A2' 0848'              	movf	?_ldexp+1,w
  9884  01A3' 1683               	bsf	3,5	;RP0=1, select bank1
  9885  01A4' 1303               	bcf	3,6	;RP1=0, select bank1
  9886  01A5' 0080'              	movwf	(exp@x+1)^(0+128)
  9887  01A6' 1283               	bcf	3,5	;RP0=0, select bank0
  9888  01A7' 1303               	bcf	3,6	;RP1=0, select bank0
  9889  01A8' 0849'              	movf	?_ldexp+2,w
  9890  01A9' 1683               	bsf	3,5	;RP0=1, select bank1
  9891  01AA' 1303               	bcf	3,6	;RP1=0, select bank1
  9892  01AB' 0080'              	movwf	(exp@x+2)^(0+128)
  9893  01AC' 0800'              	movf	exp@sign^(0+128),w
  9894  01AD' 1903               	btfsc	3,2
  9895  01AE' 0008               	return
  9896  01AF' 30FF               	movlw	255
  9897  01B0' 0080'              	movwf	_exp$668^(0+128)
  9898  01B1' 307F               	movlw	127
  9899  01B2' 0080'              	movwf	(_exp$668+1)^(0+128)
  9900  01B3' 307F               	movlw	127
  9901  01B4' 0080'              	movwf	(_exp$668+2)^(0+128)
  9902  01B5' 0800'              	movf	(exp@x+2)^(0+128),w
  9903  01B6' 0600'              	xorwf	(_exp$668+2)^(0+128),w
  9904  01B7' 1D03               	skipz
  9905  01B8' 2800'              	goto	u6445
  9906  01B9' 0800'              	movf	(exp@x+1)^(0+128),w
  9907  01BA' 0600'              	xorwf	(_exp$668+1)^(0+128),w
  9908  01BB' 1D03               	skipz
  9909  01BC' 2800'              	goto	u6445
  9910  01BD' 0800'              	movf	exp@x^(0+128),w
  9911  01BE' 0600'              	xorwf	_exp$668^(0+128),w
  9912  01BF'                    u6445:	
  9913  01BF' 1D03               	skipz
  9914  01C0' 2800'              	goto	l4763
  9915  01C1' 3000               	movlw	0
  9916  01C2' 0080'              	movwf	?_exp^(0+128)
  9917  01C3' 3000               	movlw	0
  9918  01C4' 0080'              	movwf	(?_exp+1)^(0+128)
  9919  01C5' 3000               	movlw	0
  9920  01C6' 0080'              	movwf	(?_exp+2)^(0+128)
  9921  01C7' 0008               	return
  9922  01C8'                    l4763:	
  9923  01C8' 0800'              	movf	exp@x^(0+128),w
  9924  01C9' 1283               	bcf	3,5	;RP0=0, select bank0
  9925  01CA' 1303               	bcf	3,6	;RP1=0, select bank0
  9926  01CB' 008A'              	movwf	___ftdiv@f2
  9927  01CC' 1683               	bsf	3,5	;RP0=1, select bank1
  9928  01CD' 1303               	bcf	3,6	;RP1=0, select bank1
  9929  01CE' 0800'              	movf	(exp@x+1)^(0+128),w
  9930  01CF' 1283               	bcf	3,5	;RP0=0, select bank0
  9931  01D0' 1303               	bcf	3,6	;RP1=0, select bank0
  9932  01D1' 008B'              	movwf	___ftdiv@f2+1
  9933  01D2' 1683               	bsf	3,5	;RP0=1, select bank1
  9934  01D3' 1303               	bcf	3,6	;RP1=0, select bank1
  9935  01D4' 0800'              	movf	(exp@x+2)^(0+128),w
  9936  01D5' 1283               	bcf	3,5	;RP0=0, select bank0
  9937  01D6' 1303               	bcf	3,6	;RP1=0, select bank0
  9938  01D7' 008C'              	movwf	___ftdiv@f2+2
  9939  01D8' 3000               	movlw	0
  9940  01D9' 008D'              	movwf	___ftdiv@f1
  9941  01DA' 3080               	movlw	128
  9942  01DB' 008E'              	movwf	___ftdiv@f1+1
  9943  01DC' 303F               	movlw	63
  9944  01DD' 008F'              	movwf	___ftdiv@f1+2
  9945  01DE' 120A' 118A' 2000'  	fcall	___ftdiv
  9946  01E1' 1283               	bcf	3,5	;RP0=0, select bank0
  9947  01E2' 1303               	bcf	3,6	;RP1=0, select bank0
  9948  01E3' 080A'              	movf	?___ftdiv,w
  9949  01E4' 1683               	bsf	3,5	;RP0=1, select bank1
  9950  01E5' 1303               	bcf	3,6	;RP1=0, select bank1
  9951  01E6' 0080'              	movwf	?_exp^(0+128)
  9952  01E7' 1283               	bcf	3,5	;RP0=0, select bank0
  9953  01E8' 1303               	bcf	3,6	;RP1=0, select bank0
  9954  01E9' 080B'              	movf	?___ftdiv+1,w
  9955  01EA' 1683               	bsf	3,5	;RP0=1, select bank1
  9956  01EB' 1303               	bcf	3,6	;RP1=0, select bank1
  9957  01EC' 0080'              	movwf	(?_exp+1)^(0+128)
  9958  01ED' 1283               	bcf	3,5	;RP0=0, select bank0
  9959  01EE' 1303               	bcf	3,6	;RP1=0, select bank0
  9960  01EF' 080C'              	movf	?___ftdiv+2,w
  9961  01F0' 1683               	bsf	3,5	;RP0=1, select bank1
  9962  01F1' 1303               	bcf	3,6	;RP1=0, select bank1
  9963  01F2' 0080'              	movwf	(?_exp+2)^(0+128)
  9964  01F3' 0008               	return
  9965  01F4'                    __end_of_exp:	
  9966                           
  9967                           	psect	text20
  9968  0000'                    __ptext20:	
  9969 ;; *************** function _ldexp *****************
  9970 ;; Defined at:
  9971 ;;		line 277 in file "/opt/microchip/xc8/v1.33/sources/common/frexp.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;  value           3   71[BANK0 ] unsigned char 
  9974 ;;  newexp          2   74[BANK0 ] int 
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;		None
  9977 ;; Return value:  Size  Location     Type
  9978 ;;                  3   71[BANK0 ] int 
  9979 ;; Registers used:
  9980 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9981 ;; Tracked objects:
  9982 ;;		On entry : 0/0
  9983 ;;		On exit  : 0/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9986 ;;      Params:         0       5       0       0       0
  9987 ;;      Locals:         0       0       3       0       0
  9988 ;;      Temps:          0       2       0       0       0
  9989 ;;      Totals:         0       7       3       0       0
  9990 ;;Total ram usage:       10 bytes
  9991 ;; Hardware stack levels used:    1
  9992 ;; Hardware stack levels required when called:    2
  9993 ;; This function calls:
  9994 ;;		___ftge
  9995 ;;		___ftneg
  9996 ;; This function is called by:
  9997 ;;		_exp
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           
 10002                           ;psect for function _ldexp
 10003  0000'                    _ldexp:	
 10004                           
 10005                           ;incstack = 0
 10006                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10007  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10008  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10009  0002' 0849'              	movf	ldexp@value+2,w
 10010  0003' 0448'              	iorwf	ldexp@value+1,w
 10011  0004' 0447'              	iorwf	ldexp@value,w
 10012  0005' 1D03               	skipz
 10013  0006' 2800'              	goto	l4625
 10014  0007' 3000               	movlw	0
 10015  0008' 00C7'              	movwf	?_ldexp
 10016  0009' 3000               	movlw	0
 10017  000A' 00C8'              	movwf	?_ldexp+1
 10018  000B' 3000               	movlw	0
 10019  000C' 00C9'              	movwf	?_ldexp+2
 10020  000D' 0008               	return
 10021  000E'                    l4625:	
 10022  000E' 0849'              	movf	ldexp@value+2,w
 10023  000F' 397F               	andlw	127
 10024  0010' 00CC'              	movwf	??_ldexp
 10025  0011' 01CD'              	clrf	??_ldexp+1
 10026  0012' 1003               	clrc
 10027  0013' 0DCC'              	rlf	??_ldexp,f
 10028  0014' 0DCD'              	rlf	??_ldexp+1,f
 10029  0015' 084C'              	movf	??_ldexp,w
 10030  0016' 07CA'              	addwf	ldexp@newexp,f
 10031  0017' 1803               	skipnc
 10032  0018' 0ACB'              	incf	ldexp@newexp+1,f
 10033  0019' 084D'              	movf	??_ldexp+1,w
 10034  001A' 07CB'              	addwf	ldexp@newexp+1,f
 10035  001B' 0D48'              	rlf	ldexp@value+1,w
 10036  001C' 0D48'              	rlf	ldexp@value+1,w
 10037  001D' 3901               	andlw	1
 10038  001E' 00CC'              	movwf	??_ldexp
 10039  001F' 01CD'              	clrf	??_ldexp+1
 10040  0020' 084C'              	movf	??_ldexp,w
 10041  0021' 07CA'              	addwf	ldexp@newexp,f
 10042  0022' 1803               	skipnc
 10043  0023' 0ACB'              	incf	ldexp@newexp+1,f
 10044  0024' 084D'              	movf	??_ldexp+1,w
 10045  0025' 07CB'              	addwf	ldexp@newexp+1,f
 10046  0026' 1FCB'              	btfss	ldexp@newexp+1,7
 10047  0027' 2800'              	goto	l4635
 10048  0028' 3022               	movlw	34
 10049  0029' 0080'              	movwf	_errno
 10050  002A' 3000               	movlw	0
 10051  002B' 0081'              	movwf	_errno+1
 10052  002C' 3000               	movlw	0
 10053  002D' 00C7'              	movwf	?_ldexp
 10054  002E' 3000               	movlw	0
 10055  002F' 00C8'              	movwf	?_ldexp+1
 10056  0030' 3000               	movlw	0
 10057  0031' 00C9'              	movwf	?_ldexp+2
 10058  0032' 0008               	return
 10059  0033'                    l4635:	
 10060  0033' 084B'              	movf	ldexp@newexp+1,w
 10061  0034' 3A80               	xorlw	128
 10062  0035' 00FF               	movwf	127
 10063  0036' 3081               	movlw	129
 10064  0037' 027F               	subwf	127,w
 10065  0038' 1D03               	skipz
 10066  0039' 2800'              	goto	u6295
 10067  003A' 3000               	movlw	0
 10068  003B' 024A'              	subwf	ldexp@newexp,w
 10069  003C'                    u6295:	
 10070  003C' 1C03               	skipc
 10071  003D' 2800'              	goto	l4659
 10072  003E' 3022               	movlw	34
 10073  003F' 0080'              	movwf	_errno
 10074  0040' 3000               	movlw	0
 10075  0041' 0081'              	movwf	_errno+1
 10076  0042' 1283               	bcf	3,5	;RP0=0, select bank0
 10077  0043' 1303               	bcf	3,6	;RP1=0, select bank0
 10078  0044' 0847'              	movf	ldexp@value,w
 10079  0045' 0080'              	movwf	___ftge@ff1
 10080  0046' 0848'              	movf	ldexp@value+1,w
 10081  0047' 0081'              	movwf	___ftge@ff1+1
 10082  0048' 0849'              	movf	ldexp@value+2,w
 10083  0049' 0082'              	movwf	___ftge@ff1+2
 10084  004A' 3000               	movlw	0
 10085  004B' 0083'              	movwf	___ftge@ff2
 10086  004C' 3000               	movlw	0
 10087  004D' 0084'              	movwf	___ftge@ff2+1
 10088  004E' 3000               	movlw	0
 10089  004F' 0085'              	movwf	___ftge@ff2+2
 10090  0050' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
 10091  0055' 1803               	btfsc	3,0
 10092  0056' 2800'              	goto	l4655
 10093  0057' 30FF               	movlw	255
 10094  0058' 1683               	bsf	3,5	;RP0=1, select bank1
 10095  0059' 1303               	bcf	3,6	;RP1=0, select bank1
 10096  005A' 0080'              	movwf	_ldexp$715^(0+128)
 10097  005B' 307F               	movlw	127
 10098  005C' 0080'              	movwf	(_ldexp$715+1)^(0+128)
 10099  005D' 307F               	movlw	127
 10100  005E' 0080'              	movwf	(_ldexp$715+2)^(0+128)
 10101  005F' 0800'              	movf	_ldexp$715^(0+128),w
 10102  0060' 0084'              	movwf	___ftneg@f1
 10103  0061' 0800'              	movf	(_ldexp$715+1)^(0+128),w
 10104  0062' 0085'              	movwf	___ftneg@f1+1
 10105  0063' 0800'              	movf	(_ldexp$715+2)^(0+128),w
 10106  0064' 0086'              	movwf	___ftneg@f1+2
 10107  0065' 120A' 118A' 2000'  	fcall	___ftneg
 10108  0068' 0804'              	movf	?___ftneg,w
 10109  0069' 1283               	bcf	3,5	;RP0=0, select bank0
 10110  006A' 1303               	bcf	3,6	;RP1=0, select bank0
 10111  006B' 00C7'              	movwf	?_ldexp
 10112  006C' 0805'              	movf	?___ftneg+1,w
 10113  006D' 00C8'              	movwf	?_ldexp+1
 10114  006E' 0806'              	movf	?___ftneg+2,w
 10115  006F' 00C9'              	movwf	?_ldexp+2
 10116  0070' 0008               	return
 10117  0071'                    l4655:	
 10118  0071' 30FF               	movlw	255
 10119  0072' 1283               	bcf	3,5	;RP0=0, select bank0
 10120  0073' 1303               	bcf	3,6	;RP1=0, select bank0
 10121  0074' 00C7'              	movwf	?_ldexp
 10122  0075' 307F               	movlw	127
 10123  0076' 00C8'              	movwf	?_ldexp+1
 10124  0077' 307F               	movlw	127
 10125  0078' 00C9'              	movwf	?_ldexp+2
 10126  0079' 0008               	return
 10127  007A'                    l4659:	
 10128  007A' 1283               	bcf	3,5	;RP0=0, select bank0
 10129  007B' 1303               	bcf	3,6	;RP1=0, select bank0
 10130  007C' 084B'              	movf	ldexp@newexp+1,w
 10131  007D' 00CD'              	movwf	??_ldexp+1
 10132  007E' 084A'              	movf	ldexp@newexp,w
 10133  007F' 00CC'              	movwf	??_ldexp
 10134  0080' 0D4D'              	rlf	??_ldexp+1,w
 10135  0081' 0CCD'              	rrf	??_ldexp+1,f
 10136  0082' 0CCC'              	rrf	??_ldexp,f
 10137  0083' 0849'              	movf	ldexp@value+2,w
 10138  0084' 064C'              	xorwf	??_ldexp,w
 10139  0085' 3980               	andlw	-128
 10140  0086' 064C'              	xorwf	??_ldexp,w
 10141  0087' 00C9'              	movwf	ldexp@value+2
 10142  0088' 084A'              	movf	ldexp@newexp,w
 10143  0089' 3901               	andlw	1
 10144  008A' 00CC'              	movwf	??_ldexp
 10145  008B' 0CCC'              	rrf	??_ldexp,f
 10146  008C' 0CCC'              	rrf	??_ldexp,f
 10147  008D' 0848'              	movf	ldexp@value+1,w
 10148  008E' 064C'              	xorwf	??_ldexp,w
 10149  008F' 397F               	andlw	-129
 10150  0090' 064C'              	xorwf	??_ldexp,w
 10151  0091' 00C8'              	movwf	ldexp@value+1
 10152  0092' 0008               	return
 10153  0093'                    __end_of_ldexp:	
 10154                           
 10155                           	psect	text21
 10156  0000'                    __ptext21:	
 10157 ;; *************** function ___ftneg *****************
 10158 ;; Defined at:
 10159 ;;		line 15 in file "/opt/microchip/xc8/v1.33/sources/common/ftneg.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;  f1              3    4[COMMON] float 
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;		None
 10164 ;; Return value:  Size  Location     Type
 10165 ;;                  3    4[COMMON] float 
 10166 ;; Registers used:
 10167 ;;		wreg
 10168 ;; Tracked objects:
 10169 ;;		On entry : 0/0
 10170 ;;		On exit  : 0/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10173 ;;      Params:         3       0       0       0       0
 10174 ;;      Locals:         0       0       0       0       0
 10175 ;;      Temps:          0       0       0       0       0
 10176 ;;      Totals:         3       0       0       0       0
 10177 ;;Total ram usage:        3 bytes
 10178 ;; Hardware stack levels used:    1
 10179 ;; Hardware stack levels required when called:    1
 10180 ;; This function calls:
 10181 ;;		Nothing
 10182 ;; This function is called by:
 10183 ;;		_sprintf
 10184 ;;		_exp
 10185 ;;		_ldexp
 10186 ;;		_pow
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           
 10191                           ;psect for function ___ftneg
 10192  0000'                    ___ftneg:	
 10193                           
 10194                           ;incstack = 0
 10195                           ; Regs used in ___ftneg: [wreg]
 10196  0000' 0806'              	movf	___ftneg@f1+2,w
 10197  0001' 0405'              	iorwf	___ftneg@f1+1,w
 10198  0002' 0404'              	iorwf	___ftneg@f1,w
 10199  0003' 1903               	skipnz
 10200  0004' 0008               	return
 10201  0005' 3080               	movlw	128
 10202  0006' 0686'              	xorwf	___ftneg@f1+2,f
 10203  0007' 0008               	return
 10204  0008'                    __end_of___ftneg:	
 10205                           
 10206                           	psect	text22
 10207  0000'                    __ptext22:	
 10208 ;; *************** function _floor *****************
 10209 ;; Defined at:
 10210 ;;		line 13 in file "/opt/microchip/xc8/v1.33/sources/common/floor.c"
 10211 ;; Parameters:    Size  Location     Type
 10212 ;;  x               3   63[BANK0 ] float 
 10213 ;; Auto vars:     Size  Location     Type
 10214 ;;  i               3   67[BANK0 ] float 
 10215 ;;  expon           2   70[BANK0 ] int 
 10216 ;; Return value:  Size  Location     Type
 10217 ;;                  3   63[BANK0 ] int 
 10218 ;; Registers used:
 10219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10220 ;; Tracked objects:
 10221 ;;		On entry : 0/0
 10222 ;;		On exit  : 0/0
 10223 ;;		Unchanged: 0/0
 10224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10225 ;;      Params:         0       3       0       0       0
 10226 ;;      Locals:         0       5       0       0       0
 10227 ;;      Temps:          0       1       0       0       0
 10228 ;;      Totals:         0       9       0       0       0
 10229 ;;Total ram usage:        9 bytes
 10230 ;; Hardware stack levels used:    1
 10231 ;; Hardware stack levels required when called:    3
 10232 ;; This function calls:
 10233 ;;		___altoft
 10234 ;;		___ftadd
 10235 ;;		___ftge
 10236 ;;		___fttol
 10237 ;;		_frexp
 10238 ;; This function is called by:
 10239 ;;		_exp
 10240 ;; This function uses a non-reentrant model
 10241 ;;
 10242                           
 10243                           
 10244                           ;psect for function _floor
 10245  0000'                    _floor:	
 10246                           
 10247                           ;incstack = 0
 10248                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10249  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10250  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10251  0002' 083F'              	movf	floor@x,w
 10252  0003' 0084'              	movwf	frexp@value
 10253  0004' 0840'              	movf	floor@x+1,w
 10254  0005' 0085'              	movwf	frexp@value+1
 10255  0006' 0841'              	movf	floor@x+2,w
 10256  0007' 0086'              	movwf	frexp@value+2
 10257  0008' 3000'              	movlw	floor@expon& (0+255)
 10258  0009' 00C2'              	movwf	??_floor
 10259  000A' 0842'              	movf	??_floor,w
 10260  000B' 0087'              	movwf	frexp@eptr
 10261  000C' 120A' 118A' 2000' 120A' 118A' 	fcall	_frexp
 10262  0011' 1283               	bcf	3,5	;RP0=0, select bank0
 10263  0012' 1303               	bcf	3,6	;RP1=0, select bank0
 10264  0013' 1FC7'              	btfss	floor@expon+1,7
 10265  0014' 2800'              	goto	l4595
 10266  0015' 083F'              	movf	floor@x,w
 10267  0016' 0080'              	movwf	___ftge@ff1
 10268  0017' 0840'              	movf	floor@x+1,w
 10269  0018' 0081'              	movwf	___ftge@ff1+1
 10270  0019' 0841'              	movf	floor@x+2,w
 10271  001A' 0082'              	movwf	___ftge@ff1+2
 10272  001B' 3000               	movlw	0
 10273  001C' 0083'              	movwf	___ftge@ff2
 10274  001D' 3000               	movlw	0
 10275  001E' 0084'              	movwf	___ftge@ff2+1
 10276  001F' 3000               	movlw	0
 10277  0020' 0085'              	movwf	___ftge@ff2+2
 10278  0021' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
 10279  0026' 1803               	btfsc	3,0
 10280  0027' 2800'              	goto	l4591
 10281  0028' 3000               	movlw	0
 10282  0029' 1283               	bcf	3,5	;RP0=0, select bank0
 10283  002A' 1303               	bcf	3,6	;RP1=0, select bank0
 10284  002B' 00BF'              	movwf	?_floor
 10285  002C' 3080               	movlw	128
 10286  002D' 00C0'              	movwf	?_floor+1
 10287  002E' 30BF               	movlw	191
 10288  002F' 00C1'              	movwf	?_floor+2
 10289  0030' 0008               	return
 10290  0031'                    l4591:	
 10291  0031' 3000               	movlw	0
 10292  0032' 1283               	bcf	3,5	;RP0=0, select bank0
 10293  0033' 1303               	bcf	3,6	;RP1=0, select bank0
 10294  0034' 00BF'              	movwf	?_floor
 10295  0035' 3000               	movlw	0
 10296  0036' 00C0'              	movwf	?_floor+1
 10297  0037' 3000               	movlw	0
 10298  0038' 00C1'              	movwf	?_floor+2
 10299  0039' 0008               	return
 10300  003A'                    l4595:	
 10301  003A' 3000               	movlw	0
 10302  003B' 0247'              	subwf	floor@expon+1,w
 10303  003C' 3015               	movlw	21
 10304  003D' 1903               	skipnz
 10305  003E' 0246'              	subwf	floor@expon,w
 10306  003F' 1803               	btfsc	3,0
 10307  0040' 0008               	return
 10308  0041' 083F'              	movf	floor@x,w
 10309  0042' 00A9'              	movwf	___fttol@f1
 10310  0043' 0840'              	movf	floor@x+1,w
 10311  0044' 00AA'              	movwf	___fttol@f1+1
 10312  0045' 0841'              	movf	floor@x+2,w
 10313  0046' 00AB'              	movwf	___fttol@f1+2
 10314  0047' 120A' 118A' 2000' 120A' 118A' 	fcall	___fttol
 10315  004C' 1283               	bcf	3,5	;RP0=0, select bank0
 10316  004D' 1303               	bcf	3,6	;RP1=0, select bank0
 10317  004E' 082C'              	movf	?___fttol+3,w
 10318  004F' 00BA'              	movwf	___altoft@c+3
 10319  0050' 082B'              	movf	?___fttol+2,w
 10320  0051' 00B9'              	movwf	___altoft@c+2
 10321  0052' 082A'              	movf	?___fttol+1,w
 10322  0053' 00B8'              	movwf	___altoft@c+1
 10323  0054' 0829'              	movf	?___fttol,w
 10324  0055' 00B7'              	movwf	___altoft@c
 10325  0056' 120A' 118A' 2000' 120A' 118A' 	fcall	___altoft
 10326  005B' 1283               	bcf	3,5	;RP0=0, select bank0
 10327  005C' 1303               	bcf	3,6	;RP1=0, select bank0
 10328  005D' 0837'              	movf	?___altoft,w
 10329  005E' 00C3'              	movwf	floor@i
 10330  005F' 0838'              	movf	?___altoft+1,w
 10331  0060' 00C4'              	movwf	floor@i+1
 10332  0061' 0839'              	movf	?___altoft+2,w
 10333  0062' 00C5'              	movwf	floor@i+2
 10334  0063' 083F'              	movf	floor@x,w
 10335  0064' 0080'              	movwf	___ftge@ff1
 10336  0065' 0840'              	movf	floor@x+1,w
 10337  0066' 0081'              	movwf	___ftge@ff1+1
 10338  0067' 0841'              	movf	floor@x+2,w
 10339  0068' 0082'              	movwf	___ftge@ff1+2
 10340  0069' 0843'              	movf	floor@i,w
 10341  006A' 0083'              	movwf	___ftge@ff2
 10342  006B' 0844'              	movf	floor@i+1,w
 10343  006C' 0084'              	movwf	___ftge@ff2+1
 10344  006D' 0845'              	movf	floor@i+2,w
 10345  006E' 0085'              	movwf	___ftge@ff2+2
 10346  006F' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftge
 10347  0074' 1803               	btfsc	3,0
 10348  0075' 2800'              	goto	l4605
 10349  0076' 3000               	movlw	0
 10350  0077' 1283               	bcf	3,5	;RP0=0, select bank0
 10351  0078' 1303               	bcf	3,6	;RP1=0, select bank0
 10352  0079' 00B0'              	movwf	___ftadd@f1
 10353  007A' 3080               	movlw	128
 10354  007B' 00B1'              	movwf	___ftadd@f1+1
 10355  007C' 30BF               	movlw	191
 10356  007D' 00B2'              	movwf	___ftadd@f1+2
 10357  007E' 0843'              	movf	floor@i,w
 10358  007F' 00B3'              	movwf	___ftadd@f2
 10359  0080' 0844'              	movf	floor@i+1,w
 10360  0081' 00B4'              	movwf	___ftadd@f2+1
 10361  0082' 0845'              	movf	floor@i+2,w
 10362  0083' 00B5'              	movwf	___ftadd@f2+2
 10363  0084' 120A' 118A' 2000'  	fcall	___ftadd
 10364  0087' 1283               	bcf	3,5	;RP0=0, select bank0
 10365  0088' 1303               	bcf	3,6	;RP1=0, select bank0
 10366  0089' 0830'              	movf	?___ftadd,w
 10367  008A' 00BF'              	movwf	?_floor
 10368  008B' 0831'              	movf	?___ftadd+1,w
 10369  008C' 00C0'              	movwf	?_floor+1
 10370  008D' 0832'              	movf	?___ftadd+2,w
 10371  008E' 00C1'              	movwf	?_floor+2
 10372  008F' 0008               	return
 10373  0090'                    l4605:	
 10374  0090' 1283               	bcf	3,5	;RP0=0, select bank0
 10375  0091' 1303               	bcf	3,6	;RP1=0, select bank0
 10376  0092' 0843'              	movf	floor@i,w
 10377  0093' 00BF'              	movwf	?_floor
 10378  0094' 0844'              	movf	floor@i+1,w
 10379  0095' 00C0'              	movwf	?_floor+1
 10380  0096' 0845'              	movf	floor@i+2,w
 10381  0097' 00C1'              	movwf	?_floor+2
 10382  0098' 0008               	return
 10383  0099'                    __end_of_floor:	
 10384                           
 10385                           	psect	text23
 10386  0000'                    __ptext23:	
 10387 ;; *************** function _frexp *****************
 10388 ;; Defined at:
 10389 ;;		line 254 in file "/opt/microchip/xc8/v1.33/sources/common/frexp.c"
 10390 ;; Parameters:    Size  Location     Type
 10391 ;;  value           3    4[COMMON] int 
 10392 ;;  eptr            1    7[COMMON] PTR int 
 10393 ;;		 -> log@exponent(2), floor@expon(2), 
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;		None
 10396 ;; Return value:  Size  Location     Type
 10397 ;;                  3    4[COMMON] PTR int 
 10398 ;; Registers used:
 10399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 10400 ;; Tracked objects:
 10401 ;;		On entry : 0/0
 10402 ;;		On exit  : 0/0
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10405 ;;      Params:         4       0       0       0       0
 10406 ;;      Locals:         0       0       0       0       0
 10407 ;;      Temps:          0       2       0       0       0
 10408 ;;      Totals:         4       2       0       0       0
 10409 ;;Total ram usage:        6 bytes
 10410 ;; Hardware stack levels used:    1
 10411 ;; Hardware stack levels required when called:    1
 10412 ;; This function calls:
 10413 ;;		Nothing
 10414 ;; This function is called by:
 10415 ;;		_floor
 10416 ;;		_log
 10417 ;; This function uses a non-reentrant model
 10418 ;;
 10419                           
 10420                           
 10421                           ;psect for function _frexp
 10422  0000'                    _frexp:	
 10423                           
 10424                           ;incstack = 0
 10425                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
 10426  0000' 0806'              	movf	frexp@value+2,w
 10427  0001' 0405'              	iorwf	frexp@value+1,w
 10428  0002' 0404'              	iorwf	frexp@value,w
 10429  0003' 1D03               	skipz
 10430  0004' 2800'              	goto	l4281
 10431  0005' 0807'              	movf	frexp@eptr,w
 10432  0006' 0084               	movwf	4
 10433  0007' 1383               	bcf	3,7	;select IRP bank0
 10434  0008' 0180               	clrf	0
 10435  0009' 0A84               	incf	4,f
 10436  000A' 0180               	clrf	0
 10437  000B' 3000               	movlw	0
 10438  000C' 0084'              	movwf	?_frexp
 10439  000D' 3000               	movlw	0
 10440  000E' 0085'              	movwf	?_frexp+1
 10441  000F' 3000               	movlw	0
 10442  0010' 0086'              	movwf	?_frexp+2
 10443  0011' 0008               	return
 10444  0012'                    l4281:	
 10445  0012' 0806'              	movf	frexp@value+2,w
 10446  0013' 397F               	andlw	127
 10447  0014' 1283               	bcf	3,5	;RP0=0, select bank0
 10448  0015' 1303               	bcf	3,6	;RP1=0, select bank0
 10449  0016' 0080'              	movwf	??_frexp
 10450  0017' 0181'              	clrf	??_frexp+1
 10451  0018' 1003               	clrc
 10452  0019' 0D80'              	rlf	??_frexp,f
 10453  001A' 0D81'              	rlf	??_frexp+1,f
 10454  001B' 0807'              	movf	frexp@eptr,w
 10455  001C' 0084               	movwf	4
 10456  001D' 0800'              	movf	??_frexp,w
 10457  001E' 1383               	bcf	3,7	;select IRP bank0
 10458  001F' 0080               	movwf	0
 10459  0020' 0A84               	incf	4,f
 10460  0021' 0801'              	movf	??_frexp+1,w
 10461  0022' 0080               	movwf	0
 10462  0023' 0D05'              	rlf	frexp@value+1,w
 10463  0024' 0D05'              	rlf	frexp@value+1,w
 10464  0025' 3901               	andlw	1
 10465  0026' 0080'              	movwf	??_frexp
 10466  0027' 0181'              	clrf	??_frexp+1
 10467  0028' 0807'              	movf	frexp@eptr,w
 10468  0029' 0084               	movwf	4
 10469  002A' 0800'              	movf	??_frexp,w
 10470  002B' 0480               	iorwf	0,f
 10471  002C' 0A84               	incf	4,f
 10472  002D' 0801'              	movf	??_frexp+1,w
 10473  002E' 0480               	iorwf	0,f
 10474  002F' 0807'              	movf	frexp@eptr,w
 10475  0030' 0084               	movwf	4
 10476  0031' 3082               	movlw	130
 10477  0032' 0780               	addwf	0,f
 10478  0033' 0F84               	incfsz	4,f
 10479  0034' 0800               	movf	0,w
 10480  0035' 1803               	skipnc
 10481  0036' 0A00               	incf	0,w
 10482  0037' 00FF               	movwf	127
 10483  0038' 30FF               	movlw	255
 10484  0039' 077F               	addwf	127,w
 10485  003A' 0080               	movwf	0
 10486  003B' 0384               	decf	4,f
 10487  003C' 0806'              	movf	frexp@value+2,w
 10488  003D' 3980               	andlw	-128
 10489  003E' 383F               	iorlw	63
 10490  003F' 0086'              	movwf	frexp@value+2
 10491  0040' 1385'              	bcf	frexp@value+1,7
 10492  0041' 0008               	return
 10493  0042'                    __end_of_frexp:	
 10494                           
 10495                           	psect	text24
 10496  0000'                    __ptext24:	
 10497 ;; *************** function ___fttol *****************
 10498 ;; Defined at:
 10499 ;;		line 44 in file "/opt/microchip/xc8/v1.33/sources/common/fttol.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;  f1              3   41[BANK0 ] float 
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;  lval            4   50[BANK0 ] unsigned long 
 10504 ;;  exp1            1   54[BANK0 ] unsigned char 
 10505 ;;  sign1           1   49[BANK0 ] unsigned char 
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  4   41[BANK0 ] long 
 10508 ;; Registers used:
 10509 ;;		wreg, status,2, status,0
 10510 ;; Tracked objects:
 10511 ;;		On entry : 0/0
 10512 ;;		On exit  : 0/0
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10515 ;;      Params:         0       4       0       0       0
 10516 ;;      Locals:         0       6       0       0       0
 10517 ;;      Temps:          0       4       0       0       0
 10518 ;;      Totals:         0      14       0       0       0
 10519 ;;Total ram usage:       14 bytes
 10520 ;; Hardware stack levels used:    1
 10521 ;; Hardware stack levels required when called:    1
 10522 ;; This function calls:
 10523 ;;		Nothing
 10524 ;; This function is called by:
 10525 ;;		_binary_decimal
 10526 ;;		_sprintf
 10527 ;;		_exp
 10528 ;;		_floor
 10529 ;;		_pow
 10530 ;; This function uses a non-reentrant model
 10531 ;;
 10532                           
 10533                           
 10534                           ;psect for function ___fttol
 10535  0000'                    ___fttol:	
 10536                           
 10537                           ;incstack = 0
 10538                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 10539  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10540  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10541  0002' 0829'              	movf	___fttol@f1,w
 10542  0003' 00AD'              	movwf	??___fttol
 10543  0004' 082A'              	movf	___fttol@f1+1,w
 10544  0005' 00AE'              	movwf	??___fttol+1
 10545  0006' 082B'              	movf	___fttol@f1+2,w
 10546  0007' 00AF'              	movwf	??___fttol+2
 10547  0008' 1003               	clrc
 10548  0009' 0D2E'              	rlf	??___fttol+1,w
 10549  000A' 0D2F'              	rlf	??___fttol+2,w
 10550  000B' 00B0'              	movwf	??___fttol+3
 10551  000C' 0830'              	movf	??___fttol+3,w
 10552  000D' 00B6'              	movwf	___fttol@exp1
 10553  000E' 08B6'              	movf	___fttol@exp1,f
 10554  000F' 1D03               	skipz
 10555  0010' 2800'              	goto	l4449
 10556  0011' 3000               	movlw	0
 10557  0012' 00AC'              	movwf	?___fttol+3
 10558  0013' 3000               	movlw	0
 10559  0014' 00AB'              	movwf	?___fttol+2
 10560  0015' 3000               	movlw	0
 10561  0016' 00AA'              	movwf	?___fttol+1
 10562  0017' 3000               	movlw	0
 10563  0018' 00A9'              	movwf	?___fttol
 10564  0019' 0008               	return
 10565  001A'                    l4449:	
 10566  001A' 0829'              	movf	___fttol@f1,w
 10567  001B' 00AD'              	movwf	??___fttol
 10568  001C' 082A'              	movf	___fttol@f1+1,w
 10569  001D' 00AE'              	movwf	??___fttol+1
 10570  001E' 082B'              	movf	___fttol@f1+2,w
 10571  001F' 00AF'              	movwf	??___fttol+2
 10572  0020' 3017               	movlw	23
 10573  0021'                    u5935:	
 10574  0021' 1003               	clrc
 10575  0022' 0CAF'              	rrf	??___fttol+2,f
 10576  0023' 0CAE'              	rrf	??___fttol+1,f
 10577  0024' 0CAD'              	rrf	??___fttol,f
 10578  0025' 3EFF               	addlw	-1
 10579  0026' 1D03               	skipz
 10580  0027' 2800'              	goto	u5935
 10581  0028' 082D'              	movf	??___fttol,w
 10582  0029' 00B0'              	movwf	??___fttol+3
 10583  002A' 0830'              	movf	??___fttol+3,w
 10584  002B' 00B1'              	movwf	___fttol@sign1
 10585  002C' 17AA'              	bsf	___fttol@f1+1,7
 10586  002D' 30FF               	movlw	255
 10587  002E' 05A9'              	andwf	___fttol@f1,f
 10588  002F' 30FF               	movlw	255
 10589  0030' 05AA'              	andwf	___fttol@f1+1,f
 10590  0031' 3000               	movlw	0
 10591  0032' 05AB'              	andwf	___fttol@f1+2,f
 10592  0033' 0829'              	movf	___fttol@f1,w
 10593  0034' 00B2'              	movwf	___fttol@lval
 10594  0035' 082A'              	movf	___fttol@f1+1,w
 10595  0036' 00B3'              	movwf	___fttol@lval+1
 10596  0037' 082B'              	movf	___fttol@f1+2,w
 10597  0038' 00B4'              	movwf	___fttol@lval+2
 10598  0039' 01B5'              	clrf	___fttol@lval+3
 10599  003A' 308E               	movlw	142
 10600  003B' 02B6'              	subwf	___fttol@exp1,f
 10601  003C' 1FB6'              	btfss	___fttol@exp1,7
 10602  003D' 2800'              	goto	l4469
 10603  003E' 0836'              	movf	___fttol@exp1,w
 10604  003F' 3A80               	xorlw	128
 10605  0040' 3E8F               	addlw	143
 10606  0041' 1803               	skipnc
 10607  0042' 2800'              	goto	l4467
 10608  0043' 3000               	movlw	0
 10609  0044' 00AC'              	movwf	?___fttol+3
 10610  0045' 3000               	movlw	0
 10611  0046' 00AB'              	movwf	?___fttol+2
 10612  0047' 3000               	movlw	0
 10613  0048' 00AA'              	movwf	?___fttol+1
 10614  0049' 3000               	movlw	0
 10615  004A' 00A9'              	movwf	?___fttol
 10616  004B' 0008               	return
 10617  004C'                    l4467:	
 10618  004C' 3001               	movlw	1
 10619  004D'                    u5965:	
 10620  004D' 1003               	clrc
 10621  004E' 0CB5'              	rrf	___fttol@lval+3,f
 10622  004F' 0CB4'              	rrf	___fttol@lval+2,f
 10623  0050' 0CB3'              	rrf	___fttol@lval+1,f
 10624  0051' 0CB2'              	rrf	___fttol@lval,f
 10625  0052' 3EFF               	addlw	-1
 10626  0053' 1D03               	skipz
 10627  0054' 2800'              	goto	u5965
 10628  0055' 3001               	movlw	1
 10629  0056' 00AD'              	movwf	??___fttol
 10630  0057' 082D'              	movf	??___fttol,w
 10631  0058' 07B6'              	addwf	___fttol@exp1,f
 10632  0059' 1903               	btfsc	3,2
 10633  005A' 2800'              	goto	l4479
 10634  005B' 2800'              	goto	l4467
 10635  005C'                    l4469:	
 10636  005C' 3018               	movlw	24
 10637  005D' 0236'              	subwf	___fttol@exp1,w
 10638  005E' 1C03               	skipc
 10639  005F' 2800'              	goto	l4477
 10640  0060' 3000               	movlw	0
 10641  0061' 00AC'              	movwf	?___fttol+3
 10642  0062' 3000               	movlw	0
 10643  0063' 00AB'              	movwf	?___fttol+2
 10644  0064' 3000               	movlw	0
 10645  0065' 00AA'              	movwf	?___fttol+1
 10646  0066' 3000               	movlw	0
 10647  0067' 00A9'              	movwf	?___fttol
 10648  0068' 0008               	return
 10649  0069'                    l4475:	
 10650  0069' 3001               	movlw	1
 10651  006A' 00AD'              	movwf	??___fttol
 10652  006B'                    u5995:	
 10653  006B' 1003               	clrc
 10654  006C' 0DB2'              	rlf	___fttol@lval,f
 10655  006D' 0DB3'              	rlf	___fttol@lval+1,f
 10656  006E' 0DB4'              	rlf	___fttol@lval+2,f
 10657  006F' 0DB5'              	rlf	___fttol@lval+3,f
 10658  0070' 0BAD'              	decfsz	??___fttol,f
 10659  0071' 2800'              	goto	u5995
 10660  0072' 3001               	movlw	1
 10661  0073' 02B6'              	subwf	___fttol@exp1,f
 10662  0074'                    l4477:	
 10663  0074' 08B6'              	movf	___fttol@exp1,f
 10664  0075' 1D03               	skipz
 10665  0076' 2800'              	goto	l4475
 10666  0077'                    l4479:	
 10667  0077' 0831'              	movf	___fttol@sign1,w
 10668  0078' 1903               	btfsc	3,2
 10669  0079' 2800'              	goto	l4483
 10670  007A' 09B2'              	comf	___fttol@lval,f
 10671  007B' 09B3'              	comf	___fttol@lval+1,f
 10672  007C' 09B4'              	comf	___fttol@lval+2,f
 10673  007D' 09B5'              	comf	___fttol@lval+3,f
 10674  007E' 0AB2'              	incf	___fttol@lval,f
 10675  007F' 1903               	skipnz
 10676  0080' 0AB3'              	incf	___fttol@lval+1,f
 10677  0081' 1903               	skipnz
 10678  0082' 0AB4'              	incf	___fttol@lval+2,f
 10679  0083' 1903               	skipnz
 10680  0084' 0AB5'              	incf	___fttol@lval+3,f
 10681  0085'                    l4483:	
 10682  0085' 0835'              	movf	___fttol@lval+3,w
 10683  0086' 00AC'              	movwf	?___fttol+3
 10684  0087' 0834'              	movf	___fttol@lval+2,w
 10685  0088' 00AB'              	movwf	?___fttol+2
 10686  0089' 0833'              	movf	___fttol@lval+1,w
 10687  008A' 00AA'              	movwf	?___fttol+1
 10688  008B' 0832'              	movf	___fttol@lval,w
 10689  008C' 00A9'              	movwf	?___fttol
 10690  008D' 0008               	return
 10691  008E'                    __end_of___fttol:	
 10692                           
 10693                           	psect	text25
 10694  0000'                    __ptext25:	
 10695 ;; *************** function ___ftge *****************
 10696 ;; Defined at:
 10697 ;;		line 4 in file "/opt/microchip/xc8/v1.33/sources/common/ftge.c"
 10698 ;; Parameters:    Size  Location     Type
 10699 ;;  ff1             3    0[BANK0 ] float 
 10700 ;;  ff2             3    3[BANK0 ] float 
 10701 ;; Auto vars:     Size  Location     Type
 10702 ;;		None
 10703 ;; Return value:  Size  Location     Type
 10704 ;;		None               void
 10705 ;; Registers used:
 10706 ;;		wreg, status,2, status,0
 10707 ;; Tracked objects:
 10708 ;;		On entry : 0/0
 10709 ;;		On exit  : 0/0
 10710 ;;		Unchanged: 0/0
 10711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10712 ;;      Params:         0       6       0       0       0
 10713 ;;      Locals:         0       0       0       0       0
 10714 ;;      Temps:          0       6       0       0       0
 10715 ;;      Totals:         0      12       0       0       0
 10716 ;;Total ram usage:       12 bytes
 10717 ;; Hardware stack levels used:    1
 10718 ;; Hardware stack levels required when called:    1
 10719 ;; This function calls:
 10720 ;;		Nothing
 10721 ;; This function is called by:
 10722 ;;		_sprintf
 10723 ;;		_exp
 10724 ;;		_floor
 10725 ;;		_ldexp
 10726 ;;		_pow
 10727 ;;		_log
 10728 ;; This function uses a non-reentrant model
 10729 ;;
 10730                           
 10731                           
 10732                           ;psect for function ___ftge
 10733  0000'                    ___ftge:	
 10734                           
 10735                           ;incstack = 0
 10736                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 10737  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10738  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10739  0002' 1F82'              	btfss	___ftge@ff1+2,7
 10740  0003' 2800'              	goto	l4369
 10741  0004' 3000               	movlw	0
 10742  0005' 0086'              	movwf	??___ftge
 10743  0006' 3000               	movlw	0
 10744  0007' 0087'              	movwf	??___ftge+1
 10745  0008' 3080               	movlw	128
 10746  0009' 0088'              	movwf	??___ftge+2
 10747  000A' 0900'              	comf	___ftge@ff1,w
 10748  000B' 0089'              	movwf	??___ftge+3
 10749  000C' 0901'              	comf	___ftge@ff1+1,w
 10750  000D' 008A'              	movwf	??___ftge+4
 10751  000E' 0902'              	comf	___ftge@ff1+2,w
 10752  000F' 008B'              	movwf	??___ftge+5
 10753  0010' 0A89'              	incf	??___ftge+3,f
 10754  0011' 1903               	skipnz
 10755  0012' 0A8A'              	incf	??___ftge+4,f
 10756  0013' 1903               	skipnz
 10757  0014' 0A8B'              	incf	??___ftge+5,f
 10758  0015' 0809'              	movf	??___ftge+3,w
 10759  0016' 0786'              	addwf	??___ftge,f
 10760  0017' 080A'              	movf	??___ftge+4,w
 10761  0018' 1803               	skipnc
 10762  0019' 0F0A'              	incfsz	??___ftge+4,w
 10763  001A' 2800'              	goto	u5731
 10764  001B' 2800'              	goto	u5732
 10765  001C'                    u5731:	
 10766  001C' 0787'              	addwf	??___ftge+1,f
 10767  001D'                    u5732:	
 10768  001D' 080B'              	movf	??___ftge+5,w
 10769  001E' 1803               	skipnc
 10770  001F' 0F0B'              	incfsz	??___ftge+5,w
 10771  0020' 2800'              	goto	u5733
 10772  0021' 2800'              	goto	u5734
 10773  0022'                    u5733:	
 10774  0022' 0788'              	addwf	??___ftge+2,f
 10775  0023'                    u5734:	
 10776  0023' 0806'              	movf	??___ftge,w
 10777  0024' 0080'              	movwf	___ftge@ff1
 10778  0025' 0807'              	movf	??___ftge+1,w
 10779  0026' 0081'              	movwf	___ftge@ff1+1
 10780  0027' 0808'              	movf	??___ftge+2,w
 10781  0028' 0082'              	movwf	___ftge@ff1+2
 10782  0029'                    l4369:	
 10783  0029' 1F85'              	btfss	___ftge@ff2+2,7
 10784  002A' 2800'              	goto	l4373
 10785  002B' 3000               	movlw	0
 10786  002C' 0086'              	movwf	??___ftge
 10787  002D' 3000               	movlw	0
 10788  002E' 0087'              	movwf	??___ftge+1
 10789  002F' 3080               	movlw	128
 10790  0030' 0088'              	movwf	??___ftge+2
 10791  0031' 0903'              	comf	___ftge@ff2,w
 10792  0032' 0089'              	movwf	??___ftge+3
 10793  0033' 0904'              	comf	___ftge@ff2+1,w
 10794  0034' 008A'              	movwf	??___ftge+4
 10795  0035' 0905'              	comf	___ftge@ff2+2,w
 10796  0036' 008B'              	movwf	??___ftge+5
 10797  0037' 0A89'              	incf	??___ftge+3,f
 10798  0038' 1903               	skipnz
 10799  0039' 0A8A'              	incf	??___ftge+4,f
 10800  003A' 1903               	skipnz
 10801  003B' 0A8B'              	incf	??___ftge+5,f
 10802  003C' 0809'              	movf	??___ftge+3,w
 10803  003D' 0786'              	addwf	??___ftge,f
 10804  003E' 080A'              	movf	??___ftge+4,w
 10805  003F' 1803               	skipnc
 10806  0040' 0F0A'              	incfsz	??___ftge+4,w
 10807  0041' 2800'              	goto	u5751
 10808  0042' 2800'              	goto	u5752
 10809  0043'                    u5751:	
 10810  0043' 0787'              	addwf	??___ftge+1,f
 10811  0044'                    u5752:	
 10812  0044' 080B'              	movf	??___ftge+5,w
 10813  0045' 1803               	skipnc
 10814  0046' 0F0B'              	incfsz	??___ftge+5,w
 10815  0047' 2800'              	goto	u5753
 10816  0048' 2800'              	goto	u5754
 10817  0049'                    u5753:	
 10818  0049' 0788'              	addwf	??___ftge+2,f
 10819  004A'                    u5754:	
 10820  004A' 0806'              	movf	??___ftge,w
 10821  004B' 0083'              	movwf	___ftge@ff2
 10822  004C' 0807'              	movf	??___ftge+1,w
 10823  004D' 0084'              	movwf	___ftge@ff2+1
 10824  004E' 0808'              	movf	??___ftge+2,w
 10825  004F' 0085'              	movwf	___ftge@ff2+2
 10826  0050'                    l4373:	
 10827  0050' 3080               	movlw	128
 10828  0051' 0682'              	xorwf	___ftge@ff1+2,f
 10829  0052' 3080               	movlw	128
 10830  0053' 0685'              	xorwf	___ftge@ff2+2,f
 10831  0054' 0805'              	movf	___ftge@ff2+2,w
 10832  0055' 0202'              	subwf	___ftge@ff1+2,w
 10833  0056' 1D03               	skipz
 10834  0057' 0008               	return
 10835  0058' 0804'              	movf	___ftge@ff2+1,w
 10836  0059' 0201'              	subwf	___ftge@ff1+1,w
 10837  005A' 1D03               	skipz
 10838  005B' 0008               	return
 10839  005C' 0803'              	movf	___ftge@ff2,w
 10840  005D' 0200'              	subwf	___ftge@ff1,w
 10841  005E' 0008               	return
 10842  005F'                    __end_of___ftge:	
 10843                           
 10844                           	psect	text26
 10845  0000'                    __ptext26:	
 10846 ;; *************** function ___altoft *****************
 10847 ;; Defined at:
 10848 ;;		line 42 in file "/opt/microchip/xc8/v1.33/sources/common/altoft.c"
 10849 ;; Parameters:    Size  Location     Type
 10850 ;;  c               4   55[BANK0 ] long 
 10851 ;; Auto vars:     Size  Location     Type
 10852 ;;  sign            1   62[BANK0 ] unsigned char 
 10853 ;;  exp             1   61[BANK0 ] unsigned char 
 10854 ;; Return value:  Size  Location     Type
 10855 ;;                  3   55[BANK0 ] float 
 10856 ;; Registers used:
 10857 ;;		wreg, status,2, status,0, pclath, cstack
 10858 ;; Tracked objects:
 10859 ;;		On entry : 0/0
 10860 ;;		On exit  : 0/0
 10861 ;;		Unchanged: 0/0
 10862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10863 ;;      Params:         0       4       0       0       0
 10864 ;;      Locals:         0       2       0       0       0
 10865 ;;      Temps:          0       2       0       0       0
 10866 ;;      Totals:         0       8       0       0       0
 10867 ;;Total ram usage:        8 bytes
 10868 ;; Hardware stack levels used:    1
 10869 ;; Hardware stack levels required when called:    2
 10870 ;; This function calls:
 10871 ;;		___ftpack
 10872 ;; This function is called by:
 10873 ;;		_floor
 10874 ;; This function uses a non-reentrant model
 10875 ;;
 10876                           
 10877                           
 10878                           ;psect for function ___altoft
 10879  0000'                    ___altoft:	
 10880                           
 10881                           ;incstack = 0
 10882                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
 10883  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10884  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10885  0002' 01BE'              	clrf	___altoft@sign
 10886  0003' 308E               	movlw	142
 10887  0004' 00BB'              	movwf	??___altoft
 10888  0005' 083B'              	movf	??___altoft,w
 10889  0006' 00BD'              	movwf	___altoft@exp
 10890  0007' 1FBA'              	btfss	___altoft@c+3,7
 10891  0008' 2800'              	goto	l4267
 10892  0009' 09B7'              	comf	___altoft@c,f
 10893  000A' 09B8'              	comf	___altoft@c+1,f
 10894  000B' 09B9'              	comf	___altoft@c+2,f
 10895  000C' 09BA'              	comf	___altoft@c+3,f
 10896  000D' 0AB7'              	incf	___altoft@c,f
 10897  000E' 1903               	skipnz
 10898  000F' 0AB8'              	incf	___altoft@c+1,f
 10899  0010' 1903               	skipnz
 10900  0011' 0AB9'              	incf	___altoft@c+2,f
 10901  0012' 1903               	skipnz
 10902  0013' 0ABA'              	incf	___altoft@c+3,f
 10903  0014' 01BE'              	clrf	___altoft@sign
 10904  0015' 0ABE'              	incf	___altoft@sign,f
 10905  0016'                    l4267:	
 10906  0016' 30FF               	movlw	255
 10907  0017' 053A'              	andwf	___altoft@c+3,w
 10908  0018' 1903               	btfsc	3,2
 10909  0019' 2800'              	goto	l4269
 10910  001A' 3001               	movlw	1
 10911  001B'                    u5455:	
 10912  001B' 1003               	clrc
 10913  001C' 0CBA'              	rrf	___altoft@c+3,f
 10914  001D' 0CB9'              	rrf	___altoft@c+2,f
 10915  001E' 0CB8'              	rrf	___altoft@c+1,f
 10916  001F' 0CB7'              	rrf	___altoft@c,f
 10917  0020' 3EFF               	addlw	-1
 10918  0021' 1D03               	skipz
 10919  0022' 2800'              	goto	u5455
 10920  0023' 3001               	movlw	1
 10921  0024' 00BB'              	movwf	??___altoft
 10922  0025' 083B'              	movf	??___altoft,w
 10923  0026' 07BD'              	addwf	___altoft@exp,f
 10924  0027' 2800'              	goto	l4267
 10925  0028'                    l4269:	
 10926  0028' 0837'              	movf	___altoft@c,w
 10927  0029' 0080'              	movwf	___ftpack@arg
 10928  002A' 0838'              	movf	___altoft@c+1,w
 10929  002B' 0081'              	movwf	___ftpack@arg+1
 10930  002C' 0839'              	movf	___altoft@c+2,w
 10931  002D' 0082'              	movwf	___ftpack@arg+2
 10932  002E' 083D'              	movf	___altoft@exp,w
 10933  002F' 00BB'              	movwf	??___altoft
 10934  0030' 083B'              	movf	??___altoft,w
 10935  0031' 0083'              	movwf	___ftpack@exp
 10936  0032' 083E'              	movf	___altoft@sign,w
 10937  0033' 00BC'              	movwf	??___altoft+1
 10938  0034' 083C'              	movf	??___altoft+1,w
 10939  0035' 0084'              	movwf	___ftpack@sign
 10940  0036' 120A' 118A' 2000'  	fcall	___ftpack
 10941  0039' 1283               	bcf	3,5	;RP0=0, select bank0
 10942  003A' 1303               	bcf	3,6	;RP1=0, select bank0
 10943  003B' 0800'              	movf	?___ftpack,w
 10944  003C' 00B7'              	movwf	?___altoft
 10945  003D' 0801'              	movf	?___ftpack+1,w
 10946  003E' 00B8'              	movwf	?___altoft+1
 10947  003F' 0802'              	movf	?___ftpack+2,w
 10948  0040' 00B9'              	movwf	?___altoft+2
 10949  0041' 0008               	return
 10950  0042'                    __end_of___altoft:	
 10951                           
 10952                           	psect	text27
 10953  0000'                    __ptext27:	
 10954 ;; *************** function _eval_poly *****************
 10955 ;; Defined at:
 10956 ;;		line 4 in file "/opt/microchip/xc8/v1.33/sources/common/evalpoly.c"
 10957 ;; Parameters:    Size  Location     Type
 10958 ;;  x               3   61[BANK0 ] float 
 10959 ;;  d               1   64[BANK0 ] PTR const 
 10960 ;;		 -> log@coeff(27), exp@coeff(30), 
 10961 ;;  n               2   65[BANK0 ] int 
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;  res             3   68[BANK0 ] int 
 10964 ;; Return value:  Size  Location     Type
 10965 ;;                  3   61[BANK0 ] int 
 10966 ;; Registers used:
 10967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10968 ;; Tracked objects:
 10969 ;;		On entry : 0/0
 10970 ;;		On exit  : 0/0
 10971 ;;		Unchanged: 0/0
 10972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10973 ;;      Params:         0       6       0       0       0
 10974 ;;      Locals:         0       3       0       0       0
 10975 ;;      Temps:          0       1       0       0       0
 10976 ;;      Totals:         0      10       0       0       0
 10977 ;;Total ram usage:       10 bytes
 10978 ;; Hardware stack levels used:    1
 10979 ;; Hardware stack levels required when called:    3
 10980 ;; This function calls:
 10981 ;;		___bmul
 10982 ;;		___ftadd
 10983 ;;		___ftmul
 10984 ;; This function is called by:
 10985 ;;		_exp
 10986 ;;		_log
 10987 ;; This function uses a non-reentrant model
 10988 ;;
 10989                           
 10990                           
 10991                           ;psect for function _eval_poly
 10992  0000'                    _eval_poly:	
 10993                           
 10994                           ;incstack = 0
 10995                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10996  0000' 3003               	movlw	3
 10997  0001' 1283               	bcf	3,5	;RP0=0, select bank0
 10998  0002' 1303               	bcf	3,6	;RP1=0, select bank0
 10999  0003' 00C3'              	movwf	??_eval_poly
 11000  0004' 0843'              	movf	??_eval_poly,w
 11001  0005' 008C'              	movwf	___bmul@multiplicand
 11002  0006' 0841'              	movf	eval_poly@n,w
 11003  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
 11004  000C' 1283               	bcf	3,5	;RP0=0, select bank0
 11005  000D' 1303               	bcf	3,6	;RP1=0, select bank0
 11006  000E' 0740'              	addwf	eval_poly@d,w
 11007  000F' 0084               	movwf	4
 11008  0010' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11009  0015' 00C4'              	movwf	eval_poly@res
 11010  0016' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11011  001B' 00C5'              	movwf	eval_poly@res+1
 11012  001C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11013  0021'                    L34:	
 11014  0021' 00C6'              	movwf	eval_poly@res+2
 11015  0022' 0842'              	movf	eval_poly@n+1,w
 11016  0023' 0441'              	iorwf	eval_poly@n,w
 11017  0024' 1903               	btfsc	3,2
 11018  0025' 2800'              	goto	l4615
 11019  0026' 3003               	movlw	3
 11020  0027' 00C3'              	movwf	??_eval_poly
 11021  0028' 0843'              	movf	??_eval_poly,w
 11022  0029' 008C'              	movwf	___bmul@multiplicand
 11023  002A' 30FF               	movlw	255
 11024  002B' 07C1'              	addwf	eval_poly@n,f
 11025  002C' 1803               	skipnc
 11026  002D' 0AC2'              	incf	eval_poly@n+1,f
 11027  002E' 30FF               	movlw	255
 11028  002F' 07C2'              	addwf	eval_poly@n+1,f
 11029  0030' 0841'              	movf	eval_poly@n,w
 11030  0031' 120A' 118A' 2000' 120A' 118A' 	fcall	___bmul
 11031  0036' 1283               	bcf	3,5	;RP0=0, select bank0
 11032  0037' 1303               	bcf	3,6	;RP1=0, select bank0
 11033  0038' 0740'              	addwf	eval_poly@d,w
 11034  0039' 0084               	movwf	4
 11035  003A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11036  003F' 00B0'              	movwf	___ftadd@f1
 11037  0040' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11038  0045' 00B1'              	movwf	___ftadd@f1+1
 11039  0046' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11040  004B' 00B2'              	movwf	___ftadd@f1+2
 11041  004C' 0844'              	movf	eval_poly@res,w
 11042  004D' 0090'              	movwf	___ftmul@f1
 11043  004E' 0845'              	movf	eval_poly@res+1,w
 11044  004F' 0091'              	movwf	___ftmul@f1+1
 11045  0050' 0846'              	movf	eval_poly@res+2,w
 11046  0051' 0092'              	movwf	___ftmul@f1+2
 11047  0052' 083D'              	movf	eval_poly@x,w
 11048  0053' 0093'              	movwf	___ftmul@f2
 11049  0054' 083E'              	movf	eval_poly@x+1,w
 11050  0055' 0094'              	movwf	___ftmul@f2+1
 11051  0056' 083F'              	movf	eval_poly@x+2,w
 11052  0057' 0095'              	movwf	___ftmul@f2+2
 11053  0058' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftmul
 11054  005D' 1283               	bcf	3,5	;RP0=0, select bank0
 11055  005E' 1303               	bcf	3,6	;RP1=0, select bank0
 11056  005F' 0810'              	movf	?___ftmul,w
 11057  0060' 00B3'              	movwf	___ftadd@f2
 11058  0061' 0811'              	movf	?___ftmul+1,w
 11059  0062' 00B4'              	movwf	___ftadd@f2+1
 11060  0063' 0812'              	movf	?___ftmul+2,w
 11061  0064' 00B5'              	movwf	___ftadd@f2+2
 11062  0065' 120A' 118A' 2000' 120A' 118A' 	fcall	___ftadd
 11063  006A' 1283               	bcf	3,5	;RP0=0, select bank0
 11064  006B' 1303               	bcf	3,6	;RP1=0, select bank0
 11065  006C' 0830'              	movf	?___ftadd,w
 11066  006D' 00C4'              	movwf	eval_poly@res
 11067  006E' 0831'              	movf	?___ftadd+1,w
 11068  006F' 00C5'              	movwf	eval_poly@res+1
 11069  0070' 0832'              	movf	?___ftadd+2,w
 11070  0071' 2800'              	goto	L34
 11071  0072'                    l4615:	
 11072  0072' 0844'              	movf	eval_poly@res,w
 11073  0073' 00BD'              	movwf	?_eval_poly
 11074  0074' 0845'              	movf	eval_poly@res+1,w
 11075  0075' 00BE'              	movwf	?_eval_poly+1
 11076  0076' 0846'              	movf	eval_poly@res+2,w
 11077  0077' 00BF'              	movwf	?_eval_poly+2
 11078  0078' 0008               	return
 11079  0079'                    __end_of_eval_poly:	
 11080                           
 11081                           	psect	text28
 11082  0000'                    __ptext28:	
 11083 ;; *************** function ___ftmul *****************
 11084 ;; Defined at:
 11085 ;;		line 62 in file "/opt/microchip/xc8/v1.33/sources/common/ftmul.c"
 11086 ;; Parameters:    Size  Location     Type
 11087 ;;  f1              3   16[BANK0 ] float 
 11088 ;;  f2              3   19[BANK0 ] float 
 11089 ;; Auto vars:     Size  Location     Type
 11090 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
 11091 ;;  sign            1   31[BANK0 ] unsigned char 
 11092 ;;  cntr            1   30[BANK0 ] unsigned char 
 11093 ;;  exp             1   26[BANK0 ] unsigned char 
 11094 ;; Return value:  Size  Location     Type
 11095 ;;                  3   16[BANK0 ] float 
 11096 ;; Registers used:
 11097 ;;		wreg, status,2, status,0, pclath, cstack
 11098 ;; Tracked objects:
 11099 ;;		On entry : 0/0
 11100 ;;		On exit  : 0/0
 11101 ;;		Unchanged: 0/0
 11102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11103 ;;      Params:         0       6       0       0       0
 11104 ;;      Locals:         0       6       0       0       0
 11105 ;;      Temps:          0       4       0       0       0
 11106 ;;      Totals:         0      16       0       0       0
 11107 ;;Total ram usage:       16 bytes
 11108 ;; Hardware stack levels used:    1
 11109 ;; Hardware stack levels required when called:    2
 11110 ;; This function calls:
 11111 ;;		___ftpack
 11112 ;; This function is called by:
 11113 ;;		_binary_decimal
 11114 ;;		_temp_voltage
 11115 ;;		_voltage_temp
 11116 ;;		_fround
 11117 ;;		_scale
 11118 ;;		_sprintf
 11119 ;;		_exp
 11120 ;;		_pow
 11121 ;;		_eval_poly
 11122 ;;		_log
 11123 ;; This function uses a non-reentrant model
 11124 ;;
 11125                           
 11126                           
 11127                           ;psect for function ___ftmul
 11128  0000'                    ___ftmul:	
 11129                           
 11130                           ;incstack = 0
 11131                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 11132  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 11133  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 11134  0002' 0810'              	movf	___ftmul@f1,w
 11135  0003' 0096'              	movwf	??___ftmul
 11136  0004' 0811'              	movf	___ftmul@f1+1,w
 11137  0005' 0097'              	movwf	??___ftmul+1
 11138  0006' 0812'              	movf	___ftmul@f1+2,w
 11139  0007' 0098'              	movwf	??___ftmul+2
 11140  0008' 1003               	clrc
 11141  0009' 0D17'              	rlf	??___ftmul+1,w
 11142  000A' 0D18'              	rlf	??___ftmul+2,w
 11143  000B' 0099'              	movwf	??___ftmul+3
 11144  000C' 0819'              	movf	??___ftmul+3,w
 11145  000D' 009A'              	movwf	___ftmul@exp
 11146  000E' 089A'              	movf	___ftmul@exp,f
 11147  000F' 1D03               	skipz
 11148  0010' 2800'              	goto	l4391
 11149  0011' 3000               	movlw	0
 11150  0012' 0090'              	movwf	?___ftmul
 11151  0013' 3000               	movlw	0
 11152  0014' 0091'              	movwf	?___ftmul+1
 11153  0015' 3000               	movlw	0
 11154  0016' 0092'              	movwf	?___ftmul+2
 11155  0017' 0008               	return
 11156  0018'                    l4391:	
 11157  0018' 0813'              	movf	___ftmul@f2,w
 11158  0019' 0096'              	movwf	??___ftmul
 11159  001A' 0814'              	movf	___ftmul@f2+1,w
 11160  001B' 0097'              	movwf	??___ftmul+1
 11161  001C' 0815'              	movf	___ftmul@f2+2,w
 11162  001D' 0098'              	movwf	??___ftmul+2
 11163  001E' 1003               	clrc
 11164  001F' 0D17'              	rlf	??___ftmul+1,w
 11165  0020' 0D18'              	rlf	??___ftmul+2,w
 11166  0021' 0099'              	movwf	??___ftmul+3
 11167  0022' 0819'              	movf	??___ftmul+3,w
 11168  0023' 009F'              	movwf	___ftmul@sign
 11169  0024' 089F'              	movf	___ftmul@sign,f
 11170  0025' 1D03               	skipz
 11171  0026' 2800'              	goto	l4397
 11172  0027' 3000               	movlw	0
 11173  0028' 0090'              	movwf	?___ftmul
 11174  0029' 3000               	movlw	0
 11175  002A' 0091'              	movwf	?___ftmul+1
 11176  002B' 3000               	movlw	0
 11177  002C' 0092'              	movwf	?___ftmul+2
 11178  002D' 0008               	return
 11179  002E'                    l4397:	
 11180  002E' 081F'              	movf	___ftmul@sign,w
 11181  002F' 3E7B               	addlw	123
 11182  0030' 0096'              	movwf	??___ftmul
 11183  0031' 0816'              	movf	??___ftmul,w
 11184  0032' 079A'              	addwf	___ftmul@exp,f
 11185  0033' 0810'              	movf	___ftmul@f1,w
 11186  0034' 0096'              	movwf	??___ftmul
 11187  0035' 0811'              	movf	___ftmul@f1+1,w
 11188  0036' 0097'              	movwf	??___ftmul+1
 11189  0037' 0812'              	movf	___ftmul@f1+2,w
 11190  0038' 0098'              	movwf	??___ftmul+2
 11191  0039' 3010               	movlw	16
 11192  003A'                    u5795:	
 11193  003A' 1003               	clrc
 11194  003B' 0C98'              	rrf	??___ftmul+2,f
 11195  003C' 0C97'              	rrf	??___ftmul+1,f
 11196  003D' 0C96'              	rrf	??___ftmul,f
 11197  003E' 3EFF               	addlw	-1
 11198  003F' 1D03               	skipz
 11199  0040' 2800'              	goto	u5795
 11200  0041' 0816'              	movf	??___ftmul,w
 11201  0042' 0099'              	movwf	??___ftmul+3
 11202  0043' 0819'              	movf	??___ftmul+3,w
 11203  0044' 009F'              	movwf	___ftmul@sign
 11204  0045' 0813'              	movf	___ftmul@f2,w
 11205  0046' 0096'              	movwf	??___ftmul
 11206  0047' 0814'              	movf	___ftmul@f2+1,w
 11207  0048' 0097'              	movwf	??___ftmul+1
 11208  0049' 0815'              	movf	___ftmul@f2+2,w
 11209  004A' 0098'              	movwf	??___ftmul+2
 11210  004B' 3010               	movlw	16
 11211  004C'                    u5805:	
 11212  004C' 1003               	clrc
 11213  004D' 0C98'              	rrf	??___ftmul+2,f
 11214  004E' 0C97'              	rrf	??___ftmul+1,f
 11215  004F' 0C96'              	rrf	??___ftmul,f
 11216  0050' 3EFF               	addlw	-1
 11217  0051' 1D03               	skipz
 11218  0052' 2800'              	goto	u5805
 11219  0053' 0816'              	movf	??___ftmul,w
 11220  0054' 0099'              	movwf	??___ftmul+3
 11221  0055' 0819'              	movf	??___ftmul+3,w
 11222  0056' 069F'              	xorwf	___ftmul@sign,f
 11223  0057' 3080               	movlw	128
 11224  0058' 0096'              	movwf	??___ftmul
 11225  0059' 0816'              	movf	??___ftmul,w
 11226  005A' 059F'              	andwf	___ftmul@sign,f
 11227  005B' 1791'              	bsf	___ftmul@f1+1,7
 11228  005C' 1794'              	bsf	___ftmul@f2+1,7
 11229  005D' 30FF               	movlw	255
 11230  005E' 0593'              	andwf	___ftmul@f2,f
 11231  005F' 30FF               	movlw	255
 11232  0060' 0594'              	andwf	___ftmul@f2+1,f
 11233  0061' 3000               	movlw	0
 11234  0062' 0595'              	andwf	___ftmul@f2+2,f
 11235  0063' 3000               	movlw	0
 11236  0064' 009B'              	movwf	___ftmul@f3_as_product
 11237  0065' 3000               	movlw	0
 11238  0066' 009C'              	movwf	___ftmul@f3_as_product+1
 11239  0067' 3000               	movlw	0
 11240  0068' 009D'              	movwf	___ftmul@f3_as_product+2
 11241  0069' 3007               	movlw	7
 11242  006A' 0096'              	movwf	??___ftmul
 11243  006B' 0816'              	movf	??___ftmul,w
 11244  006C' 009E'              	movwf	___ftmul@cntr
 11245  006D'                    l4409:	
 11246  006D' 1C10'              	btfss	___ftmul@f1,0
 11247  006E' 2800'              	goto	l4413
 11248  006F' 0813'              	movf	___ftmul@f2,w
 11249  0070' 079B'              	addwf	___ftmul@f3_as_product,f
 11250  0071' 0814'              	movf	___ftmul@f2+1,w
 11251  0072' 1103               	clrz
 11252  0073' 1803               	skipnc
 11253  0074' 0A14'              	incf	___ftmul@f2+1,w
 11254  0075' 1D03               	btfss	3,2
 11255  0076' 079C'              	addwf	___ftmul@f3_as_product+1,f
 11256  0077' 0815'              	movf	___ftmul@f2+2,w
 11257  0078' 1103               	clrz
 11258  0079' 1803               	skipnc
 11259  007A' 0A15'              	incf	___ftmul@f2+2,w
 11260  007B' 1D03               	btfss	3,2
 11261  007C' 079D'              	addwf	___ftmul@f3_as_product+2,f
 11262  007D'                    l4413:	
 11263  007D' 3001               	movlw	1
 11264  007E'                    u5835:	
 11265  007E' 1003               	clrc
 11266  007F' 0C92'              	rrf	___ftmul@f1+2,f
 11267  0080' 0C91'              	rrf	___ftmul@f1+1,f
 11268  0081' 0C90'              	rrf	___ftmul@f1,f
 11269  0082' 3EFF               	addlw	-1
 11270  0083' 1D03               	skipz
 11271  0084' 2800'              	goto	u5835
 11272  0085' 3001               	movlw	1
 11273  0086'                    u5845:	
 11274  0086' 1003               	clrc
 11275  0087' 0D93'              	rlf	___ftmul@f2,f
 11276  0088' 0D94'              	rlf	___ftmul@f2+1,f
 11277  0089' 0D95'              	rlf	___ftmul@f2+2,f
 11278  008A' 3EFF               	addlw	-1
 11279  008B' 1D03               	skipz
 11280  008C' 2800'              	goto	u5845
 11281  008D' 3001               	movlw	1
 11282  008E' 029E'              	subwf	___ftmul@cntr,f
 11283  008F' 1D03               	btfss	3,2
 11284  0090' 2800'              	goto	l4409
 11285  0091' 3009               	movlw	9
 11286  0092' 0096'              	movwf	??___ftmul
 11287  0093' 0816'              	movf	??___ftmul,w
 11288  0094' 009E'              	movwf	___ftmul@cntr
 11289  0095'                    l4421:	
 11290  0095' 1C10'              	btfss	___ftmul@f1,0
 11291  0096' 2800'              	goto	l4425
 11292  0097' 0813'              	movf	___ftmul@f2,w
 11293  0098' 079B'              	addwf	___ftmul@f3_as_product,f
 11294  0099' 0814'              	movf	___ftmul@f2+1,w
 11295  009A' 1103               	clrz
 11296  009B' 1803               	skipnc
 11297  009C' 0A14'              	incf	___ftmul@f2+1,w
 11298  009D' 1D03               	btfss	3,2
 11299  009E' 079C'              	addwf	___ftmul@f3_as_product+1,f
 11300  009F' 0815'              	movf	___ftmul@f2+2,w
 11301  00A0' 1103               	clrz
 11302  00A1' 1803               	skipnc
 11303  00A2' 0A15'              	incf	___ftmul@f2+2,w
 11304  00A3' 1D03               	btfss	3,2
 11305  00A4' 079D'              	addwf	___ftmul@f3_as_product+2,f
 11306  00A5'                    l4425:	
 11307  00A5' 3001               	movlw	1
 11308  00A6'                    u5885:	
 11309  00A6' 1003               	clrc
 11310  00A7' 0C92'              	rrf	___ftmul@f1+2,f
 11311  00A8' 0C91'              	rrf	___ftmul@f1+1,f
 11312  00A9' 0C90'              	rrf	___ftmul@f1,f
 11313  00AA' 3EFF               	addlw	-1
 11314  00AB' 1D03               	skipz
 11315  00AC' 2800'              	goto	u5885
 11316  00AD' 3001               	movlw	1
 11317  00AE'                    u5895:	
 11318  00AE' 1003               	clrc
 11319  00AF' 0C9D'              	rrf	___ftmul@f3_as_product+2,f
 11320  00B0' 0C9C'              	rrf	___ftmul@f3_as_product+1,f
 11321  00B1' 0C9B'              	rrf	___ftmul@f3_as_product,f
 11322  00B2' 3EFF               	addlw	-1
 11323  00B3' 1D03               	skipz
 11324  00B4' 2800'              	goto	u5895
 11325  00B5' 3001               	movlw	1
 11326  00B6' 029E'              	subwf	___ftmul@cntr,f
 11327  00B7' 1D03               	btfss	3,2
 11328  00B8' 2800'              	goto	l4421
 11329  00B9' 081B'              	movf	___ftmul@f3_as_product,w
 11330  00BA' 0080'              	movwf	___ftpack@arg
 11331  00BB' 081C'              	movf	___ftmul@f3_as_product+1,w
 11332  00BC' 0081'              	movwf	___ftpack@arg+1
 11333  00BD' 081D'              	movf	___ftmul@f3_as_product+2,w
 11334  00BE' 0082'              	movwf	___ftpack@arg+2
 11335  00BF' 081A'              	movf	___ftmul@exp,w
 11336  00C0' 0096'              	movwf	??___ftmul
 11337  00C1' 0816'              	movf	??___ftmul,w
 11338  00C2' 0083'              	movwf	___ftpack@exp
 11339  00C3' 081F'              	movf	___ftmul@sign,w
 11340  00C4' 0097'              	movwf	??___ftmul+1
 11341  00C5' 0817'              	movf	??___ftmul+1,w
 11342  00C6' 0084'              	movwf	___ftpack@sign
 11343  00C7' 120A' 118A' 2000'  	fcall	___ftpack
 11344  00CA' 1283               	bcf	3,5	;RP0=0, select bank0
 11345  00CB' 1303               	bcf	3,6	;RP1=0, select bank0
 11346  00CC' 0800'              	movf	?___ftpack,w
 11347  00CD' 0090'              	movwf	?___ftmul
 11348  00CE' 0801'              	movf	?___ftpack+1,w
 11349  00CF' 0091'              	movwf	?___ftmul+1
 11350  00D0' 0802'              	movf	?___ftpack+2,w
 11351  00D1' 0092'              	movwf	?___ftmul+2
 11352  00D2' 0008               	return
 11353  00D3'                    __end_of___ftmul:	
 11354                           
 11355                           	psect	text29
 11356  0000'                    __ptext29:	
 11357 ;; *************** function ___bmul *****************
 11358 ;; Defined at:
 11359 ;;		line 4 in file "/opt/microchip/xc8/v1.33/sources/common/Umul8.c"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;  multiplier      1    wreg     unsigned char 
 11362 ;;  multiplicand    1   12[BANK0 ] unsigned char 
 11363 ;; Auto vars:     Size  Location     Type
 11364 ;;  multiplier      1   15[BANK0 ] unsigned char 
 11365 ;;  product         1   14[BANK0 ] unsigned char 
 11366 ;; Return value:  Size  Location     Type
 11367 ;;                  1    wreg      unsigned char 
 11368 ;; Registers used:
 11369 ;;		wreg, status,2, status,0
 11370 ;; Tracked objects:
 11371 ;;		On entry : 0/0
 11372 ;;		On exit  : 0/0
 11373 ;;		Unchanged: 0/0
 11374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11375 ;;      Params:         0       1       0       0       0
 11376 ;;      Locals:         0       2       0       0       0
 11377 ;;      Temps:          0       1       0       0       0
 11378 ;;      Totals:         0       4       0       0       0
 11379 ;;Total ram usage:        4 bytes
 11380 ;; Hardware stack levels used:    1
 11381 ;; Hardware stack levels required when called:    1
 11382 ;; This function calls:
 11383 ;;		Nothing
 11384 ;; This function is called by:
 11385 ;;		_temp_voltage
 11386 ;;		_voltage_temp
 11387 ;;		_fround
 11388 ;;		_scale
 11389 ;;		_eval_poly
 11390 ;; This function uses a non-reentrant model
 11391 ;;
 11392                           
 11393                           
 11394                           ;psect for function ___bmul
 11395  0000'                    ___bmul:	
 11396                           
 11397                           ;incstack = 0
 11398                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 11399                           ;___bmul@multiplier stored from wreg
 11400  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 11401  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 11402  0002' 008F'              	movwf	___bmul@multiplier
 11403  0003' 018E'              	clrf	___bmul@product
 11404  0004'                    l4243:	
 11405  0004' 1C0F'              	btfss	___bmul@multiplier,0
 11406  0005' 2800'              	goto	l4247
 11407  0006' 080C'              	movf	___bmul@multiplicand,w
 11408  0007' 008D'              	movwf	??___bmul
 11409  0008' 080D'              	movf	??___bmul,w
 11410  0009' 078E'              	addwf	___bmul@product,f
 11411  000A'                    l4247:	
 11412  000A' 1003               	clrc
 11413  000B' 0D8C'              	rlf	___bmul@multiplicand,f
 11414  000C' 1003               	clrc
 11415  000D' 0C8F'              	rrf	___bmul@multiplier,f
 11416  000E' 088F'              	movf	___bmul@multiplier,f
 11417  000F' 1D03               	skipz
 11418  0010' 2800'              	goto	l4243
 11419  0011' 080E'              	movf	___bmul@product,w
 11420  0012' 0008               	return
 11421  0013'                    __end_of___bmul:	
 11422                           
 11423                           	psect	text30
 11424  0000'                    __ptext30:	
 11425 ;; *************** function ___ftsub *****************
 11426 ;; Defined at:
 11427 ;;		line 18 in file "/opt/microchip/xc8/v1.33/sources/common/ftsub.c"
 11428 ;; Parameters:    Size  Location     Type
 11429 ;;  f2              3   61[BANK0 ] float 
 11430 ;;  f1              3   64[BANK0 ] float 
 11431 ;; Auto vars:     Size  Location     Type
 11432 ;;		None
 11433 ;; Return value:  Size  Location     Type
 11434 ;;                  3   61[BANK0 ] float 
 11435 ;; Registers used:
 11436 ;;		wreg, status,2, status,0, pclath, cstack
 11437 ;; Tracked objects:
 11438 ;;		On entry : 0/0
 11439 ;;		On exit  : 0/0
 11440 ;;		Unchanged: 0/0
 11441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11442 ;;      Params:         0       6       0       0       0
 11443 ;;      Locals:         0       0       0       0       0
 11444 ;;      Temps:          0       0       0       0       0
 11445 ;;      Totals:         0       6       0       0       0
 11446 ;;Total ram usage:        6 bytes
 11447 ;; Hardware stack levels used:    1
 11448 ;; Hardware stack levels required when called:    3
 11449 ;; This function calls:
 11450 ;;		___ftadd
 11451 ;; This function is called by:
 11452 ;;		_sprintf
 11453 ;;		_exp
 11454 ;; This function uses a non-reentrant model
 11455 ;;
 11456                           
 11457                           
 11458                           ;psect for function ___ftsub
 11459  0000'                    ___ftsub:	
 11460                           
 11461                           ;incstack = 0
 11462                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
 11463  0000' 3080               	movlw	128
 11464  0001' 1283               	bcf	3,5	;RP0=0, select bank0
 11465  0002' 1303               	bcf	3,6	;RP1=0, select bank0
 11466  0003' 06BF'              	xorwf	___ftsub@f2+2,f
 11467  0004' 0840'              	movf	___ftsub@f1,w
 11468  0005' 00B0'              	movwf	___ftadd@f1
 11469  0006' 0841'              	movf	___ftsub@f1+1,w
 11470  0007' 00B1'              	movwf	___ftadd@f1+1
 11471  0008' 0842'              	movf	___ftsub@f1+2,w
 11472  0009' 00B2'              	movwf	___ftadd@f1+2
 11473  000A' 083D'              	movf	___ftsub@f2,w
 11474  000B' 00B3'              	movwf	___ftadd@f2
 11475  000C' 083E'              	movf	___ftsub@f2+1,w
 11476  000D' 00B4'              	movwf	___ftadd@f2+1
 11477  000E' 083F'              	movf	___ftsub@f2+2,w
 11478  000F' 00B5'              	movwf	___ftadd@f2+2
 11479  0010' 120A' 118A' 2000'  	fcall	___ftadd
 11480  0013' 1283               	bcf	3,5	;RP0=0, select bank0
 11481  0014' 1303               	bcf	3,6	;RP1=0, select bank0
 11482  0015' 0830'              	movf	?___ftadd,w
 11483  0016' 00BD'              	movwf	?___ftsub
 11484  0017' 0831'              	movf	?___ftadd+1,w
 11485  0018' 00BE'              	movwf	?___ftsub+1
 11486  0019' 0832'              	movf	?___ftadd+2,w
 11487  001A' 00BF'              	movwf	?___ftsub+2
 11488  001B' 0008               	return
 11489  001C'                    __end_of___ftsub:	
 11490                           
 11491                           	psect	text31
 11492  0000'                    __ptext31:	
 11493 ;; *************** function ___ftadd *****************
 11494 ;; Defined at:
 11495 ;;		line 86 in file "/opt/microchip/xc8/v1.33/sources/common/ftadd.c"
 11496 ;; Parameters:    Size  Location     Type
 11497 ;;  f1              3   48[BANK0 ] float 
 11498 ;;  f2              3   51[BANK0 ] float 
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;  exp1            1   60[BANK0 ] unsigned char 
 11501 ;;  exp2            1   59[BANK0 ] unsigned char 
 11502 ;;  sign            1   58[BANK0 ] unsigned char 
 11503 ;; Return value:  Size  Location     Type
 11504 ;;                  3   48[BANK0 ] float 
 11505 ;; Registers used:
 11506 ;;		wreg, status,2, status,0, pclath, cstack
 11507 ;; Tracked objects:
 11508 ;;		On entry : 0/0
 11509 ;;		On exit  : 0/0
 11510 ;;		Unchanged: 0/0
 11511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11512 ;;      Params:         0       6       0       0       0
 11513 ;;      Locals:         0       3       0       0       0
 11514 ;;      Temps:          0       4       0       0       0
 11515 ;;      Totals:         0      13       0       0       0
 11516 ;;Total ram usage:       13 bytes
 11517 ;; Hardware stack levels used:    1
 11518 ;; Hardware stack levels required when called:    2
 11519 ;; This function calls:
 11520 ;;		___ftpack
 11521 ;; This function is called by:
 11522 ;;		_main
 11523 ;;		_temp_voltage
 11524 ;;		_voltage_temp
 11525 ;;		_sprintf
 11526 ;;		_floor
 11527 ;;		___ftsub
 11528 ;;		_eval_poly
 11529 ;;		_log
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533                           
 11534                           ;psect for function ___ftadd
 11535  0000'                    ___ftadd:	
 11536                           
 11537                           ;incstack = 0
 11538                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 11539  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 11540  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 11541  0002' 0830'              	movf	___ftadd@f1,w
 11542  0003' 00B6'              	movwf	??___ftadd
 11543  0004' 0831'              	movf	___ftadd@f1+1,w
 11544  0005' 00B7'              	movwf	??___ftadd+1
 11545  0006' 0832'              	movf	___ftadd@f1+2,w
 11546  0007' 00B8'              	movwf	??___ftadd+2
 11547  0008' 1003               	clrc
 11548  0009' 0D37'              	rlf	??___ftadd+1,w
 11549  000A' 0D38'              	rlf	??___ftadd+2,w
 11550  000B' 00B9'              	movwf	??___ftadd+3
 11551  000C' 0839'              	movf	??___ftadd+3,w
 11552  000D' 00BC'              	movwf	___ftadd@exp1
 11553  000E' 0833'              	movf	___ftadd@f2,w
 11554  000F' 00B6'              	movwf	??___ftadd
 11555  0010' 0834'              	movf	___ftadd@f2+1,w
 11556  0011' 00B7'              	movwf	??___ftadd+1
 11557  0012' 0835'              	movf	___ftadd@f2+2,w
 11558  0013' 00B8'              	movwf	??___ftadd+2
 11559  0014' 1003               	clrc
 11560  0015' 0D37'              	rlf	??___ftadd+1,w
 11561  0016' 0D38'              	rlf	??___ftadd+2,w
 11562  0017' 00B9'              	movwf	??___ftadd+3
 11563  0018' 0839'              	movf	??___ftadd+3,w
 11564  0019' 00BB'              	movwf	___ftadd@exp2
 11565  001A' 083C'              	movf	___ftadd@exp1,w
 11566  001B' 1903               	btfsc	3,2
 11567  001C' 2800'              	goto	l4301
 11568  001D' 083B'              	movf	___ftadd@exp2,w
 11569  001E' 023C'              	subwf	___ftadd@exp1,w
 11570  001F' 1803               	skipnc
 11571  0020' 2800'              	goto	l4305
 11572  0021' 033C'              	decf	___ftadd@exp1,w
 11573  0022' 3AFF               	xorlw	255
 11574  0023' 073B'              	addwf	___ftadd@exp2,w
 11575  0024' 00B6'              	movwf	??___ftadd
 11576  0025' 3019               	movlw	25
 11577  0026' 0236'              	subwf	??___ftadd,w
 11578  0027' 1C03               	skipc
 11579  0028' 2800'              	goto	l4305
 11580  0029'                    l4301:	
 11581  0029' 0833'              	movf	___ftadd@f2,w
 11582  002A' 00B0'              	movwf	?___ftadd
 11583  002B' 0834'              	movf	___ftadd@f2+1,w
 11584  002C' 00B1'              	movwf	?___ftadd+1
 11585  002D' 0835'              	movf	___ftadd@f2+2,w
 11586  002E' 00B2'              	movwf	?___ftadd+2
 11587  002F' 0008               	return
 11588  0030'                    l4305:	
 11589  0030' 083B'              	movf	___ftadd@exp2,w
 11590  0031' 1903               	btfsc	3,2
 11591  0032' 0008               	return
 11592  0033' 083C'              	movf	___ftadd@exp1,w
 11593  0034' 023B'              	subwf	___ftadd@exp2,w
 11594  0035' 1803               	skipnc
 11595  0036' 2800'              	goto	l4311
 11596  0037' 033B'              	decf	___ftadd@exp2,w
 11597  0038' 3AFF               	xorlw	255
 11598  0039' 073C'              	addwf	___ftadd@exp1,w
 11599  003A' 00B6'              	movwf	??___ftadd
 11600  003B' 3019               	movlw	25
 11601  003C' 0236'              	subwf	??___ftadd,w
 11602  003D' 1803               	btfsc	3,0
 11603  003E' 0008               	return
 11604  003F'                    l4311:	
 11605  003F' 3006               	movlw	6
 11606  0040' 00B6'              	movwf	??___ftadd
 11607  0041' 0836'              	movf	??___ftadd,w
 11608  0042' 00BA'              	movwf	___ftadd@sign
 11609  0043' 1BB2'              	btfsc	___ftadd@f1+2,7
 11610  0044' 17BA'              	bsf	___ftadd@sign,7
 11611  0045' 1BB5'              	btfsc	___ftadd@f2+2,7
 11612  0046' 173A'              	bsf	___ftadd@sign,6
 11613  0047' 17B1'              	bsf	___ftadd@f1+1,7
 11614  0048' 30FF               	movlw	255
 11615  0049' 05B0'              	andwf	___ftadd@f1,f
 11616  004A' 30FF               	movlw	255
 11617  004B' 05B1'              	andwf	___ftadd@f1+1,f
 11618  004C' 3000               	movlw	0
 11619  004D' 05B2'              	andwf	___ftadd@f1+2,f
 11620  004E' 17B4'              	bsf	___ftadd@f2+1,7
 11621  004F' 30FF               	movlw	255
 11622  0050' 05B3'              	andwf	___ftadd@f2,f
 11623  0051' 30FF               	movlw	255
 11624  0052' 05B4'              	andwf	___ftadd@f2+1,f
 11625  0053' 3000               	movlw	0
 11626  0054' 05B5'              	andwf	___ftadd@f2+2,f
 11627  0055' 083B'              	movf	___ftadd@exp2,w
 11628  0056' 023C'              	subwf	___ftadd@exp1,w
 11629  0057' 1803               	skipnc
 11630  0058' 2800'              	goto	l4333
 11631  0059'                    l4323:	
 11632  0059' 3001               	movlw	1
 11633  005A'                    u5575:	
 11634  005A' 1003               	clrc
 11635  005B' 0DB3'              	rlf	___ftadd@f2,f
 11636  005C' 0DB4'              	rlf	___ftadd@f2+1,f
 11637  005D' 0DB5'              	rlf	___ftadd@f2+2,f
 11638  005E' 3EFF               	addlw	-1
 11639  005F' 1D03               	skipz
 11640  0060' 2800'              	goto	u5575
 11641  0061' 3001               	movlw	1
 11642  0062' 02BB'              	subwf	___ftadd@exp2,f
 11643  0063' 083B'              	movf	___ftadd@exp2,w
 11644  0064' 063C'              	xorwf	___ftadd@exp1,w
 11645  0065' 1903               	skipnz
 11646  0066' 2800'              	goto	l4331
 11647  0067' 3001               	movlw	1
 11648  0068' 02BA'              	subwf	___ftadd@sign,f
 11649  0069' 083A'              	movf	___ftadd@sign,w
 11650  006A' 3907               	andlw	7
 11651  006B' 1903               	btfsc	3,2
 11652  006C' 2800'              	goto	l4331
 11653  006D' 2800'              	goto	l4323
 11654  006E'                    l4329:	
 11655  006E' 3001               	movlw	1
 11656  006F'                    u5605:	
 11657  006F' 1003               	clrc
 11658  0070' 0CB2'              	rrf	___ftadd@f1+2,f
 11659  0071' 0CB1'              	rrf	___ftadd@f1+1,f
 11660  0072' 0CB0'              	rrf	___ftadd@f1,f
 11661  0073' 3EFF               	addlw	-1
 11662  0074' 1D03               	skipz
 11663  0075' 2800'              	goto	u5605
 11664  0076' 3001               	movlw	1
 11665  0077' 00B6'              	movwf	??___ftadd
 11666  0078' 0836'              	movf	??___ftadd,w
 11667  0079' 07BC'              	addwf	___ftadd@exp1,f
 11668  007A'                    l4331:	
 11669  007A' 083C'              	movf	___ftadd@exp1,w
 11670  007B' 063B'              	xorwf	___ftadd@exp2,w
 11671  007C' 1903               	btfsc	3,2
 11672  007D' 2800'              	goto	l659
 11673  007E' 2800'              	goto	l4329
 11674  007F'                    l4333:	
 11675  007F' 083C'              	movf	___ftadd@exp1,w
 11676  0080' 023B'              	subwf	___ftadd@exp2,w
 11677  0081' 1803               	skipnc
 11678  0082' 2800'              	goto	l659
 11679  0083'                    l4335:	
 11680  0083' 3001               	movlw	1
 11681  0084'                    u5635:	
 11682  0084' 1003               	clrc
 11683  0085' 0DB0'              	rlf	___ftadd@f1,f
 11684  0086' 0DB1'              	rlf	___ftadd@f1+1,f
 11685  0087' 0DB2'              	rlf	___ftadd@f1+2,f
 11686  0088' 3EFF               	addlw	-1
 11687  0089' 1D03               	skipz
 11688  008A' 2800'              	goto	u5635
 11689  008B' 3001               	movlw	1
 11690  008C' 02BC'              	subwf	___ftadd@exp1,f
 11691  008D' 083B'              	movf	___ftadd@exp2,w
 11692  008E' 063C'              	xorwf	___ftadd@exp1,w
 11693  008F' 1903               	skipnz
 11694  0090' 2800'              	goto	l4343
 11695  0091' 3001               	movlw	1
 11696  0092' 02BA'              	subwf	___ftadd@sign,f
 11697  0093' 083A'              	movf	___ftadd@sign,w
 11698  0094' 3907               	andlw	7
 11699  0095' 1903               	btfsc	3,2
 11700  0096' 2800'              	goto	l4343
 11701  0097' 2800'              	goto	l4335
 11702  0098'                    l4341:	
 11703  0098' 3001               	movlw	1
 11704  0099'                    u5665:	
 11705  0099' 1003               	clrc
 11706  009A' 0CB5'              	rrf	___ftadd@f2+2,f
 11707  009B' 0CB4'              	rrf	___ftadd@f2+1,f
 11708  009C' 0CB3'              	rrf	___ftadd@f2,f
 11709  009D' 3EFF               	addlw	-1
 11710  009E' 1D03               	skipz
 11711  009F' 2800'              	goto	u5665
 11712  00A0' 3001               	movlw	1
 11713  00A1' 00B6'              	movwf	??___ftadd
 11714  00A2' 0836'              	movf	??___ftadd,w
 11715  00A3' 07BB'              	addwf	___ftadd@exp2,f
 11716  00A4'                    l4343:	
 11717  00A4' 083C'              	movf	___ftadd@exp1,w
 11718  00A5' 063B'              	xorwf	___ftadd@exp2,w
 11719  00A6' 1D03               	skipz
 11720  00A7' 2800'              	goto	l4341
 11721  00A8'                    l659:	
 11722  00A8' 1FBA'              	btfss	___ftadd@sign,7
 11723  00A9' 2800'              	goto	l4347
 11724  00AA' 30FF               	movlw	255
 11725  00AB' 06B0'              	xorwf	___ftadd@f1,f
 11726  00AC' 30FF               	movlw	255
 11727  00AD' 06B1'              	xorwf	___ftadd@f1+1,f
 11728  00AE' 30FF               	movlw	255
 11729  00AF' 06B2'              	xorwf	___ftadd@f1+2,f
 11730  00B0' 3001               	movlw	1
 11731  00B1' 07B0'              	addwf	___ftadd@f1,f
 11732  00B2' 3000               	movlw	0
 11733  00B3' 1803               	skipnc
 11734  00B4' 3001               	movlw	1
 11735  00B5' 07B1'              	addwf	___ftadd@f1+1,f
 11736  00B6' 3000               	movlw	0
 11737  00B7' 1803               	skipnc
 11738  00B8' 3001               	movlw	1
 11739  00B9' 07B2'              	addwf	___ftadd@f1+2,f
 11740  00BA'                    l4347:	
 11741  00BA' 1F3A'              	btfss	___ftadd@sign,6
 11742  00BB' 2800'              	goto	l4351
 11743  00BC' 30FF               	movlw	255
 11744  00BD' 06B3'              	xorwf	___ftadd@f2,f
 11745  00BE' 30FF               	movlw	255
 11746  00BF' 06B4'              	xorwf	___ftadd@f2+1,f
 11747  00C0' 30FF               	movlw	255
 11748  00C1' 06B5'              	xorwf	___ftadd@f2+2,f
 11749  00C2' 3001               	movlw	1
 11750  00C3' 07B3'              	addwf	___ftadd@f2,f
 11751  00C4' 3000               	movlw	0
 11752  00C5' 1803               	skipnc
 11753  00C6' 3001               	movlw	1
 11754  00C7' 07B4'              	addwf	___ftadd@f2+1,f
 11755  00C8' 3000               	movlw	0
 11756  00C9' 1803               	skipnc
 11757  00CA' 3001               	movlw	1
 11758  00CB' 07B5'              	addwf	___ftadd@f2+2,f
 11759  00CC'                    l4351:	
 11760  00CC' 01BA'              	clrf	___ftadd@sign
 11761  00CD' 0830'              	movf	___ftadd@f1,w
 11762  00CE' 07B3'              	addwf	___ftadd@f2,f
 11763  00CF' 0831'              	movf	___ftadd@f1+1,w
 11764  00D0' 1103               	clrz
 11765  00D1' 1803               	skipnc
 11766  00D2' 0A31'              	incf	___ftadd@f1+1,w
 11767  00D3' 1D03               	btfss	3,2
 11768  00D4' 07B4'              	addwf	___ftadd@f2+1,f
 11769  00D5' 0832'              	movf	___ftadd@f1+2,w
 11770  00D6' 1103               	clrz
 11771  00D7' 1803               	skipnc
 11772  00D8' 0A32'              	incf	___ftadd@f1+2,w
 11773  00D9' 1D03               	btfss	3,2
 11774  00DA' 07B5'              	addwf	___ftadd@f2+2,f
 11775  00DB' 1FB5'              	btfss	___ftadd@f2+2,7
 11776  00DC' 2800'              	goto	l4361
 11777  00DD' 30FF               	movlw	255
 11778  00DE' 06B3'              	xorwf	___ftadd@f2,f
 11779  00DF' 30FF               	movlw	255
 11780  00E0' 06B4'              	xorwf	___ftadd@f2+1,f
 11781  00E1' 30FF               	movlw	255
 11782  00E2' 06B5'              	xorwf	___ftadd@f2+2,f
 11783  00E3' 3001               	movlw	1
 11784  00E4' 07B3'              	addwf	___ftadd@f2,f
 11785  00E5' 3000               	movlw	0
 11786  00E6' 1803               	skipnc
 11787  00E7' 3001               	movlw	1
 11788  00E8' 07B4'              	addwf	___ftadd@f2+1,f
 11789  00E9' 3000               	movlw	0
 11790  00EA' 1803               	skipnc
 11791  00EB' 3001               	movlw	1
 11792  00EC' 07B5'              	addwf	___ftadd@f2+2,f
 11793  00ED' 01BA'              	clrf	___ftadd@sign
 11794  00EE' 0ABA'              	incf	___ftadd@sign,f
 11795  00EF'                    l4361:	
 11796  00EF' 0833'              	movf	___ftadd@f2,w
 11797  00F0' 0080'              	movwf	___ftpack@arg
 11798  00F1' 0834'              	movf	___ftadd@f2+1,w
 11799  00F2' 0081'              	movwf	___ftpack@arg+1
 11800  00F3' 0835'              	movf	___ftadd@f2+2,w
 11801  00F4' 0082'              	movwf	___ftpack@arg+2
 11802  00F5' 083C'              	movf	___ftadd@exp1,w
 11803  00F6' 00B6'              	movwf	??___ftadd
 11804  00F7' 0836'              	movf	??___ftadd,w
 11805  00F8' 0083'              	movwf	___ftpack@exp
 11806  00F9' 083A'              	movf	___ftadd@sign,w
 11807  00FA' 00B7'              	movwf	??___ftadd+1
 11808  00FB' 0837'              	movf	??___ftadd+1,w
 11809  00FC' 0084'              	movwf	___ftpack@sign
 11810  00FD' 120A' 118A' 2000'  	fcall	___ftpack
 11811  0100' 1283               	bcf	3,5	;RP0=0, select bank0
 11812  0101' 1303               	bcf	3,6	;RP1=0, select bank0
 11813  0102' 0800'              	movf	?___ftpack,w
 11814  0103' 00B0'              	movwf	?___ftadd
 11815  0104' 0801'              	movf	?___ftpack+1,w
 11816  0105' 00B1'              	movwf	?___ftadd+1
 11817  0106' 0802'              	movf	?___ftpack+2,w
 11818  0107' 00B2'              	movwf	?___ftadd+2
 11819  0108' 0008               	return
 11820  0109'                    __end_of___ftadd:	
 11821                           
 11822                           	psect	text32
 11823  0000'                    __ptext32:	
 11824 ;; *************** function ___ftdiv *****************
 11825 ;; Defined at:
 11826 ;;		line 49 in file "/opt/microchip/xc8/v1.33/sources/pic/ftdiv.c"
 11827 ;; Parameters:    Size  Location     Type
 11828 ;;  f2              3   10[BANK0 ] float 
 11829 ;;  f1              3   13[BANK0 ] float 
 11830 ;; Auto vars:     Size  Location     Type
 11831 ;;  f3              3   21[BANK0 ] float 
 11832 ;;  sign            1   25[BANK0 ] unsigned char 
 11833 ;;  exp             1   24[BANK0 ] unsigned char 
 11834 ;;  cntr            1   20[BANK0 ] unsigned char 
 11835 ;; Return value:  Size  Location     Type
 11836 ;;                  3   10[BANK0 ] float 
 11837 ;; Registers used:
 11838 ;;		wreg, status,2, status,0, pclath, cstack
 11839 ;; Tracked objects:
 11840 ;;		On entry : 0/0
 11841 ;;		On exit  : 0/0
 11842 ;;		Unchanged: 0/0
 11843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11844 ;;      Params:         0       6       0       0       0
 11845 ;;      Locals:         0       6       0       0       0
 11846 ;;      Temps:          0       4       0       0       0
 11847 ;;      Totals:         0      16       0       0       0
 11848 ;;Total ram usage:       16 bytes
 11849 ;; Hardware stack levels used:    1
 11850 ;; Hardware stack levels required when called:    2
 11851 ;; This function calls:
 11852 ;;		___ftpack
 11853 ;; This function is called by:
 11854 ;;		_main
 11855 ;;		_temp_voltage
 11856 ;;		_exp
 11857 ;; This function uses a non-reentrant model
 11858 ;;
 11859                           
 11860                           
 11861                           ;psect for function ___ftdiv
 11862  0000'                    ___ftdiv:	
 11863                           
 11864                           ;incstack = 0
 11865                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 11866  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 11867  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 11868  0002' 080D'              	movf	___ftdiv@f1,w
 11869  0003' 0090'              	movwf	??___ftdiv
 11870  0004' 080E'              	movf	___ftdiv@f1+1,w
 11871  0005' 0091'              	movwf	??___ftdiv+1
 11872  0006' 080F'              	movf	___ftdiv@f1+2,w
 11873  0007' 0092'              	movwf	??___ftdiv+2
 11874  0008' 1003               	clrc
 11875  0009' 0D11'              	rlf	??___ftdiv+1,w
 11876  000A' 0D12'              	rlf	??___ftdiv+2,w
 11877  000B' 0093'              	movwf	??___ftdiv+3
 11878  000C' 0813'              	movf	??___ftdiv+3,w
 11879  000D' 0098'              	movwf	___ftdiv@exp
 11880  000E' 0898'              	movf	___ftdiv@exp,f
 11881  000F' 1D03               	skipz
 11882  0010' 2800'              	goto	l4671
 11883  0011' 3000               	movlw	0
 11884  0012' 008A'              	movwf	?___ftdiv
 11885  0013' 3000               	movlw	0
 11886  0014' 008B'              	movwf	?___ftdiv+1
 11887  0015' 3000               	movlw	0
 11888  0016' 008C'              	movwf	?___ftdiv+2
 11889  0017' 0008               	return
 11890  0018'                    l4671:	
 11891  0018' 080A'              	movf	___ftdiv@f2,w
 11892  0019' 0090'              	movwf	??___ftdiv
 11893  001A' 080B'              	movf	___ftdiv@f2+1,w
 11894  001B' 0091'              	movwf	??___ftdiv+1
 11895  001C' 080C'              	movf	___ftdiv@f2+2,w
 11896  001D' 0092'              	movwf	??___ftdiv+2
 11897  001E' 1003               	clrc
 11898  001F' 0D11'              	rlf	??___ftdiv+1,w
 11899  0020' 0D12'              	rlf	??___ftdiv+2,w
 11900  0021' 0093'              	movwf	??___ftdiv+3
 11901  0022' 0813'              	movf	??___ftdiv+3,w
 11902  0023' 0099'              	movwf	___ftdiv@sign
 11903  0024' 0899'              	movf	___ftdiv@sign,f
 11904  0025' 1D03               	skipz
 11905  0026' 2800'              	goto	l4677
 11906  0027' 3000               	movlw	0
 11907  0028' 008A'              	movwf	?___ftdiv
 11908  0029' 3000               	movlw	0
 11909  002A' 008B'              	movwf	?___ftdiv+1
 11910  002B' 3000               	movlw	0
 11911  002C' 008C'              	movwf	?___ftdiv+2
 11912  002D' 0008               	return
 11913  002E'                    l4677:	
 11914  002E' 3000               	movlw	0
 11915  002F' 0095'              	movwf	___ftdiv@f3
 11916  0030' 3000               	movlw	0
 11917  0031' 0096'              	movwf	___ftdiv@f3+1
 11918  0032' 3000               	movlw	0
 11919  0033' 0097'              	movwf	___ftdiv@f3+2
 11920  0034' 3089               	movlw	137
 11921  0035' 0719'              	addwf	___ftdiv@sign,w
 11922  0036' 0090'              	movwf	??___ftdiv
 11923  0037' 0810'              	movf	??___ftdiv,w
 11924  0038' 0298'              	subwf	___ftdiv@exp,f
 11925  0039' 080D'              	movf	___ftdiv@f1,w
 11926  003A' 0090'              	movwf	??___ftdiv
 11927  003B' 080E'              	movf	___ftdiv@f1+1,w
 11928  003C' 0091'              	movwf	??___ftdiv+1
 11929  003D' 080F'              	movf	___ftdiv@f1+2,w
 11930  003E' 0092'              	movwf	??___ftdiv+2
 11931  003F' 3010               	movlw	16
 11932  0040'                    u6335:	
 11933  0040' 1003               	clrc
 11934  0041' 0C92'              	rrf	??___ftdiv+2,f
 11935  0042' 0C91'              	rrf	??___ftdiv+1,f
 11936  0043' 0C90'              	rrf	??___ftdiv,f
 11937  0044' 3EFF               	addlw	-1
 11938  0045' 1D03               	skipz
 11939  0046' 2800'              	goto	u6335
 11940  0047' 0810'              	movf	??___ftdiv,w
 11941  0048' 0093'              	movwf	??___ftdiv+3
 11942  0049' 0813'              	movf	??___ftdiv+3,w
 11943  004A' 0099'              	movwf	___ftdiv@sign
 11944  004B' 080A'              	movf	___ftdiv@f2,w
 11945  004C' 0090'              	movwf	??___ftdiv
 11946  004D' 080B'              	movf	___ftdiv@f2+1,w
 11947  004E' 0091'              	movwf	??___ftdiv+1
 11948  004F' 080C'              	movf	___ftdiv@f2+2,w
 11949  0050' 0092'              	movwf	??___ftdiv+2
 11950  0051' 3010               	movlw	16
 11951  0052'                    u6345:	
 11952  0052' 1003               	clrc
 11953  0053' 0C92'              	rrf	??___ftdiv+2,f
 11954  0054' 0C91'              	rrf	??___ftdiv+1,f
 11955  0055' 0C90'              	rrf	??___ftdiv,f
 11956  0056' 3EFF               	addlw	-1
 11957  0057' 1D03               	skipz
 11958  0058' 2800'              	goto	u6345
 11959  0059' 0810'              	movf	??___ftdiv,w
 11960  005A' 0093'              	movwf	??___ftdiv+3
 11961  005B' 0813'              	movf	??___ftdiv+3,w
 11962  005C' 0699'              	xorwf	___ftdiv@sign,f
 11963  005D' 3080               	movlw	128
 11964  005E' 0090'              	movwf	??___ftdiv
 11965  005F' 0810'              	movf	??___ftdiv,w
 11966  0060' 0599'              	andwf	___ftdiv@sign,f
 11967  0061' 178E'              	bsf	___ftdiv@f1+1,7
 11968  0062' 30FF               	movlw	255
 11969  0063' 058D'              	andwf	___ftdiv@f1,f
 11970  0064' 30FF               	movlw	255
 11971  0065' 058E'              	andwf	___ftdiv@f1+1,f
 11972  0066' 3000               	movlw	0
 11973  0067' 058F'              	andwf	___ftdiv@f1+2,f
 11974  0068' 178B'              	bsf	___ftdiv@f2+1,7
 11975  0069' 30FF               	movlw	255
 11976  006A' 058A'              	andwf	___ftdiv@f2,f
 11977  006B' 30FF               	movlw	255
 11978  006C' 058B'              	andwf	___ftdiv@f2+1,f
 11979  006D' 3000               	movlw	0
 11980  006E' 058C'              	andwf	___ftdiv@f2+2,f
 11981  006F' 3018               	movlw	24
 11982  0070' 0090'              	movwf	??___ftdiv
 11983  0071' 0810'              	movf	??___ftdiv,w
 11984  0072' 0094'              	movwf	___ftdiv@cntr
 11985  0073'                    l4691:	
 11986  0073' 3001               	movlw	1
 11987  0074'                    u6355:	
 11988  0074' 1003               	clrc
 11989  0075' 0D95'              	rlf	___ftdiv@f3,f
 11990  0076' 0D96'              	rlf	___ftdiv@f3+1,f
 11991  0077' 0D97'              	rlf	___ftdiv@f3+2,f
 11992  0078' 3EFF               	addlw	-1
 11993  0079' 1D03               	skipz
 11994  007A' 2800'              	goto	u6355
 11995  007B' 080C'              	movf	___ftdiv@f2+2,w
 11996  007C' 020F'              	subwf	___ftdiv@f1+2,w
 11997  007D' 1D03               	skipz
 11998  007E' 2800'              	goto	u6365
 11999  007F' 080B'              	movf	___ftdiv@f2+1,w
 12000  0080' 020E'              	subwf	___ftdiv@f1+1,w
 12001  0081' 1D03               	skipz
 12002  0082' 2800'              	goto	u6365
 12003  0083' 080A'              	movf	___ftdiv@f2,w
 12004  0084' 020D'              	subwf	___ftdiv@f1,w
 12005  0085'                    u6365:	
 12006  0085' 1C03               	skipc
 12007  0086' 2800'              	goto	l4699
 12008  0087' 080A'              	movf	___ftdiv@f2,w
 12009  0088' 028D'              	subwf	___ftdiv@f1,f
 12010  0089' 080B'              	movf	___ftdiv@f2+1,w
 12011  008A' 1C03               	skipc
 12012  008B' 0F0B'              	incfsz	___ftdiv@f2+1,w
 12013  008C' 028E'              	subwf	___ftdiv@f1+1,f
 12014  008D' 080C'              	movf	___ftdiv@f2+2,w
 12015  008E' 1C03               	skipc
 12016  008F' 0A0C'              	incf	___ftdiv@f2+2,w
 12017  0090' 028F'              	subwf	___ftdiv@f1+2,f
 12018  0091' 1415'              	bsf	___ftdiv@f3,0
 12019  0092'                    l4699:	
 12020  0092' 3001               	movlw	1
 12021  0093'                    u6375:	
 12022  0093' 1003               	clrc
 12023  0094' 0D8D'              	rlf	___ftdiv@f1,f
 12024  0095' 0D8E'              	rlf	___ftdiv@f1+1,f
 12025  0096' 0D8F'              	rlf	___ftdiv@f1+2,f
 12026  0097' 3EFF               	addlw	-1
 12027  0098' 1D03               	skipz
 12028  0099' 2800'              	goto	u6375
 12029  009A' 3001               	movlw	1
 12030  009B' 0294'              	subwf	___ftdiv@cntr,f
 12031  009C' 1D03               	btfss	3,2
 12032  009D' 2800'              	goto	l4691
 12033  009E' 0815'              	movf	___ftdiv@f3,w
 12034  009F' 0080'              	movwf	___ftpack@arg
 12035  00A0' 0816'              	movf	___ftdiv@f3+1,w
 12036  00A1' 0081'              	movwf	___ftpack@arg+1
 12037  00A2' 0817'              	movf	___ftdiv@f3+2,w
 12038  00A3' 0082'              	movwf	___ftpack@arg+2
 12039  00A4' 0818'              	movf	___ftdiv@exp,w
 12040  00A5' 0090'              	movwf	??___ftdiv
 12041  00A6' 0810'              	movf	??___ftdiv,w
 12042  00A7' 0083'              	movwf	___ftpack@exp
 12043  00A8' 0819'              	movf	___ftdiv@sign,w
 12044  00A9' 0091'              	movwf	??___ftdiv+1
 12045  00AA' 0811'              	movf	??___ftdiv+1,w
 12046  00AB' 0084'              	movwf	___ftpack@sign
 12047  00AC' 120A' 118A' 2000'  	fcall	___ftpack
 12048  00AF' 1283               	bcf	3,5	;RP0=0, select bank0
 12049  00B0' 1303               	bcf	3,6	;RP1=0, select bank0
 12050  00B1' 0800'              	movf	?___ftpack,w
 12051  00B2' 008A'              	movwf	?___ftdiv
 12052  00B3' 0801'              	movf	?___ftpack+1,w
 12053  00B4' 008B'              	movwf	?___ftdiv+1
 12054  00B5' 0802'              	movf	?___ftpack+2,w
 12055  00B6' 008C'              	movwf	?___ftdiv+2
 12056  00B7' 0008               	return
 12057  00B8'                    __end_of___ftdiv:	
 12058                           
 12059                           	psect	text33
 12060  0000'                    __ptext33:	
 12061 ;; *************** function ___awtoft *****************
 12062 ;; Defined at:
 12063 ;;		line 32 in file "/opt/microchip/xc8/v1.33/sources/common/awtoft.c"
 12064 ;; Parameters:    Size  Location     Type
 12065 ;;  c               2    5[BANK0 ] int 
 12066 ;; Auto vars:     Size  Location     Type
 12067 ;;  sign            1    7[COMMON] unsigned char 
 12068 ;; Return value:  Size  Location     Type
 12069 ;;                  3    5[BANK0 ] float 
 12070 ;; Registers used:
 12071 ;;		wreg, status,2, status,0, pclath, cstack
 12072 ;; Tracked objects:
 12073 ;;		On entry : 0/0
 12074 ;;		On exit  : 0/0
 12075 ;;		Unchanged: 0/0
 12076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12077 ;;      Params:         0       3       0       0       0
 12078 ;;      Locals:         1       0       0       0       0
 12079 ;;      Temps:          0       2       0       0       0
 12080 ;;      Totals:         1       5       0       0       0
 12081 ;;Total ram usage:        6 bytes
 12082 ;; Hardware stack levels used:    1
 12083 ;; Hardware stack levels required when called:    2
 12084 ;; This function calls:
 12085 ;;		___ftpack
 12086 ;; This function is called by:
 12087 ;;		_main
 12088 ;;		_binary_decimal
 12089 ;;		_temp_voltage
 12090 ;;		_voltage_temp
 12091 ;;		_exp
 12092 ;;		_log
 12093 ;; This function uses a non-reentrant model
 12094 ;;
 12095                           
 12096                           
 12097                           ;psect for function ___awtoft
 12098  0000'                    ___awtoft:	
 12099                           
 12100                           ;incstack = 0
 12101                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 12102  0000' 0187'              	clrf	___awtoft@sign
 12103  0001' 1283               	bcf	3,5	;RP0=0, select bank0
 12104  0002' 1303               	bcf	3,6	;RP1=0, select bank0
 12105  0003' 1F86'              	btfss	___awtoft@c+1,7
 12106  0004' 2800'              	goto	l4577
 12107  0005' 0985'              	comf	___awtoft@c,f
 12108  0006' 0986'              	comf	___awtoft@c+1,f
 12109  0007' 0A85'              	incf	___awtoft@c,f
 12110  0008' 1903               	skipnz
 12111  0009' 0A86'              	incf	___awtoft@c+1,f
 12112  000A' 0187'              	clrf	___awtoft@sign
 12113  000B' 0A87'              	incf	___awtoft@sign,f
 12114  000C'                    l4577:	
 12115  000C' 0805'              	movf	___awtoft@c,w
 12116  000D' 0080'              	movwf	___ftpack@arg
 12117  000E' 0806'              	movf	___awtoft@c+1,w
 12118  000F' 0081'              	movwf	___ftpack@arg+1
 12119  0010' 0182'              	clrf	___ftpack@arg+2
 12120  0011' 308E               	movlw	142
 12121  0012' 0088'              	movwf	??___awtoft
 12122  0013' 0808'              	movf	??___awtoft,w
 12123  0014' 0083'              	movwf	___ftpack@exp
 12124  0015' 0807'              	movf	___awtoft@sign,w
 12125  0016' 0089'              	movwf	??___awtoft+1
 12126  0017' 0809'              	movf	??___awtoft+1,w
 12127  0018' 0084'              	movwf	___ftpack@sign
 12128  0019' 120A' 118A' 2000'  	fcall	___ftpack
 12129  001C' 1283               	bcf	3,5	;RP0=0, select bank0
 12130  001D' 1303               	bcf	3,6	;RP1=0, select bank0
 12131  001E' 0800'              	movf	?___ftpack,w
 12132  001F' 0085'              	movwf	?___awtoft
 12133  0020' 0801'              	movf	?___ftpack+1,w
 12134  0021' 0086'              	movwf	?___awtoft+1
 12135  0022' 0802'              	movf	?___ftpack+2,w
 12136  0023' 0087'              	movwf	?___awtoft+2
 12137  0024' 0008               	return
 12138  0025'                    __end_of___awtoft:	
 12139                           
 12140                           	psect	text34
 12141  0000'                    __ptext34:	
 12142 ;; *************** function ___lltoft *****************
 12143 ;; Defined at:
 12144 ;;		line 35 in file "/opt/microchip/xc8/v1.33/sources/common/lltoft.c"
 12145 ;; Parameters:    Size  Location     Type
 12146 ;;  c               4    5[BANK0 ] unsigned long 
 12147 ;; Auto vars:     Size  Location     Type
 12148 ;;  exp             1    9[BANK0 ] unsigned char 
 12149 ;; Return value:  Size  Location     Type
 12150 ;;                  3    5[BANK0 ] float 
 12151 ;; Registers used:
 12152 ;;		wreg, status,2, status,0, pclath, cstack
 12153 ;; Tracked objects:
 12154 ;;		On entry : 0/0
 12155 ;;		On exit  : 0/0
 12156 ;;		Unchanged: 0/0
 12157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12158 ;;      Params:         0       4       0       0       0
 12159 ;;      Locals:         0       1       0       0       0
 12160 ;;      Temps:          1       0       0       0       0
 12161 ;;      Totals:         1       5       0       0       0
 12162 ;;Total ram usage:        6 bytes
 12163 ;; Hardware stack levels used:    1
 12164 ;; Hardware stack levels required when called:    2
 12165 ;; This function calls:
 12166 ;;		___ftpack
 12167 ;; This function is called by:
 12168 ;;		_sprintf
 12169 ;;		_pow
 12170 ;; This function uses a non-reentrant model
 12171 ;;
 12172                           
 12173                           
 12174                           ;psect for function ___lltoft
 12175  0000'                    ___lltoft:	
 12176                           
 12177                           ;incstack = 0
 12178                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
 12179  0000' 308E               	movlw	142
 12180  0001' 0087'              	movwf	??___lltoft
 12181  0002' 0807'              	movf	??___lltoft,w
 12182  0003' 1283               	bcf	3,5	;RP0=0, select bank0
 12183  0004' 1303               	bcf	3,6	;RP1=0, select bank0
 12184  0005' 0089'              	movwf	___lltoft@exp
 12185  0006'                    l5009:	
 12186  0006' 30FF               	movlw	255
 12187  0007' 0508'              	andwf	___lltoft@c+3,w
 12188  0008' 1903               	btfsc	3,2
 12189  0009' 2800'              	goto	l5011
 12190  000A' 3001               	movlw	1
 12191  000B'                    u6965:	
 12192  000B' 1003               	clrc
 12193  000C' 0C88'              	rrf	___lltoft@c+3,f
 12194  000D' 0C87'              	rrf	___lltoft@c+2,f
 12195  000E' 0C86'              	rrf	___lltoft@c+1,f
 12196  000F' 0C85'              	rrf	___lltoft@c,f
 12197  0010' 3EFF               	addlw	-1
 12198  0011' 1D03               	skipz
 12199  0012' 2800'              	goto	u6965
 12200  0013' 3001               	movlw	1
 12201  0014' 0087'              	movwf	??___lltoft
 12202  0015' 0807'              	movf	??___lltoft,w
 12203  0016' 0789'              	addwf	___lltoft@exp,f
 12204  0017' 2800'              	goto	l5009
 12205  0018'                    l5011:	
 12206  0018' 0805'              	movf	___lltoft@c,w
 12207  0019' 0080'              	movwf	___ftpack@arg
 12208  001A' 0806'              	movf	___lltoft@c+1,w
 12209  001B' 0081'              	movwf	___ftpack@arg+1
 12210  001C' 0807'              	movf	___lltoft@c+2,w
 12211  001D' 0082'              	movwf	___ftpack@arg+2
 12212  001E' 0809'              	movf	___lltoft@exp,w
 12213  001F' 0087'              	movwf	??___lltoft
 12214  0020' 0807'              	movf	??___lltoft,w
 12215  0021' 0083'              	movwf	___ftpack@exp
 12216  0022' 0184'              	clrf	___ftpack@sign
 12217  0023' 120A' 118A' 2000'  	fcall	___ftpack
 12218  0026' 1283               	bcf	3,5	;RP0=0, select bank0
 12219  0027' 1303               	bcf	3,6	;RP1=0, select bank0
 12220  0028' 0800'              	movf	?___ftpack,w
 12221  0029' 0085'              	movwf	?___lltoft
 12222  002A' 0801'              	movf	?___ftpack+1,w
 12223  002B' 0086'              	movwf	?___lltoft+1
 12224  002C' 0802'              	movf	?___ftpack+2,w
 12225  002D' 0087'              	movwf	?___lltoft+2
 12226  002E' 0008               	return
 12227  002F'                    __end_of___lltoft:	
 12228                           
 12229                           	psect	text35
 12230  0000'                    __ptext35:	
 12231 ;; *************** function ___ftpack *****************
 12232 ;; Defined at:
 12233 ;;		line 62 in file "/opt/microchip/xc8/v1.33/sources/common/float.c"
 12234 ;; Parameters:    Size  Location     Type
 12235 ;;  arg             3    0[BANK0 ] unsigned um
 12236 ;;  exp             1    3[BANK0 ] unsigned char 
 12237 ;;  sign            1    4[BANK0 ] unsigned char 
 12238 ;; Auto vars:     Size  Location     Type
 12239 ;;		None
 12240 ;; Return value:  Size  Location     Type
 12241 ;;                  3    0[BANK0 ] float 
 12242 ;; Registers used:
 12243 ;;		wreg, status,2, status,0
 12244 ;; Tracked objects:
 12245 ;;		On entry : 0/0
 12246 ;;		On exit  : 0/0
 12247 ;;		Unchanged: 0/0
 12248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12249 ;;      Params:         0       5       0       0       0
 12250 ;;      Locals:         0       0       0       0       0
 12251 ;;      Temps:          3       0       0       0       0
 12252 ;;      Totals:         3       5       0       0       0
 12253 ;;Total ram usage:        8 bytes
 12254 ;; Hardware stack levels used:    1
 12255 ;; Hardware stack levels required when called:    1
 12256 ;; This function calls:
 12257 ;;		Nothing
 12258 ;; This function is called by:
 12259 ;;		___altoft
 12260 ;;		___awtoft
 12261 ;;		___ftadd
 12262 ;;		___ftdiv
 12263 ;;		___ftmul
 12264 ;;		___lltoft
 12265 ;; This function uses a non-reentrant model
 12266 ;;
 12267                           
 12268                           
 12269                           ;psect for function ___ftpack
 12270  0000'                    ___ftpack:	
 12271                           
 12272                           ;incstack = 0
 12273                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 12274  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 12275  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 12276  0002' 0803'              	movf	___ftpack@exp,w
 12277  0003' 1903               	btfsc	3,2
 12278  0004' 2800'              	goto	l4215
 12279  0005' 0802'              	movf	___ftpack@arg+2,w
 12280  0006' 0401'              	iorwf	___ftpack@arg+1,w
 12281  0007' 0400'              	iorwf	___ftpack@arg,w
 12282  0008' 1D03               	skipz
 12283  0009' 2800'              	goto	l4221
 12284  000A'                    l4215:	
 12285  000A' 3000               	movlw	0
 12286  000B' 0080'              	movwf	?___ftpack
 12287  000C' 3000               	movlw	0
 12288  000D' 0081'              	movwf	?___ftpack+1
 12289  000E' 3000               	movlw	0
 12290  000F' 0082'              	movwf	?___ftpack+2
 12291  0010' 0008               	return
 12292  0011'                    l4219:	
 12293  0011' 3001               	movlw	1
 12294  0012' 0084'              	movwf	??___ftpack
 12295  0013' 0804'              	movf	??___ftpack,w
 12296  0014' 0783'              	addwf	___ftpack@exp,f
 12297  0015' 3001               	movlw	1
 12298  0016'                    u5335:	
 12299  0016' 1003               	clrc
 12300  0017' 0C82'              	rrf	___ftpack@arg+2,f
 12301  0018' 0C81'              	rrf	___ftpack@arg+1,f
 12302  0019' 0C80'              	rrf	___ftpack@arg,f
 12303  001A' 3EFF               	addlw	-1
 12304  001B' 1D03               	skipz
 12305  001C' 2800'              	goto	u5335
 12306  001D'                    l4221:	
 12307  001D' 30FE               	movlw	254
 12308  001E' 0502'              	andwf	___ftpack@arg+2,w
 12309  001F' 1903               	btfsc	3,2
 12310  0020' 2800'              	goto	l597
 12311  0021' 2800'              	goto	l4219
 12312  0022'                    l4223:	
 12313  0022' 3001               	movlw	1
 12314  0023' 0084'              	movwf	??___ftpack
 12315  0024' 0804'              	movf	??___ftpack,w
 12316  0025' 0783'              	addwf	___ftpack@exp,f
 12317  0026' 3001               	movlw	1
 12318  0027' 0780'              	addwf	___ftpack@arg,f
 12319  0028' 3000               	movlw	0
 12320  0029' 1803               	skipnc
 12321  002A' 3001               	movlw	1
 12322  002B' 0781'              	addwf	___ftpack@arg+1,f
 12323  002C' 3000               	movlw	0
 12324  002D' 1803               	skipnc
 12325  002E' 3001               	movlw	1
 12326  002F' 0782'              	addwf	___ftpack@arg+2,f
 12327  0030' 3001               	movlw	1
 12328  0031'                    u5355:	
 12329  0031' 1003               	clrc
 12330  0032' 0C82'              	rrf	___ftpack@arg+2,f
 12331  0033' 0C81'              	rrf	___ftpack@arg+1,f
 12332  0034' 0C80'              	rrf	___ftpack@arg,f
 12333  0035' 3EFF               	addlw	-1
 12334  0036' 1D03               	skipz
 12335  0037' 2800'              	goto	u5355
 12336  0038'                    l597:	
 12337  0038' 30FF               	movlw	255
 12338  0039' 0502'              	andwf	___ftpack@arg+2,w
 12339  003A' 1903               	btfsc	3,2
 12340  003B' 2800'              	goto	l4231
 12341  003C' 2800'              	goto	l4223
 12342  003D'                    l4229:	
 12343  003D' 3001               	movlw	1
 12344  003E' 0283'              	subwf	___ftpack@exp,f
 12345  003F' 3001               	movlw	1
 12346  0040'                    u5375:	
 12347  0040' 1003               	clrc
 12348  0041' 0D80'              	rlf	___ftpack@arg,f
 12349  0042' 0D81'              	rlf	___ftpack@arg+1,f
 12350  0043' 0D82'              	rlf	___ftpack@arg+2,f
 12351  0044' 3EFF               	addlw	-1
 12352  0045' 1D03               	skipz
 12353  0046' 2800'              	goto	u5375
 12354  0047'                    l4231:	
 12355  0047' 1F81'              	btfss	___ftpack@arg+1,7
 12356  0048' 2800'              	goto	l4229
 12357  0049' 1803'              	btfsc	___ftpack@exp,0
 12358  004A' 2800'              	goto	l603
 12359  004B' 30FF               	movlw	255
 12360  004C' 0580'              	andwf	___ftpack@arg,f
 12361  004D' 307F               	movlw	127
 12362  004E' 0581'              	andwf	___ftpack@arg+1,f
 12363  004F' 30FF               	movlw	255
 12364  0050' 0582'              	andwf	___ftpack@arg+2,f
 12365  0051'                    l603:	
 12366  0051' 1003               	clrc
 12367  0052' 0C83'              	rrf	___ftpack@exp,f
 12368  0053' 0803'              	movf	___ftpack@exp,w
 12369  0054' 0084'              	movwf	??___ftpack
 12370  0055' 0185'              	clrf	??___ftpack+1
 12371  0056' 0186'              	clrf	??___ftpack+2
 12372  0057' 3010               	movlw	16
 12373  0058'                    u5405:	
 12374  0058' 1003               	clrc
 12375  0059' 0D84'              	rlf	??___ftpack,f
 12376  005A' 0D85'              	rlf	??___ftpack+1,f
 12377  005B' 0D86'              	rlf	??___ftpack+2,f
 12378  005C' 3EFF               	addlw	-1
 12379  005D' 1D03               	skipz
 12380  005E' 2800'              	goto	u5405
 12381  005F' 0804'              	movf	??___ftpack,w
 12382  0060' 0480'              	iorwf	___ftpack@arg,f
 12383  0061' 0805'              	movf	??___ftpack+1,w
 12384  0062' 0481'              	iorwf	___ftpack@arg+1,f
 12385  0063' 0806'              	movf	??___ftpack+2,w
 12386  0064' 0482'              	iorwf	___ftpack@arg+2,f
 12387  0065' 0804'              	movf	___ftpack@sign,w
 12388  0066' 1903               	btfsc	3,2
 12389  0067' 0008               	return
 12390  0068' 1782'              	bsf	___ftpack@arg+2,7
 12391  0069' 0008               	return
 12392  006A'                    __end_of___ftpack:	
 12393                           
 12394                           	psect	text36
 12395  0000'                    __ptext36:	
 12396 ;; *************** function ___awmod *****************
 12397 ;; Defined at:
 12398 ;;		line 6 in file "/opt/microchip/xc8/v1.33/sources/common/awmod.c"
 12399 ;; Parameters:    Size  Location     Type
 12400 ;;  divisor         2    4[COMMON] int 
 12401 ;;  dividend        2    6[COMMON] int 
 12402 ;; Auto vars:     Size  Location     Type
 12403 ;;  sign            1    2[BANK0 ] unsigned char 
 12404 ;;  counter         1    1[BANK0 ] unsigned char 
 12405 ;; Return value:  Size  Location     Type
 12406 ;;                  2    4[COMMON] int 
 12407 ;; Registers used:
 12408 ;;		wreg, status,2, status,0
 12409 ;; Tracked objects:
 12410 ;;		On entry : 0/0
 12411 ;;		On exit  : 0/0
 12412 ;;		Unchanged: 0/0
 12413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12414 ;;      Params:         4       0       0       0       0
 12415 ;;      Locals:         0       2       0       0       0
 12416 ;;      Temps:          0       1       0       0       0
 12417 ;;      Totals:         4       3       0       0       0
 12418 ;;Total ram usage:        7 bytes
 12419 ;; Hardware stack levels used:    1
 12420 ;; Hardware stack levels required when called:    1
 12421 ;; This function calls:
 12422 ;;		Nothing
 12423 ;; This function is called by:
 12424 ;;		_binary_decimal
 12425 ;;		_fround
 12426 ;;		_scale
 12427 ;; This function uses a non-reentrant model
 12428 ;;
 12429                           
 12430                           
 12431                           ;psect for function ___awmod
 12432  0000'                    ___awmod:	
 12433                           
 12434                           ;incstack = 0
 12435                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12436  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 12437  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 12438  0002' 0182'              	clrf	___awmod@sign
 12439  0003' 1F87'              	btfss	___awmod@dividend+1,7
 12440  0004' 2800'              	goto	l4539
 12441  0005' 0986'              	comf	___awmod@dividend,f
 12442  0006' 0987'              	comf	___awmod@dividend+1,f
 12443  0007' 0A86'              	incf	___awmod@dividend,f
 12444  0008' 1903               	skipnz
 12445  0009' 0A87'              	incf	___awmod@dividend+1,f
 12446  000A' 0182'              	clrf	___awmod@sign
 12447  000B' 0A82'              	incf	___awmod@sign,f
 12448  000C'                    l4539:	
 12449  000C' 1F85'              	btfss	___awmod@divisor+1,7
 12450  000D' 2800'              	goto	l4543
 12451  000E' 0984'              	comf	___awmod@divisor,f
 12452  000F' 0985'              	comf	___awmod@divisor+1,f
 12453  0010' 0A84'              	incf	___awmod@divisor,f
 12454  0011' 1903               	skipnz
 12455  0012' 0A85'              	incf	___awmod@divisor+1,f
 12456  0013'                    l4543:	
 12457  0013' 0805'              	movf	___awmod@divisor+1,w
 12458  0014' 0404'              	iorwf	___awmod@divisor,w
 12459  0015' 1903               	skipnz
 12460  0016' 2800'              	goto	l4561
 12461  0017' 0181'              	clrf	___awmod@counter
 12462  0018' 0A81'              	incf	___awmod@counter,f
 12463  0019'                    l4551:	
 12464  0019' 1B85'              	btfsc	___awmod@divisor+1,7
 12465  001A' 2800'              	goto	l4553
 12466  001B' 3001               	movlw	1
 12467  001C'                    u6155:	
 12468  001C' 1003               	clrc
 12469  001D' 0D84'              	rlf	___awmod@divisor,f
 12470  001E' 0D85'              	rlf	___awmod@divisor+1,f
 12471  001F' 3EFF               	addlw	-1
 12472  0020' 1D03               	skipz
 12473  0021' 2800'              	goto	u6155
 12474  0022' 3001               	movlw	1
 12475  0023' 0080'              	movwf	??___awmod
 12476  0024' 0800'              	movf	??___awmod,w
 12477  0025' 0781'              	addwf	___awmod@counter,f
 12478  0026' 2800'              	goto	l4551
 12479  0027'                    l4553:	
 12480  0027' 0805'              	movf	___awmod@divisor+1,w
 12481  0028' 0207'              	subwf	___awmod@dividend+1,w
 12482  0029' 1D03               	skipz
 12483  002A' 2800'              	goto	u6175
 12484  002B' 0804'              	movf	___awmod@divisor,w
 12485  002C' 0206'              	subwf	___awmod@dividend,w
 12486  002D'                    u6175:	
 12487  002D' 1C03               	skipc
 12488  002E' 2800'              	goto	l4557
 12489  002F' 0804'              	movf	___awmod@divisor,w
 12490  0030' 0286'              	subwf	___awmod@dividend,f
 12491  0031' 0805'              	movf	___awmod@divisor+1,w
 12492  0032' 1C03               	skipc
 12493  0033' 0387'              	decf	___awmod@dividend+1,f
 12494  0034' 0287'              	subwf	___awmod@dividend+1,f
 12495  0035'                    l4557:	
 12496  0035' 3001               	movlw	1
 12497  0036'                    u6185:	
 12498  0036' 1003               	clrc
 12499  0037' 0C85'              	rrf	___awmod@divisor+1,f
 12500  0038' 0C84'              	rrf	___awmod@divisor,f
 12501  0039' 3EFF               	addlw	-1
 12502  003A' 1D03               	skipz
 12503  003B' 2800'              	goto	u6185
 12504  003C' 3001               	movlw	1
 12505  003D' 0281'              	subwf	___awmod@counter,f
 12506  003E' 1D03               	btfss	3,2
 12507  003F' 2800'              	goto	l4553
 12508  0040'                    l4561:	
 12509  0040' 0802'              	movf	___awmod@sign,w
 12510  0041' 1903               	btfsc	3,2
 12511  0042' 2800'              	goto	l4565
 12512  0043' 0986'              	comf	___awmod@dividend,f
 12513  0044' 0987'              	comf	___awmod@dividend+1,f
 12514  0045' 0A86'              	incf	___awmod@dividend,f
 12515  0046' 1903               	skipnz
 12516  0047' 0A87'              	incf	___awmod@dividend+1,f
 12517  0048'                    l4565:	
 12518  0048' 0807'              	movf	___awmod@dividend+1,w
 12519  0049' 0185'              	clrf	?___awmod+1
 12520  004A' 0785'              	addwf	?___awmod+1,f
 12521  004B' 0806'              	movf	___awmod@dividend,w
 12522  004C' 0184'              	clrf	?___awmod
 12523  004D' 0784'              	addwf	?___awmod,f
 12524  004E' 0008               	return
 12525  004F'                    __end_of___awmod:	
 12526                           
 12527                           	psect	text37
 12528  0000'                    __ptext37:	
 12529 ;; *************** function ___awdiv *****************
 12530 ;; Defined at:
 12531 ;;		line 6 in file "/opt/microchip/xc8/v1.33/sources/common/awdiv.c"
 12532 ;; Parameters:    Size  Location     Type
 12533 ;;  divisor         2    3[BANK0 ] int 
 12534 ;;  dividend        2    5[BANK0 ] int 
 12535 ;; Auto vars:     Size  Location     Type
 12536 ;;  quotient        2   10[BANK0 ] int 
 12537 ;;  sign            1    9[BANK0 ] unsigned char 
 12538 ;;  counter         1    8[BANK0 ] unsigned char 
 12539 ;; Return value:  Size  Location     Type
 12540 ;;                  2    3[BANK0 ] int 
 12541 ;; Registers used:
 12542 ;;		wreg, status,2, status,0
 12543 ;; Tracked objects:
 12544 ;;		On entry : 0/0
 12545 ;;		On exit  : 0/0
 12546 ;;		Unchanged: 0/0
 12547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12548 ;;      Params:         0       4       0       0       0
 12549 ;;      Locals:         0       4       0       0       0
 12550 ;;      Temps:          0       1       0       0       0
 12551 ;;      Totals:         0       9       0       0       0
 12552 ;;Total ram usage:        9 bytes
 12553 ;; Hardware stack levels used:    1
 12554 ;; Hardware stack levels required when called:    1
 12555 ;; This function calls:
 12556 ;;		Nothing
 12557 ;; This function is called by:
 12558 ;;		_main
 12559 ;;		_binary_decimal
 12560 ;;		_fround
 12561 ;;		_scale
 12562 ;;		_sprintf
 12563 ;; This function uses a non-reentrant model
 12564 ;;
 12565                           
 12566                           
 12567                           ;psect for function ___awdiv
 12568  0000'                    ___awdiv:	
 12569                           
 12570                           ;incstack = 0
 12571                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12572  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 12573  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 12574  0002' 0189'              	clrf	___awdiv@sign
 12575  0003' 1F84'              	btfss	___awdiv@divisor+1,7
 12576  0004' 2800'              	goto	l4495
 12577  0005' 0983'              	comf	___awdiv@divisor,f
 12578  0006' 0984'              	comf	___awdiv@divisor+1,f
 12579  0007' 0A83'              	incf	___awdiv@divisor,f
 12580  0008' 1903               	skipnz
 12581  0009' 0A84'              	incf	___awdiv@divisor+1,f
 12582  000A' 0189'              	clrf	___awdiv@sign
 12583  000B' 0A89'              	incf	___awdiv@sign,f
 12584  000C'                    l4495:	
 12585  000C' 1F86'              	btfss	___awdiv@dividend+1,7
 12586  000D' 2800'              	goto	l4501
 12587  000E' 0985'              	comf	___awdiv@dividend,f
 12588  000F' 0986'              	comf	___awdiv@dividend+1,f
 12589  0010' 0A85'              	incf	___awdiv@dividend,f
 12590  0011' 1903               	skipnz
 12591  0012' 0A86'              	incf	___awdiv@dividend+1,f
 12592  0013' 3001               	movlw	1
 12593  0014' 0087'              	movwf	??___awdiv
 12594  0015' 0807'              	movf	??___awdiv,w
 12595  0016' 0689'              	xorwf	___awdiv@sign,f
 12596  0017'                    l4501:	
 12597  0017' 018A'              	clrf	___awdiv@quotient
 12598  0018' 018B'              	clrf	___awdiv@quotient+1
 12599  0019' 0804'              	movf	___awdiv@divisor+1,w
 12600  001A' 0403'              	iorwf	___awdiv@divisor,w
 12601  001B' 1903               	skipnz
 12602  001C' 2800'              	goto	l4523
 12603  001D' 0188'              	clrf	___awdiv@counter
 12604  001E' 0A88'              	incf	___awdiv@counter,f
 12605  001F'                    l4511:	
 12606  001F' 1B84'              	btfsc	___awdiv@divisor+1,7
 12607  0020' 2800'              	goto	l4513
 12608  0021' 3001               	movlw	1
 12609  0022'                    u6055:	
 12610  0022' 1003               	clrc
 12611  0023' 0D83'              	rlf	___awdiv@divisor,f
 12612  0024' 0D84'              	rlf	___awdiv@divisor+1,f
 12613  0025' 3EFF               	addlw	-1
 12614  0026' 1D03               	skipz
 12615  0027' 2800'              	goto	u6055
 12616  0028' 3001               	movlw	1
 12617  0029' 0087'              	movwf	??___awdiv
 12618  002A' 0807'              	movf	??___awdiv,w
 12619  002B' 0788'              	addwf	___awdiv@counter,f
 12620  002C' 2800'              	goto	l4511
 12621  002D'                    l4513:	
 12622  002D' 3001               	movlw	1
 12623  002E'                    u6075:	
 12624  002E' 1003               	clrc
 12625  002F' 0D8A'              	rlf	___awdiv@quotient,f
 12626  0030' 0D8B'              	rlf	___awdiv@quotient+1,f
 12627  0031' 3EFF               	addlw	-1
 12628  0032' 1D03               	skipz
 12629  0033' 2800'              	goto	u6075
 12630  0034' 0804'              	movf	___awdiv@divisor+1,w
 12631  0035' 0206'              	subwf	___awdiv@dividend+1,w
 12632  0036' 1D03               	skipz
 12633  0037' 2800'              	goto	u6085
 12634  0038' 0803'              	movf	___awdiv@divisor,w
 12635  0039' 0205'              	subwf	___awdiv@dividend,w
 12636  003A'                    u6085:	
 12637  003A' 1C03               	skipc
 12638  003B' 2800'              	goto	l4519
 12639  003C' 0803'              	movf	___awdiv@divisor,w
 12640  003D' 0285'              	subwf	___awdiv@dividend,f
 12641  003E' 0804'              	movf	___awdiv@divisor+1,w
 12642  003F' 1C03               	skipc
 12643  0040' 0386'              	decf	___awdiv@dividend+1,f
 12644  0041' 0286'              	subwf	___awdiv@dividend+1,f
 12645  0042' 140A'              	bsf	___awdiv@quotient,0
 12646  0043'                    l4519:	
 12647  0043' 3001               	movlw	1
 12648  0044'                    u6095:	
 12649  0044' 1003               	clrc
 12650  0045' 0C84'              	rrf	___awdiv@divisor+1,f
 12651  0046' 0C83'              	rrf	___awdiv@divisor,f
 12652  0047' 3EFF               	addlw	-1
 12653  0048' 1D03               	skipz
 12654  0049' 2800'              	goto	u6095
 12655  004A' 3001               	movlw	1
 12656  004B' 0288'              	subwf	___awdiv@counter,f
 12657  004C' 1D03               	btfss	3,2
 12658  004D' 2800'              	goto	l4513
 12659  004E'                    l4523:	
 12660  004E' 0809'              	movf	___awdiv@sign,w
 12661  004F' 1903               	btfsc	3,2
 12662  0050' 2800'              	goto	l4527
 12663  0051' 098A'              	comf	___awdiv@quotient,f
 12664  0052' 098B'              	comf	___awdiv@quotient+1,f
 12665  0053' 0A8A'              	incf	___awdiv@quotient,f
 12666  0054' 1903               	skipnz
 12667  0055' 0A8B'              	incf	___awdiv@quotient+1,f
 12668  0056'                    l4527:	
 12669  0056' 080B'              	movf	___awdiv@quotient+1,w
 12670  0057' 0184'              	clrf	?___awdiv+1
 12671  0058' 0784'              	addwf	?___awdiv+1,f
 12672  0059' 080A'              	movf	___awdiv@quotient,w
 12673  005A' 0183'              	clrf	?___awdiv
 12674  005B' 0783'              	addwf	?___awdiv,f
 12675  005C' 0008               	return
 12676  005D'                    __end_of___awdiv:	
 12677                           
 12678                           	psect	text38
 12679  0000'                    __ptext38:	
 12680 ;; *************** function ___aldiv *****************
 12681 ;; Defined at:
 12682 ;;		line 6 in file "/opt/microchip/xc8/v1.33/sources/common/aldiv.c"
 12683 ;; Parameters:    Size  Location     Type
 12684 ;;  divisor         4    0[BANK0 ] long 
 12685 ;;  dividend        4    4[BANK0 ] long 
 12686 ;; Auto vars:     Size  Location     Type
 12687 ;;  quotient        4   10[BANK0 ] long 
 12688 ;;  sign            1    9[BANK0 ] unsigned char 
 12689 ;;  counter         1    8[BANK0 ] unsigned char 
 12690 ;; Return value:  Size  Location     Type
 12691 ;;                  4    0[BANK0 ] long 
 12692 ;; Registers used:
 12693 ;;		wreg, status,2, status,0
 12694 ;; Tracked objects:
 12695 ;;		On entry : 0/0
 12696 ;;		On exit  : 0/0
 12697 ;;		Unchanged: 0/0
 12698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12699 ;;      Params:         0       8       0       0       0
 12700 ;;      Locals:         0       6       0       0       0
 12701 ;;      Temps:          1       0       0       0       0
 12702 ;;      Totals:         1      14       0       0       0
 12703 ;;Total ram usage:       15 bytes
 12704 ;; Hardware stack levels used:    1
 12705 ;; Hardware stack levels required when called:    1
 12706 ;; This function calls:
 12707 ;;		Nothing
 12708 ;; This function is called by:
 12709 ;;		_main
 12710 ;; This function uses a non-reentrant model
 12711 ;;
 12712                           
 12713                           
 12714                           ;psect for function ___aldiv
 12715  0000'                    ___aldiv:	
 12716                           
 12717                           ;incstack = 0
 12718                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 12719  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 12720  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 12721  0002' 0189'              	clrf	___aldiv@sign
 12722  0003' 1F83'              	btfss	___aldiv@divisor+3,7
 12723  0004' 2800'              	goto	l447
 12724  0005' 0980'              	comf	___aldiv@divisor,f
 12725  0006' 0981'              	comf	___aldiv@divisor+1,f
 12726  0007' 0982'              	comf	___aldiv@divisor+2,f
 12727  0008' 0983'              	comf	___aldiv@divisor+3,f
 12728  0009' 0A80'              	incf	___aldiv@divisor,f
 12729  000A' 1903               	skipnz
 12730  000B' 0A81'              	incf	___aldiv@divisor+1,f
 12731  000C' 1903               	skipnz
 12732  000D' 0A82'              	incf	___aldiv@divisor+2,f
 12733  000E' 1903               	skipnz
 12734  000F' 0A83'              	incf	___aldiv@divisor+3,f
 12735  0010' 0189'              	clrf	___aldiv@sign
 12736  0011' 0A89'              	incf	___aldiv@sign,f
 12737  0012'                    l447:	
 12738  0012' 1F87'              	btfss	___aldiv@dividend+3,7
 12739  0013' 2800'              	goto	l3905
 12740  0014' 0984'              	comf	___aldiv@dividend,f
 12741  0015' 0985'              	comf	___aldiv@dividend+1,f
 12742  0016' 0986'              	comf	___aldiv@dividend+2,f
 12743  0017' 0987'              	comf	___aldiv@dividend+3,f
 12744  0018' 0A84'              	incf	___aldiv@dividend,f
 12745  0019' 1903               	skipnz
 12746  001A' 0A85'              	incf	___aldiv@dividend+1,f
 12747  001B' 1903               	skipnz
 12748  001C' 0A86'              	incf	___aldiv@dividend+2,f
 12749  001D' 1903               	skipnz
 12750  001E' 0A87'              	incf	___aldiv@dividend+3,f
 12751  001F' 3001               	movlw	1
 12752  0020' 0084'              	movwf	??___aldiv
 12753  0021' 0804'              	movf	??___aldiv,w
 12754  0022' 0689'              	xorwf	___aldiv@sign,f
 12755  0023'                    l3905:	
 12756  0023' 3000               	movlw	0
 12757  0024' 008D'              	movwf	___aldiv@quotient+3
 12758  0025' 3000               	movlw	0
 12759  0026' 008C'              	movwf	___aldiv@quotient+2
 12760  0027' 3000               	movlw	0
 12761  0028' 008B'              	movwf	___aldiv@quotient+1
 12762  0029' 3000               	movlw	0
 12763  002A' 008A'              	movwf	___aldiv@quotient
 12764  002B' 0803'              	movf	___aldiv@divisor+3,w
 12765  002C' 0402'              	iorwf	___aldiv@divisor+2,w
 12766  002D' 0401'              	iorwf	___aldiv@divisor+1,w
 12767  002E' 0400'              	iorwf	___aldiv@divisor,w
 12768  002F' 1903               	skipnz
 12769  0030' 2800'              	goto	l3927
 12770  0031' 0188'              	clrf	___aldiv@counter
 12771  0032' 0A88'              	incf	___aldiv@counter,f
 12772  0033'                    l3913:	
 12773  0033' 1B83'              	btfsc	___aldiv@divisor+3,7
 12774  0034' 2800'              	goto	l3915
 12775  0035' 3001               	movlw	1
 12776  0036' 0084'              	movwf	??___aldiv
 12777  0037'                    u5155:	
 12778  0037' 1003               	clrc
 12779  0038' 0D80'              	rlf	___aldiv@divisor,f
 12780  0039' 0D81'              	rlf	___aldiv@divisor+1,f
 12781  003A' 0D82'              	rlf	___aldiv@divisor+2,f
 12782  003B' 0D83'              	rlf	___aldiv@divisor+3,f
 12783  003C' 0B84'              	decfsz	??___aldiv,f
 12784  003D' 2800'              	goto	u5155
 12785  003E' 3001               	movlw	1
 12786  003F' 0084'              	movwf	??___aldiv
 12787  0040' 0804'              	movf	??___aldiv,w
 12788  0041' 0788'              	addwf	___aldiv@counter,f
 12789  0042' 2800'              	goto	l3913
 12790  0043'                    l3915:	
 12791  0043' 3001               	movlw	1
 12792  0044' 0084'              	movwf	??___aldiv
 12793  0045'                    u5175:	
 12794  0045' 1003               	clrc
 12795  0046' 0D8A'              	rlf	___aldiv@quotient,f
 12796  0047' 0D8B'              	rlf	___aldiv@quotient+1,f
 12797  0048' 0D8C'              	rlf	___aldiv@quotient+2,f
 12798  0049' 0D8D'              	rlf	___aldiv@quotient+3,f
 12799  004A' 0B84'              	decfsz	??___aldiv,f
 12800  004B' 2800'              	goto	u5175
 12801  004C' 0803'              	movf	___aldiv@divisor+3,w
 12802  004D' 0207'              	subwf	___aldiv@dividend+3,w
 12803  004E' 1D03               	skipz
 12804  004F' 2800'              	goto	u5185
 12805  0050' 0802'              	movf	___aldiv@divisor+2,w
 12806  0051' 0206'              	subwf	___aldiv@dividend+2,w
 12807  0052' 1D03               	skipz
 12808  0053' 2800'              	goto	u5185
 12809  0054' 0801'              	movf	___aldiv@divisor+1,w
 12810  0055' 0205'              	subwf	___aldiv@dividend+1,w
 12811  0056' 1D03               	skipz
 12812  0057' 2800'              	goto	u5185
 12813  0058' 0800'              	movf	___aldiv@divisor,w
 12814  0059' 0204'              	subwf	___aldiv@dividend,w
 12815  005A'                    u5185:	
 12816  005A' 1C03               	skipc
 12817  005B' 2800'              	goto	l3923
 12818  005C' 0800'              	movf	___aldiv@divisor,w
 12819  005D' 0284'              	subwf	___aldiv@dividend,f
 12820  005E' 0801'              	movf	___aldiv@divisor+1,w
 12821  005F' 1C03               	skipc
 12822  0060' 0F01'              	incfsz	___aldiv@divisor+1,w
 12823  0061' 0285'              	subwf	___aldiv@dividend+1,f
 12824  0062' 0802'              	movf	___aldiv@divisor+2,w
 12825  0063' 1C03               	skipc
 12826  0064' 0F02'              	incfsz	___aldiv@divisor+2,w
 12827  0065' 0286'              	subwf	___aldiv@dividend+2,f
 12828  0066' 0803'              	movf	___aldiv@divisor+3,w
 12829  0067' 1C03               	skipc
 12830  0068' 0F03'              	incfsz	___aldiv@divisor+3,w
 12831  0069' 0287'              	subwf	___aldiv@dividend+3,f
 12832  006A' 140A'              	bsf	___aldiv@quotient,0
 12833  006B'                    l3923:	
 12834  006B' 3001               	movlw	1
 12835  006C'                    u5195:	
 12836  006C' 1003               	clrc
 12837  006D' 0C83'              	rrf	___aldiv@divisor+3,f
 12838  006E' 0C82'              	rrf	___aldiv@divisor+2,f
 12839  006F' 0C81'              	rrf	___aldiv@divisor+1,f
 12840  0070' 0C80'              	rrf	___aldiv@divisor,f
 12841  0071' 3EFF               	addlw	-1
 12842  0072' 1D03               	skipz
 12843  0073' 2800'              	goto	u5195
 12844  0074' 3001               	movlw	1
 12845  0075' 0288'              	subwf	___aldiv@counter,f
 12846  0076' 1D03               	btfss	3,2
 12847  0077' 2800'              	goto	l3915
 12848  0078'                    l3927:	
 12849  0078' 0809'              	movf	___aldiv@sign,w
 12850  0079' 1903               	btfsc	3,2
 12851  007A' 2800'              	goto	l3931
 12852  007B' 098A'              	comf	___aldiv@quotient,f
 12853  007C' 098B'              	comf	___aldiv@quotient+1,f
 12854  007D' 098C'              	comf	___aldiv@quotient+2,f
 12855  007E' 098D'              	comf	___aldiv@quotient+3,f
 12856  007F' 0A8A'              	incf	___aldiv@quotient,f
 12857  0080' 1903               	skipnz
 12858  0081' 0A8B'              	incf	___aldiv@quotient+1,f
 12859  0082' 1903               	skipnz
 12860  0083' 0A8C'              	incf	___aldiv@quotient+2,f
 12861  0084' 1903               	skipnz
 12862  0085' 0A8D'              	incf	___aldiv@quotient+3,f
 12863  0086'                    l3931:	
 12864  0086' 080D'              	movf	___aldiv@quotient+3,w
 12865  0087' 0083'              	movwf	?___aldiv+3
 12866  0088' 080C'              	movf	___aldiv@quotient+2,w
 12867  0089' 0082'              	movwf	?___aldiv+2
 12868  008A' 080B'              	movf	___aldiv@quotient+1,w
 12869  008B' 0081'              	movwf	?___aldiv+1
 12870  008C' 080A'              	movf	___aldiv@quotient,w
 12871  008D' 0080'              	movwf	?___aldiv
 12872  008E' 0008               	return
 12873  008F'                    __end_of___aldiv:	
 12874                           
 12875                           	psect	text39
 12876  0000'                    __ptext39:	
 12877 ;; *************** function _InitApp *****************
 12878 ;; Defined at:
 12879 ;;		line 241 in file "user.c"
 12880 ;; Parameters:    Size  Location     Type
 12881 ;;		None
 12882 ;; Auto vars:     Size  Location     Type
 12883 ;;		None
 12884 ;; Return value:  Size  Location     Type
 12885 ;;		None               void
 12886 ;; Registers used:
 12887 ;;		wreg, status,2, status,0, pclath, cstack
 12888 ;; Tracked objects:
 12889 ;;		On entry : 0/0
 12890 ;;		On exit  : 0/0
 12891 ;;		Unchanged: 0/0
 12892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12893 ;;      Params:         0       0       0       0       0
 12894 ;;      Locals:         0       0       0       0       0
 12895 ;;      Temps:          0       0       0       0       0
 12896 ;;      Totals:         0       0       0       0       0
 12897 ;;Total ram usage:        0 bytes
 12898 ;; Hardware stack levels used:    1
 12899 ;; Hardware stack levels required when called:    2
 12900 ;; This function calls:
 12901 ;;		_init_SPI
 12902 ;; This function is called by:
 12903 ;;		_main
 12904 ;; This function uses a non-reentrant model
 12905 ;;
 12906                           
 12907                           
 12908                           ;psect for function _InitApp
 12909  0000'                    _InitApp:	
 12910                           
 12911                           ;user.c: 244: init_SPI();
 12912                           
 12913                           ;incstack = 0
 12914                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
 12915  0000' 120A' 118A' 2000'  	fcall	_init_SPI
 12916                           
 12917                           ;user.c: 246: TRISA = 0b00000000;
 12918  0003' 1683               	bsf	3,5	;RP0=1, select bank1
 12919  0004' 1303               	bcf	3,6	;RP1=0, select bank1
 12920  0005' 0185               	clrf	5	;volatile
 12921                           
 12922                           ;user.c: 248: TRISB = 0b00000011;
 12923  0006' 3003               	movlw	3
 12924  0007' 0086               	movwf	6	;volatile
 12925                           
 12926                           ;user.c: 250: TRISCbits.TRISC1 = 0b0;
 12927  0008' 1087               	bcf	7,1	;volatile
 12928                           
 12929                           ;user.c: 251: TRISCbits.TRISC2 = 0b0;
 12930  0009' 1107               	bcf	7,2	;volatile
 12931                           
 12932                           ;user.c: 252: TRISCbits.TRISC6 = 0b0;
 12933  000A' 1307               	bcf	7,6	;volatile
 12934                           
 12935                           ;user.c: 253: TRISCbits.TRISC7 = 0b0;
 12936  000B' 1387               	bcf	7,7	;volatile
 12937                           
 12938                           ;user.c: 255: TRISEbits.TRISE3 = 0b1;
 12939  000C' 1589               	bsf	9,3	;volatile
 12940  000D' 0008               	return
 12941  000E'                    __end_of_InitApp:	
 12942                           
 12943                           	psect	text40
 12944  0000'                    __ptext40:	
 12945 ;; *************** function _init_SPI *****************
 12946 ;; Defined at:
 12947 ;;		line 26 in file "user.c"
 12948 ;; Parameters:    Size  Location     Type
 12949 ;;		None
 12950 ;; Auto vars:     Size  Location     Type
 12951 ;;		None
 12952 ;; Return value:  Size  Location     Type
 12953 ;;		None               void
 12954 ;; Registers used:
 12955 ;;		wreg, status,2, status,0
 12956 ;; Tracked objects:
 12957 ;;		On entry : 0/0
 12958 ;;		On exit  : 0/0
 12959 ;;		Unchanged: 0/0
 12960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12961 ;;      Params:         0       0       0       0       0
 12962 ;;      Locals:         0       0       0       0       0
 12963 ;;      Temps:          0       0       0       0       0
 12964 ;;      Totals:         0       0       0       0       0
 12965 ;;Total ram usage:        0 bytes
 12966 ;; Hardware stack levels used:    1
 12967 ;; Hardware stack levels required when called:    1
 12968 ;; This function calls:
 12969 ;;		Nothing
 12970 ;; This function is called by:
 12971 ;;		_InitApp
 12972 ;; This function uses a non-reentrant model
 12973 ;;
 12974                           
 12975                           
 12976                           ;psect for function _init_SPI
 12977  0000'                    _init_SPI:	
 12978                           
 12979                           ;user.c: 28: SSPSTATbits.CKE=0b0;
 12980                           
 12981                           ;incstack = 0
 12982                           ; Regs used in _init_SPI: [wreg+status,2+status,0]
 12983  0000' 1683               	bsf	3,5	;RP0=1, select bank1
 12984  0001' 1303               	bcf	3,6	;RP1=0, select bank1
 12985  0002' 1314               	bcf	20,6	;volatile
 12986                           
 12987                           ;user.c: 29: SSPSTATbits.SMP=0b1;
 12988  0003' 1794               	bsf	20,7	;volatile
 12989                           
 12990                           ;user.c: 31: SSPCONbits.SSPEN = 0b1;
 12991  0004' 1283               	bcf	3,5	;RP0=0, select bank0
 12992  0005' 1303               	bcf	3,6	;RP1=0, select bank0
 12993  0006' 1694               	bsf	20,5	;volatile
 12994                           
 12995                           ;user.c: 32: SSPCONbits.CKP = 0b1;
 12996  0007' 1614               	bsf	20,4	;volatile
 12997                           
 12998                           ;user.c: 33: SSPCONbits.SSPM = 0b0000;
 12999  0008' 30F0               	movlw	-16
 13000  0009' 0594               	andwf	20,f	;volatile
 13001  000A' 0008               	return
 13002  000B'                    __end_of_init_SPI:	
 13003                           
 13004                           	psect	text41
 13005  0000'                    __ptext41:	
 13006 ;; *************** function _ConfigureOscillator *****************
 13007 ;; Defined at:
 13008 ;;		line 18 in file "system.c"
 13009 ;; Parameters:    Size  Location     Type
 13010 ;;		None
 13011 ;; Auto vars:     Size  Location     Type
 13012 ;;		None
 13013 ;; Return value:  Size  Location     Type
 13014 ;;		None               void
 13015 ;; Registers used:
 13016 ;;		wreg, status,2, status,0
 13017 ;; Tracked objects:
 13018 ;;		On entry : 0/0
 13019 ;;		On exit  : 0/0
 13020 ;;		Unchanged: 0/0
 13021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13022 ;;      Params:         0       0       0       0       0
 13023 ;;      Locals:         0       0       0       0       0
 13024 ;;      Temps:          0       0       0       0       0
 13025 ;;      Totals:         0       0       0       0       0
 13026 ;;Total ram usage:        0 bytes
 13027 ;; Hardware stack levels used:    1
 13028 ;; Hardware stack levels required when called:    1
 13029 ;; This function calls:
 13030 ;;		Nothing
 13031 ;; This function is called by:
 13032 ;;		_main
 13033 ;; This function uses a non-reentrant model
 13034 ;;
 13035                           
 13036                           
 13037                           ;psect for function _ConfigureOscillator
 13038  0000'                    _ConfigureOscillator:	
 13039                           
 13040                           ;system.c: 21: OSCCONbits.IRCF = 0b111;
 13041                           
 13042                           ;incstack = 0
 13043                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
 13044  0000' 3070               	movlw	112
 13045  0001' 1683               	bsf	3,5	;RP0=1, select bank1
 13046  0002' 1303               	bcf	3,6	;RP1=0, select bank1
 13047  0003' 048F               	iorwf	15,f	;volatile
 13048                           
 13049                           ;system.c: 22: OSCCONbits.SCS = 0b1;
 13050  0004' 140F               	bsf	15,0	;volatile
 13051                           
 13052                           ;system.c: 24: OSCTUNEbits.TUN = 0b00000;
 13053  0005' 30E0               	movlw	-32
 13054  0006' 0590               	andwf	16,f	;volatile
 13055  0007' 0008               	return
 13056  0008'                    __end_of_ConfigureOscillator:	
 13057                           
 13058                           	psect	text42
 13059  0000'                    __ptext42:	
 13060 ;; *************** function _isr *****************
 13061 ;; Defined at:
 13062 ;;		line 23 in file "interrupts.c"
 13063 ;; Parameters:    Size  Location     Type
 13064 ;;		None
 13065 ;; Auto vars:     Size  Location     Type
 13066 ;;		None
 13067 ;; Return value:  Size  Location     Type
 13068 ;;		None               void
 13069 ;; Registers used:
 13070 ;;		None
 13071 ;; Tracked objects:
 13072 ;;		On entry : 0/0
 13073 ;;		On exit  : 0/0
 13074 ;;		Unchanged: 0/0
 13075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13076 ;;      Params:         0       0       0       0       0
 13077 ;;      Locals:         0       0       0       0       0
 13078 ;;      Temps:          4       0       0       0       0
 13079 ;;      Totals:         4       0       0       0       0
 13080 ;;Total ram usage:        4 bytes
 13081 ;; Hardware stack levels used:    1
 13082 ;; This function calls:
 13083 ;;		Nothing
 13084 ;; This function is called by:
 13085 ;;		Interrupt level 1
 13086 ;; This function uses a non-reentrant model
 13087 ;;
 13088                           
 13089                           
 13090                           ;psect for function _isr
 13091  0000'                    _isr:	
 13092  0000' 0803'              	movf	??_isr+3,w
 13093  0001' 00FF               	movwf	127
 13094  0002' 0802'              	movf	??_isr+2,w
 13095  0003' 008A               	movwf	10
 13096  0004' 0801'              	movf	??_isr+1,w
 13097  0005' 0084               	movwf	4
 13098  0006' 0E00'              	swapf	??_isr^(0+-128),w
 13099  0007' 0083               	movwf	3
 13100  0008' 0EFE               	swapf	126,f
 13101  0009' 0E7E               	swapf	126,w
 13102  000A' 0009               	retfie
 13103  000B'                    __end_of_isr:	
 13104  007E                     btemp	set	126	;btemp
 13105  007E                     wtemp	set	126
 13106  007E                     wtemp0	set	126
 13107  0080                     wtemp1	set	128
 13108  0082                     wtemp2	set	130
 13109  0084                     wtemp3	set	132
 13110  0086                     wtemp4	set	134
 13111  0088                     wtemp5	set	136
 13112  007F                     wtemp6	set	127
 13113  007E                     ttemp	set	126
 13114  007E                     ttemp0	set	126
 13115  0081                     ttemp1	set	129
 13116  0084                     ttemp2	set	132
 13117  0087                     ttemp3	set	135
 13118  007F                     ttemp4	set	127
 13119  007E                     ltemp	set	126
 13120  007E                     ltemp0	set	126
 13121  0082                     ltemp1	set	130
 13122  0086                     ltemp2	set	134
 13123  0080                     ltemp3	set	128
 13124                           
 13125                           	psect	intentry
 13126  0000'                    __pintentry:	
 13127                           ;incstack = 0
 13128                           ; Regs used in _isr: []
 13129                           
 13130  0000'                    interrupt_function:	
 13131  007E                     saved_w	set	btemp
 13132  0000' 00FE               	movwf	btemp
 13133  0001' 0E03               	swapf	3,w
 13134  0002' 0080'              	movwf	??_isr
 13135  0003' 0804               	movf	4,w
 13136  0004' 0081'              	movwf	??_isr+1
 13137  0005' 080A               	movf	10,w
 13138  0006' 0082'              	movwf	??_isr+2
 13139  0007' 1283               	bcf	3,5	;RP0=0, select bank0
 13140  0008' 1303               	bcf	3,6	;RP1=0, select bank0
 13141  0009' 087F               	movf	btemp+1,w
 13142  000A' 0083'              	movwf	??_isr+3
 13143  000B' 120A' 118A' 2800'  	ljmp	_isr
 13144                           
 13145                           	psect	text6_split_1
 13146  0000'                    l5253:	
 13147                           ;doprnt.c: 1242: }
 13148                           ;doprnt.c: 1244: while(prec) {
 13149                           
 13150                           
 13151                           ;doprnt.c: 1245: ((*sp++ = ('0')));
 13152  0000' 3030               	movlw	48
 13153  0001' 1283               	bcf	3,5	;RP0=0, select bank0
 13154  0002' 1303               	bcf	3,6	;RP1=0, select bank0
 13155  0003' 00C7'              	movwf	??_sprintf
 13156  0004' 1683               	bsf	3,5	;RP0=1, select bank1
 13157  0005' 1303               	bcf	3,6	;RP1=0, select bank1
 13158  0006' 0800'              	movf	sprintf@sp^(0+128),w
 13159  0007' 0084               	movwf	4
 13160  0008' 1283               	bcf	3,5	;RP0=0, select bank0
 13161  0009' 1303               	bcf	3,6	;RP1=0, select bank0
 13162  000A' 0847'              	movf	??_sprintf,w
 13163  000B' 1783               	bsf	3,7	;select IRP bank2
 13164  000C' 0080               	movwf	0
 13165  000D' 3001               	movlw	1
 13166  000E' 00C7'              	movwf	??_sprintf
 13167  000F' 0847'              	movf	??_sprintf,w
 13168  0010' 1683               	bsf	3,5	;RP0=1, select bank1
 13169  0011' 1303               	bcf	3,6	;RP1=0, select bank1
 13170  0012' 0780'              	addwf	sprintf@sp^(0+128),f
 13171                           
 13172                           ;doprnt.c: 1246: prec--;
 13173  0013' 30FF               	movlw	255
 13174  0014' 0780'              	addwf	sprintf@prec^(0+128),f
 13175  0015' 1803               	skipnc
 13176  0016' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 13177  0017' 30FF               	movlw	255
 13178  0018' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 13179  0019'                    l5259:	
 13180  0019' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 13181  001A' 0400'              	iorwf	sprintf@prec^(0+128),w
 13182  001B' 1903               	btfsc	3,2
 13183  001C' 2800'              	goto	L41
 13184  001D' 2800'              	goto	l5253
 13185  001E'                    l5261:	
 13186                           ;doprnt.c: 1247: }
 13187                           ;doprnt.c: 1254: continue;
 13188                           
 13189                           
 13190                           ;doprnt.c: 1255: }
 13191                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
 13192  001E' 1683               	bsf	3,5	;RP0=1, select bank1
 13193  001F' 1303               	bcf	3,6	;RP1=0, select bank1
 13194  0020' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 13195  0021' 0400'              	iorwf	sprintf@prec^(0+128),w
 13196  0022' 1D03               	skipz
 13197  0023' 2800'              	goto	l287
 13198  0024' 0800'              	movf	(sprintf@_val+3)^(0+128),w
 13199  0025' 0400'              	iorwf	(sprintf@_val+2)^(0+128),w
 13200  0026' 0400'              	iorwf	(sprintf@_val+1)^(0+128),w
 13201  0027' 0400'              	iorwf	sprintf@_val^(0+128),w
 13202  0028' 1D03               	skipz
 13203  0029' 2800'              	goto	l287
 13204                           
 13205                           ;doprnt.c: 1300: prec++;
 13206  002A' 3001               	movlw	1
 13207  002B' 0780'              	addwf	sprintf@prec^(0+128),f
 13208  002C' 1803               	skipnc
 13209  002D' 0A80'              	incf	(sprintf@prec+1)^(0+128),f
 13210  002E' 3000               	movlw	0
 13211  002F' 0780'              	addwf	(sprintf@prec+1)^(0+128),f
 13212  0030'                    l287:	
 13213                           
 13214                           ;doprnt.c: 1348: if(c < prec)
 13215  0030' 0800'              	movf	sprintf@c^(0+128),w
 13216  0031' 1283               	bcf	3,5	;RP0=0, select bank0
 13217  0032' 1303               	bcf	3,6	;RP1=0, select bank0
 13218  0033' 00C7'              	movwf	??_sprintf
 13219  0034' 01C8'              	clrf	??_sprintf+1
 13220  0035' 1BC7'              	btfsc	??_sprintf,7
 13221  0036' 03C8'              	decf	??_sprintf+1,f
 13222  0037' 0848'              	movf	??_sprintf+1,w
 13223  0038' 3A80               	xorlw	128
 13224  0039' 00C9'              	movwf	??_sprintf+2
 13225  003A' 1683               	bsf	3,5	;RP0=1, select bank1
 13226  003B' 1303               	bcf	3,6	;RP1=0, select bank1
 13227  003C' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 13228  003D' 3A80               	xorlw	128
 13229  003E' 1283               	bcf	3,5	;RP0=0, select bank0
 13230  003F' 1303               	bcf	3,6	;RP1=0, select bank0
 13231  0040' 0249'              	subwf	??_sprintf+2,w
 13232  0041' 1D03               	skipz
 13233  0042' 2800'              	goto	u7415
 13234  0043' 1683               	bsf	3,5	;RP0=1, select bank1
 13235  0044' 1303               	bcf	3,6	;RP1=0, select bank1
 13236  0045' 0800'              	movf	sprintf@prec^(0+128),w
 13237  0046' 1283               	bcf	3,5	;RP0=0, select bank0
 13238  0047' 1303               	bcf	3,6	;RP1=0, select bank0
 13239  0048' 0247'              	subwf	??_sprintf,w
 13240  0049'                    u7415:	
 13241  0049' 1803               	skipnc
 13242  004A' 2800'              	goto	l5269
 13243                           
 13244                           ;doprnt.c: 1349: c = prec;
 13245  004B' 1683               	bsf	3,5	;RP0=1, select bank1
 13246  004C' 1303               	bcf	3,6	;RP1=0, select bank1
 13247  004D' 0800'              	movf	sprintf@prec^(0+128),w
 13248  004E' 1283               	bcf	3,5	;RP0=0, select bank0
 13249  004F' 1303               	bcf	3,6	;RP1=0, select bank0
 13250  0050' 00C7'              	movwf	??_sprintf
 13251  0051' 0847'              	movf	??_sprintf,w
 13252  0052' 1683               	bsf	3,5	;RP0=1, select bank1
 13253  0053' 1303               	bcf	3,6	;RP1=0, select bank1
 13254  0054' 0080'              	movwf	sprintf@c^(0+128)
 13255  0055' 2800'              	goto	l5273
 13256  0056'                    l5269:	
 13257                           
 13258                           ;doprnt.c: 1350: else if(prec < c)
 13259  0056' 1683               	bsf	3,5	;RP0=1, select bank1
 13260  0057' 1303               	bcf	3,6	;RP1=0, select bank1
 13261  0058' 0800'              	movf	sprintf@c^(0+128),w
 13262  0059' 1283               	bcf	3,5	;RP0=0, select bank0
 13263  005A' 1303               	bcf	3,6	;RP1=0, select bank0
 13264  005B' 00C7'              	movwf	??_sprintf
 13265  005C' 01C8'              	clrf	??_sprintf+1
 13266  005D' 1BC7'              	btfsc	??_sprintf,7
 13267  005E' 03C8'              	decf	??_sprintf+1,f
 13268  005F' 1683               	bsf	3,5	;RP0=1, select bank1
 13269  0060' 1303               	bcf	3,6	;RP1=0, select bank1
 13270  0061' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 13271  0062' 3A80               	xorlw	128
 13272  0063' 1283               	bcf	3,5	;RP0=0, select bank0
 13273  0064' 1303               	bcf	3,6	;RP1=0, select bank0
 13274  0065' 00C9'              	movwf	??_sprintf+2
 13275  0066' 0848'              	movf	??_sprintf+1,w
 13276  0067' 3A80               	xorlw	128
 13277  0068' 0249'              	subwf	??_sprintf+2,w
 13278  0069' 1D03               	skipz
 13279  006A' 2800'              	goto	u7425
 13280  006B' 0847'              	movf	??_sprintf,w
 13281  006C' 1683               	bsf	3,5	;RP0=1, select bank1
 13282  006D' 1303               	bcf	3,6	;RP1=0, select bank1
 13283  006E' 0200'              	subwf	sprintf@prec^(0+128),w
 13284  006F'                    u7425:	
 13285  006F' 1803               	skipnc
 13286  0070' 2800'              	goto	l5273
 13287                           
 13288                           ;doprnt.c: 1351: prec = c;
 13289  0071' 1683               	bsf	3,5	;RP0=1, select bank1
 13290  0072' 1303               	bcf	3,6	;RP1=0, select bank1
 13291  0073' 0800'              	movf	sprintf@c^(0+128),w
 13292  0074' 0080'              	movwf	sprintf@prec^(0+128)
 13293  0075' 0180'              	clrf	(sprintf@prec+1)^(0+128)
 13294  0076' 1B80'              	btfsc	sprintf@prec^(0+128),7
 13295  0077' 0380'              	decf	(sprintf@prec+1)^(0+128),f
 13296  0078'                    l5273:	
 13297                           
 13298                           ;doprnt.c: 1354: if(width && flag & 0x03)
 13299  0078' 1683               	bsf	3,5	;RP0=1, select bank1
 13300  0079' 1303               	bcf	3,6	;RP1=0, select bank1
 13301  007A' 0800'              	movf	(sprintf@width+1)^(0+128),w
 13302  007B' 0400'              	iorwf	sprintf@width^(0+128),w
 13303  007C' 1903               	skipnz
 13304  007D' 2800'              	goto	l5279
 13305  007E' 3003               	movlw	3
 13306  007F' 0500'              	andwf	sprintf@flag^(0+128),w
 13307  0080' 1283               	bcf	3,5	;RP0=0, select bank0
 13308  0081' 1303               	bcf	3,6	;RP1=0, select bank0
 13309  0082' 00C7'              	movwf	??_sprintf
 13310  0083' 3000               	movlw	0
 13311  0084' 1683               	bsf	3,5	;RP0=1, select bank1
 13312  0085' 1303               	bcf	3,6	;RP1=0, select bank1
 13313  0086' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 13314  0087' 1283               	bcf	3,5	;RP0=0, select bank0
 13315  0088' 1303               	bcf	3,6	;RP1=0, select bank0
 13316  0089' 00C8'              	movwf	??_sprintf+1
 13317  008A' 0848'              	movf	??_sprintf+1,w
 13318  008B' 0447'              	iorwf	??_sprintf,w
 13319  008C' 1903               	skipnz
 13320  008D' 2800'              	goto	l5279
 13321                           
 13322                           ;doprnt.c: 1355: width--;
 13323  008E' 30FF               	movlw	255
 13324  008F' 1683               	bsf	3,5	;RP0=1, select bank1
 13325  0090' 1303               	bcf	3,6	;RP1=0, select bank1
 13326  0091' 0780'              	addwf	sprintf@width^(0+128),f
 13327  0092' 1803               	skipnc
 13328  0093' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 13329  0094' 30FF               	movlw	255
 13330  0095' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 13331  0096'                    l5279:	
 13332                           
 13333                           ;doprnt.c: 1357: if(flag & 0x4000) {
 13334  0096' 1683               	bsf	3,5	;RP0=1, select bank1
 13335  0097' 1303               	bcf	3,6	;RP1=0, select bank1
 13336  0098' 1F00'              	btfss	(sprintf@flag+1)^(0+128),6
 13337  0099' 2800'              	goto	l5287
 13338                           
 13339                           ;doprnt.c: 1358: if(width > prec)
 13340  009A' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 13341  009B' 3A80               	xorlw	128
 13342  009C' 1283               	bcf	3,5	;RP0=0, select bank0
 13343  009D' 1303               	bcf	3,6	;RP1=0, select bank0
 13344  009E' 00C7'              	movwf	??_sprintf
 13345  009F' 1683               	bsf	3,5	;RP0=1, select bank1
 13346  00A0' 1303               	bcf	3,6	;RP1=0, select bank1
 13347  00A1' 0800'              	movf	(sprintf@width+1)^(0+128),w
 13348  00A2' 3A80               	xorlw	128
 13349  00A3' 1283               	bcf	3,5	;RP0=0, select bank0
 13350  00A4' 1303               	bcf	3,6	;RP1=0, select bank0
 13351  00A5' 0247'              	subwf	??_sprintf,w
 13352  00A6' 1D03               	skipz
 13353  00A7' 2800'              	goto	u7465
 13354  00A8' 1683               	bsf	3,5	;RP0=1, select bank1
 13355  00A9' 1303               	bcf	3,6	;RP1=0, select bank1
 13356  00AA' 0800'              	movf	sprintf@width^(0+128),w
 13357  00AB' 0200'              	subwf	sprintf@prec^(0+128),w
 13358  00AC'                    u7465:	
 13359  00AC' 1803               	skipnc
 13360  00AD' 2800'              	goto	l5285
 13361                           
 13362                           ;doprnt.c: 1359: width -= prec;
 13363  00AE' 1683               	bsf	3,5	;RP0=1, select bank1
 13364  00AF' 1303               	bcf	3,6	;RP1=0, select bank1
 13365  00B0' 0800'              	movf	sprintf@prec^(0+128),w
 13366  00B1' 0280'              	subwf	sprintf@width^(0+128),f
 13367  00B2' 0800'              	movf	(sprintf@prec+1)^(0+128),w
 13368  00B3' 1C03               	skipc
 13369  00B4' 0380'              	decf	(sprintf@width+1)^(0+128),f
 13370  00B5' 0280'              	subwf	(sprintf@width+1)^(0+128),f
 13371  00B6' 2800'              	goto	l5287
 13372  00B7'                    l5285:	
 13373                           
 13374                           ;doprnt.c: 1360: else
 13375                           ;doprnt.c: 1361: width = 0;
 13376  00B7' 1683               	bsf	3,5	;RP0=1, select bank1
 13377  00B8' 1303               	bcf	3,6	;RP1=0, select bank1
 13378  00B9' 0180'              	clrf	sprintf@width^(0+128)
 13379  00BA' 0180'              	clrf	(sprintf@width+1)^(0+128)
 13380  00BB'                    l5287:	
 13381                           
 13382                           ;doprnt.c: 1362: }
 13383                           ;doprnt.c: 1390: if(width > c)
 13384  00BB' 0800'              	movf	sprintf@c^(0+128),w
 13385  00BC' 1283               	bcf	3,5	;RP0=0, select bank0
 13386  00BD' 1303               	bcf	3,6	;RP1=0, select bank0
 13387  00BE' 00C7'              	movwf	??_sprintf
 13388  00BF' 01C8'              	clrf	??_sprintf+1
 13389  00C0' 1BC7'              	btfsc	??_sprintf,7
 13390  00C1' 03C8'              	decf	??_sprintf+1,f
 13391  00C2' 0848'              	movf	??_sprintf+1,w
 13392  00C3' 3A80               	xorlw	128
 13393  00C4' 00C9'              	movwf	??_sprintf+2
 13394  00C5' 1683               	bsf	3,5	;RP0=1, select bank1
 13395  00C6' 1303               	bcf	3,6	;RP1=0, select bank1
 13396  00C7' 0800'              	movf	(sprintf@width+1)^(0+128),w
 13397  00C8' 3A80               	xorlw	128
 13398  00C9' 1283               	bcf	3,5	;RP0=0, select bank0
 13399  00CA' 1303               	bcf	3,6	;RP1=0, select bank0
 13400  00CB' 0249'              	subwf	??_sprintf+2,w
 13401  00CC' 1D03               	skipz
 13402  00CD' 2800'              	goto	u7475
 13403  00CE' 1683               	bsf	3,5	;RP0=1, select bank1
 13404  00CF' 1303               	bcf	3,6	;RP1=0, select bank1
 13405  00D0' 0800'              	movf	sprintf@width^(0+128),w
 13406  00D1' 1283               	bcf	3,5	;RP0=0, select bank0
 13407  00D2' 1303               	bcf	3,6	;RP1=0, select bank0
 13408  00D3' 0247'              	subwf	??_sprintf,w
 13409  00D4'                    u7475:	
 13410  00D4' 1803               	skipnc
 13411  00D5' 2800'              	goto	l5291
 13412                           
 13413                           ;doprnt.c: 1391: width -= c;
 13414  00D6' 1683               	bsf	3,5	;RP0=1, select bank1
 13415  00D7' 1303               	bcf	3,6	;RP1=0, select bank1
 13416  00D8' 0800'              	movf	sprintf@c^(0+128),w
 13417  00D9' 1283               	bcf	3,5	;RP0=0, select bank0
 13418  00DA' 1303               	bcf	3,6	;RP1=0, select bank0
 13419  00DB' 00C7'              	movwf	??_sprintf
 13420  00DC' 01C8'              	clrf	??_sprintf+1
 13421  00DD' 1BC7'              	btfsc	??_sprintf,7
 13422  00DE' 03C8'              	decf	??_sprintf+1,f
 13423  00DF' 0847'              	movf	??_sprintf,w
 13424  00E0' 1683               	bsf	3,5	;RP0=1, select bank1
 13425  00E1' 1303               	bcf	3,6	;RP1=0, select bank1
 13426  00E2' 0280'              	subwf	sprintf@width^(0+128),f
 13427  00E3' 1283               	bcf	3,5	;RP0=0, select bank0
 13428  00E4' 1303               	bcf	3,6	;RP1=0, select bank0
 13429  00E5' 0848'              	movf	??_sprintf+1,w
 13430  00E6' 1683               	bsf	3,5	;RP0=1, select bank1
 13431  00E7' 1303               	bcf	3,6	;RP1=0, select bank1
 13432  00E8' 1C03               	skipc
 13433  00E9' 0380'              	decf	(sprintf@width+1)^(0+128),f
 13434  00EA' 0280'              	subwf	(sprintf@width+1)^(0+128),f
 13435  00EB' 2800'              	goto	l5293
 13436  00EC'                    l5291:	
 13437                           
 13438                           ;doprnt.c: 1392: else
 13439                           ;doprnt.c: 1393: width = 0;
 13440  00EC' 1683               	bsf	3,5	;RP0=1, select bank1
 13441  00ED' 1303               	bcf	3,6	;RP1=0, select bank1
 13442  00EE' 0180'              	clrf	sprintf@width^(0+128)
 13443  00EF' 0180'              	clrf	(sprintf@width+1)^(0+128)
 13444  00F0'                    l5293:	
 13445                           
 13446                           ;doprnt.c: 1396: if(flag & 0x04) {
 13447  00F0' 1D00'              	btfss	sprintf@flag^(0+128),2
 13448  00F1' 2800'              	goto	l5309
 13449                           
 13450                           ;doprnt.c: 1401: if(flag & 0x03)
 13451  00F2' 3003               	movlw	3
 13452  00F3' 0500'              	andwf	sprintf@flag^(0+128),w
 13453  00F4' 1283               	bcf	3,5	;RP0=0, select bank0
 13454  00F5' 1303               	bcf	3,6	;RP1=0, select bank0
 13455  00F6' 00C7'              	movwf	??_sprintf
 13456  00F7' 3000               	movlw	0
 13457  00F8' 1683               	bsf	3,5	;RP0=1, select bank1
 13458  00F9' 1303               	bcf	3,6	;RP1=0, select bank1
 13459  00FA' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 13460  00FB' 1283               	bcf	3,5	;RP0=0, select bank0
 13461  00FC' 1303               	bcf	3,6	;RP1=0, select bank0
 13462  00FD' 00C8'              	movwf	??_sprintf+1
 13463  00FE' 0848'              	movf	??_sprintf+1,w
 13464  00FF' 0447'              	iorwf	??_sprintf,w
 13465  0100' 1903               	skipnz
 13466  0101' 2800'              	goto	l5301
 13467                           
 13468                           ;doprnt.c: 1402: ((*sp++ = ('-')));
 13469  0102' 302D               	movlw	45
 13470  0103' 00C7'              	movwf	??_sprintf
 13471  0104' 1683               	bsf	3,5	;RP0=1, select bank1
 13472  0105' 1303               	bcf	3,6	;RP1=0, select bank1
 13473  0106' 0800'              	movf	sprintf@sp^(0+128),w
 13474  0107' 0084               	movwf	4
 13475  0108' 1283               	bcf	3,5	;RP0=0, select bank0
 13476  0109' 1303               	bcf	3,6	;RP1=0, select bank0
 13477  010A' 0847'              	movf	??_sprintf,w
 13478  010B' 1783               	bsf	3,7	;select IRP bank2
 13479  010C' 0080               	movwf	0
 13480  010D' 3001               	movlw	1
 13481  010E' 00C7'              	movwf	??_sprintf
 13482  010F' 0847'              	movf	??_sprintf,w
 13483  0110' 1683               	bsf	3,5	;RP0=1, select bank1
 13484  0111' 1303               	bcf	3,6	;RP1=0, select bank1
 13485  0112' 0780'              	addwf	sprintf@sp^(0+128),f
 13486  0113'                    l5301:	
 13487                           
 13488                           ;doprnt.c: 1424: if(width)
 13489  0113' 1683               	bsf	3,5	;RP0=1, select bank1
 13490  0114' 1303               	bcf	3,6	;RP1=0, select bank1
 13491  0115'                    L31:	
 13492  0115' 0800'              	movf	(sprintf@width+1)^(0+128),w
 13493  0116' 0400'              	iorwf	sprintf@width^(0+128),w
 13494  0117' 1903               	skipnz
 13495  0118' 2800'              	goto	L41
 13496                           
 13497                           ;doprnt.c: 1426: ((*sp++ = ('0')));
 13498                           
 13499                           ;doprnt.c: 1425: do
 13500  0119' 3030               	movlw	48
 13501  011A' 1283               	bcf	3,5	;RP0=0, select bank0
 13502  011B' 1303               	bcf	3,6	;RP1=0, select bank0
 13503  011C' 00C7'              	movwf	??_sprintf
 13504  011D' 1683               	bsf	3,5	;RP0=1, select bank1
 13505  011E' 1303               	bcf	3,6	;RP1=0, select bank1
 13506  011F' 0800'              	movf	sprintf@sp^(0+128),w
 13507  0120' 0084               	movwf	4
 13508  0121' 1283               	bcf	3,5	;RP0=0, select bank0
 13509  0122' 1303               	bcf	3,6	;RP1=0, select bank0
 13510  0123' 0847'              	movf	??_sprintf,w
 13511  0124' 1783               	bsf	3,7	;select IRP bank2
 13512  0125' 0080               	movwf	0
 13513  0126' 3001               	movlw	1
 13514  0127' 00C7'              	movwf	??_sprintf
 13515  0128' 0847'              	movf	??_sprintf,w
 13516  0129' 1683               	bsf	3,5	;RP0=1, select bank1
 13517  012A' 1303               	bcf	3,6	;RP1=0, select bank1
 13518  012B' 0780'              	addwf	sprintf@sp^(0+128),f
 13519                           
 13520                           ;doprnt.c: 1427: while(--width);
 13521  012C' 30FF               	movlw	255
 13522  012D' 0780'              	addwf	sprintf@width^(0+128),f
 13523  012E' 1803               	skipnc
 13524  012F' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 13525  0130' 30FF               	movlw	255
 13526  0131' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 13527  0132' 2800'              	goto	L31
 13528  0133'                    l5309:	
 13529                           ;doprnt.c: 1429: } else
 13530                           
 13531                           
 13532                           ;doprnt.c: 1431: {
 13533                           ;doprnt.c: 1433: if(width
 13534                           ;doprnt.c: 1437: )
 13535  0133' 0800'              	movf	(sprintf@width+1)^(0+128),w
 13536  0134' 0400'              	iorwf	sprintf@width^(0+128),w
 13537  0135' 1903               	skipnz
 13538  0136' 2800'              	goto	l5317
 13539  0137'                    l5311:	
 13540                           ;doprnt.c: 1438: do
 13541                           
 13542                           
 13543                           ;doprnt.c: 1439: ((*sp++ = (' ')));
 13544  0137' 3020               	movlw	32
 13545  0138' 1283               	bcf	3,5	;RP0=0, select bank0
 13546  0139' 1303               	bcf	3,6	;RP1=0, select bank0
 13547  013A' 00C7'              	movwf	??_sprintf
 13548  013B' 1683               	bsf	3,5	;RP0=1, select bank1
 13549  013C' 1303               	bcf	3,6	;RP1=0, select bank1
 13550  013D' 0800'              	movf	sprintf@sp^(0+128),w
 13551  013E' 0084               	movwf	4
 13552  013F' 1283               	bcf	3,5	;RP0=0, select bank0
 13553  0140' 1303               	bcf	3,6	;RP1=0, select bank0
 13554  0141' 0847'              	movf	??_sprintf,w
 13555  0142' 1783               	bsf	3,7	;select IRP bank2
 13556  0143' 0080               	movwf	0
 13557  0144' 3001               	movlw	1
 13558  0145' 00C7'              	movwf	??_sprintf
 13559  0146' 0847'              	movf	??_sprintf,w
 13560  0147' 1683               	bsf	3,5	;RP0=1, select bank1
 13561  0148' 1303               	bcf	3,6	;RP1=0, select bank1
 13562  0149' 0780'              	addwf	sprintf@sp^(0+128),f
 13563                           
 13564                           ;doprnt.c: 1440: while(--width);
 13565  014A' 30FF               	movlw	255
 13566  014B' 0780'              	addwf	sprintf@width^(0+128),f
 13567  014C' 1803               	skipnc
 13568  014D' 0A80'              	incf	(sprintf@width+1)^(0+128),f
 13569  014E' 30FF               	movlw	255
 13570  014F' 0780'              	addwf	(sprintf@width+1)^(0+128),f
 13571  0150' 0800'              	movf	(sprintf@width+1)^(0+128),w
 13572  0151' 0400'              	iorwf	sprintf@width^(0+128),w
 13573  0152' 1D03               	skipz
 13574  0153' 2800'              	goto	l5311
 13575  0154'                    l5317:	
 13576                           
 13577                           ;doprnt.c: 1447: if(flag & 0x03)
 13578  0154' 3003               	movlw	3
 13579  0155' 0500'              	andwf	sprintf@flag^(0+128),w
 13580  0156' 1283               	bcf	3,5	;RP0=0, select bank0
 13581  0157' 1303               	bcf	3,6	;RP1=0, select bank0
 13582  0158' 00C7'              	movwf	??_sprintf
 13583  0159' 3000               	movlw	0
 13584  015A' 1683               	bsf	3,5	;RP0=1, select bank1
 13585  015B' 1303               	bcf	3,6	;RP1=0, select bank1
 13586  015C' 0500'              	andwf	(sprintf@flag+1)^(0+128),w
 13587  015D' 1283               	bcf	3,5	;RP0=0, select bank0
 13588  015E' 1303               	bcf	3,6	;RP1=0, select bank0
 13589  015F' 00C8'              	movwf	??_sprintf+1
 13590  0160' 0848'              	movf	??_sprintf+1,w
 13591  0161' 0447'              	iorwf	??_sprintf,w
 13592  0162' 1903               	skipnz
 13593  0163' 2800'              	goto	L41
 13594                           
 13595                           ;doprnt.c: 1448: ((*sp++ = ('-')));
 13596  0164' 302D               	movlw	45
 13597  0165'                    L30:	
 13598  0165' 00C7'              	movwf	??_sprintf
 13599  0166' 1683               	bsf	3,5	;RP0=1, select bank1
 13600  0167' 1303               	bcf	3,6	;RP1=0, select bank1
 13601  0168' 0800'              	movf	sprintf@sp^(0+128),w
 13602  0169' 0084               	movwf	4
 13603  016A' 1283               	bcf	3,5	;RP0=0, select bank0
 13604  016B' 1303               	bcf	3,6	;RP1=0, select bank0
 13605  016C' 0847'              	movf	??_sprintf,w
 13606  016D' 1783               	bsf	3,7	;select IRP bank2
 13607  016E' 0080               	movwf	0
 13608  016F' 3001               	movlw	1
 13609  0170' 00C7'              	movwf	??_sprintf
 13610  0171' 0847'              	movf	??_sprintf,w
 13611  0172' 1683               	bsf	3,5	;RP0=1, select bank1
 13612  0173' 1303               	bcf	3,6	;RP1=0, select bank1
 13613  0174' 0780'              	addwf	sprintf@sp^(0+128),f
 13614  0175'                    L41:	
 13615  0175' 120A' 118A' 2800'  	goto	l5323
 13616  0178'                    l5325:	
 13617                           ;doprnt.c: 1478: }
 13618                           ;doprnt.c: 1542: }
 13619                           ;doprnt.c: 1544: alldone:
 13620                           
 13621                           
 13622                           ;doprnt.c: 1547: *sp = 0;
 13623  0178' 0800'              	movf	sprintf@sp^(0+128),w
 13624  0179' 0084               	movwf	4
 13625  017A' 1783               	bsf	3,7	;select IRP bank2
 13626  017B' 0180               	clrf	0
 13627  017C' 0008               	return
 13628  017D'                    __end_of_sprintf:	
 13629                           ;doprnt.c: 1549: return 0;
 13630                           ;	Return value of _sprintf is never used
 13631                           


Data Sizes:
    Strings     7
    Constant    175
    Data        54
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     80      80
    BANK1            80     80      80
    BANK3            96     91      95
    BANK2            96      0      72

Pointer List with Targets:

    eval_poly@d	PTR const  size(1) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_2(CODE[7]), STR_1(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> seven_segment@str(BANK2[9]), display_number@str(BANK2[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S487$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    sp__display_number	PTR unsigned char  size(1) Largest target is 9
		 -> display_number@str(BANK2[9]), 

    main@str	PTR unsigned char  size(1) Largest target is 9
		 -> display_number@str(BANK2[9]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _voltage_temp->___awtoft
    _temp_voltage->___awtoft
    _sprintf->___lltoft
    _sprintf->___wmul
    _sprintf->__tdiv_to_l_
    _scale->___awmod
    _fround->___awmod
    _binary_decimal->___awmod
    _binary_decimal->___awtoft
    _pow->___lltoft
    _log->___awtoft
    _log->_frexp
    _exp->___awtoft
    _floor->_frexp
    ___fttol->___awtoft
    ___ftmul->___awmod
    ___ftmul->___awtoft
    ___ftmul->_frexp
    ___bmul->___awmod
    ___ftsub->___awtoft
    ___ftsub->___lltoft
    ___ftadd->___awtoft
    ___ftadd->_frexp
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___awdiv->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_display_number
    _voltage_temp->_pow
    _temp_voltage->_pow
    _display_number->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    _binary_decimal->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->_scale
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___awdiv->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_seven_segment
    _voltage_temp->_pow
    _temp_voltage->_pow
    _seven_segment->_voltage_temp
    _display_number->_sprintf
    _binary_decimal->_pow
    _pow->_exp
    _exp->_ldexp

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_temp_voltage

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0  477871
                                             50 BANK3     41    41      0
                _ConfigureOscillator
                            _InitApp
                            ___aldiv
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                     _binary_decimal
                           _buf_wait
                     _display_number
                        _select_chip
                      _seven_segment
                       _temp_voltage
                       _voltage_temp
 ---------------------------------------------------------------------------------
 (1) _voltage_temp                                        45    42      3  102160
                                             32 BANK1     45    42      3
                           ___awtoft
                             ___bmul
                            ___ftadd
                            ___ftmul
                                _pow
 ---------------------------------------------------------------------------------
 (1) _temp_voltage                                        60    57      3  151727
                                             32 BANK1      7     4      3
                                              0 BANK3     50    50      0
                           ___awtoft
                             ___bmul
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                                _exp
                                _pow
 ---------------------------------------------------------------------------------
 (1) _seven_segment                                        8     3      5   54685
                                             77 BANK1      3     3      0
                                              0 BANK3      5     0      5
                            _sprintf
                       _voltage_temp (ARG)
 ---------------------------------------------------------------------------------
 (1) _select_chip                                          2     0      2     309
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _display_number                                       4     1      3   54366
                                             77 BANK0      3     0      3
                                             36 BANK1      1     1      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             50    46      4   54270
                                             67 BANK0     10     6      4
                                              0 BANK1     36    36      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               12     9      3   11344
                                             32 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              19    16      3   11065
                                             32 BANK0     16    13      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         16    10      6     584
                                              4 COMMON     4     4      0
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          20    14      6     803
                                              0 BANK0     20    14      6
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1940
                                              4 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     622
                                              4 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     501
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _buf_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _binary_decimal                                      14    12      2  101022
                                             32 BANK1     14    12      2
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftmul
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 18    12      6   87391
                                             79 BANK0      1     1      0
                                             15 BANK1     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     3      3   28477
                                             71 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                 13    10      3   46399
                                             78 BANK0      1     1      0
                                              3 BANK1     12     9      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                               10     5      5    2804
                                             71 BANK0      7     2      5
                                              0 BANK1      3     3      0
                             ___ftge
                            ___ftneg
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     390
                                              4 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (4) _floor                                                9     6      3   10837
                                             63 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                6     2      4     582
                                              4 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     826
                                             41 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                              12     6      6    1888
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (5) ___altoft                                             8     4      4    2426
                                             55 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           10     4      6   12235
                                             61 BANK0     10     4      6
                             ___bmul
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    5985
                                             16 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     924
                                             12 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    5007
                                             61 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    4682
                                             48 BANK0     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                              _frexp (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    2967
                                             10 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             6     3      3    2745
                                              7 COMMON     1     1      0
                                              5 BANK0      5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    2389
                                              7 COMMON     1     1      0
                                              5 BANK0      5     1      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2157
                                              4 COMMON     3     3      0
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1733
                                              4 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    2005
                                              3 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
                           _init_SPI
 ---------------------------------------------------------------------------------
 (2) _init_SPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _init_SPI
   ___aldiv
   ___awdiv
     ___awmod (ARG)
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   _binary_decimal
     ___awdiv
       ___awmod (ARG)
     ___awmod
     ___awtoft
       ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
     _pow
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       ___lltoft
         ___ftpack
       _exp
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         _eval_poly
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___bmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftge
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           _frexp
         _ldexp
           ___ftge
           ___ftneg
           _eval_poly (ARG)
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___bmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___bmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _frexp
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _frexp
   _buf_wait
   _display_number
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       ___lldiv
       ___llmod
       ___lltoft
         ___ftpack
       ___wmul
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
   _select_chip
   _seven_segment
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       ___lldiv
       ___llmod
       ___lltoft
         ___ftpack
       ___wmul
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
     _voltage_temp (ARG)
       ___awtoft
         ___ftpack
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___bmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           _eval_poly
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___bmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___bmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___bmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___bmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___bmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             _frexp
           _ldexp
             ___ftge
             ___ftneg
             _eval_poly (ARG)
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___bmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___bmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___bmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftge
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___bmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___bmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                     ___ftpack (ARG)
                     _frexp (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___bmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _frexp
   _temp_voltage
     ___awtoft
       ___ftpack
     ___bmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     _exp
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       _eval_poly
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftge
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         _frexp
       _ldexp
         ___ftge
         ___ftneg
         _eval_poly (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _frexp
     _pow
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       ___lltoft
         ___ftpack
       _exp
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         _eval_poly
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___bmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftge
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           _frexp
         _ldexp
           ___ftge
           ___ftneg
           _eval_poly (ARG)
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___bmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___bmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _frexp
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _frexp
   _voltage_temp
     ___awtoft
       ___ftpack
     ___bmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     _pow
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       ___lltoft
         ___ftpack
       _exp
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         _eval_poly
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___bmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftge
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           _frexp
         _ldexp
           ___ftge
           ___ftneg
           _eval_poly (ARG)
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___bmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___bmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___bmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
           _frexp
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _frexp

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     5B      5F       9       99.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      48      11       75.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     50      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     151      12        0.0%
ABS                  0      0     151       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Oct 14 15:39:21 2014

                ___altoft@exp 003D                             pc 0002                ___bmul@product 000E  
             ??_seven_segment 004D                   __CFG_CP$OFF 0000             _temp_voltage$1010 0021  
                 _SSPSTATbits 0094             _temp_voltage$1011 0024             _temp_voltage$1012 0027  
               ___altoft@sign 003E             _temp_voltage$1008 001E             _temp_voltage$1009 002D  
                ___awdiv@sign 0009                            fsr 0004           ___wmul@multiplicand 0006  
                ___ftadd@exp1 003C                  ___ftadd@exp2 003B                   __CFG_LVP$ON 0000  
                ___ftadd@sign 003A                           l111 0000                           l106 0014  
                         l130 004F                           l131 0057                           l220 002D  
                         l132 0060                           l133 0064                           l134 006B  
                         l135 0070                           l136 007A                           l137 0082  
                         l129 0046                           l235 0100                           l260 04B5  
                         l272 0562                           l603 0051                           l447 0012  
                         l287 0030                           l392 000E                           l577 00DE  
                         l659 00A8                           l852 002D                           l597 0038  
                         l685 0032                  __CFG_CPD$OFF 0000                           _exp 0000  
                         _log 0000                           _isr 0000                           _pow 0000  
                         fsr0 0004        __end_of_display_number 0014                           indf 0000  
                ___awmod@sign 0002                  __CFG_IESO$ON 0000                   _sprintf$500 0003  
                ___ftdiv@cntr 0014                  ___ftdiv@sign 0019                          l5001 0045  
                        l5011 0018                          l4221 001D                          l4301 0029  
                        l5021 0022                          l4231 0047                          l4223 0022  
                        l4215 000A                          l4311 003F                          l5103 0179  
                        l5009 0006                          l4305 0030                          l5201 0519  
                        l4219 0011                          l4331 007A                          l4323 0059  
                        l4243 0004                          l5027 0034                          l5131 0299  
                        l5051 0036                          l4501 0017                          l4229 003D  
                        l4341 0098                          l4333 007F                          l4421 0095  
                        l4413 007D                          l5301 0113                          l5221 060D  
                        l5053 0042                          l5045 0028                          l4511 001F  
                        l4351 00CC                          l4343 00A4                          l4335 0083  
                        l4247 000A                          l5311 0137                          l5207 0532  
                        l5143 031D                          l5135 02DF                          l5127 0272  
                        l5119 01FB                          l4513 002D                          l4361 00EF  
                        l4329 006E                          l4425 00A5                          l4409 006D  
                        l4281 0012                          l5233 0640                          l5057 0054  
                        l5065 009C                          l4523 004E                          l4347 00BA  
                        l4267 0016                          l5227 0626                          l5163 0429  
                        l5147 033E                          l5323 000B                          l5403 010F  
                        l4269 0028                          l4373 0050                          l4605 0090  
                        l5317 0154                          l5309 0133                          l5253 0000  
                        l5093 0130                          l5261 001E                          l5325 0178  
                        l5085 0102                          l5077 00B5                          l3733 000A  
                        l5413 01D5                          l4527 0056                          l4519 0043  
                        l4551 0019                          l4543 0013                          l4391 0018  
                        l4615 0072                          l5239 0673                          l5159 03AC  
                        l5087 0118                          l5079 00FA                          l3913 0033  
                        l3905 0023                          l4553 0027                          l4561 0040  
                        l4369 0029                          l4449 001A                          l4625 000E  
                        l5353 00CE                          l5345 0042                          l4801 00CC  
                        l5273 0078                          l5185 04CD                          l5177 047F  
                        l5169 042F                          l5601 00E5                          l3931 0086  
                        l3923 006B                          l3915 0043                          l4539 000C  
                        l4483 0085                          l4475 0069                          l4467 004C  
                        l4635 0033                          l5339 0036                          l4811 015B  
                        l5291 00EC                          l5259 0019                          l4565 0048  
                        l4557 0035                          l4397 002E                          l4477 0074  
                        l4469 005C                          l4741 00A5                          l5357 00EC  
                        l5381 00D6                          l4901 0022                          l5293 00F0  
                        l5285 00B7                          l5269 0056                          l5453 0034  
                        l5429 005C                          l5621 0152                          l3927 0078  
                        l4495 000C                          l4671 0018                          l4479 0077  
                        l4591 0031                          l4655 0071                          l4735 0068  
                        l4719 000E                          l4807 013C                          l5287 00BB  
                        l5279 0096                          l5199 04F2                          l5471 00B6  
                        l5439 0110                          l5607 00EB                          l4577 000C  
                        l4729 003C                          l4825 0290                          l5801 00EA  
                        l5473 00B8                          l5481 00BE                          l5625 0165  
                        l5609 0134                          l4691 0073                          l4595 003A  
                        l4659 007A                          l4763 01C8                          l5379 0006  
                        l4907 0041                          l4819 0220                          l5803 0103  
                        l5483 00D7                          l5475 00BA                          l5651 0299  
                        ?_exp 0003                          l4677 002E                          l4941 011C  
                        l4933 00FF                          l4917 0088                          l4861 0053  
                        l4837 000C                          l5485 00DB                          l5493 00E3  
                        l5477 00BC                          l5469 008C                          l5637 0265  
                        l5581 00A6                          l5557 0089                          ?_log 0047  
                        l4951 0004                          l4943 0127                          l4935 010F  
                        l4847 001A                          l5487 00DD                          l5495 00FC  
                        l5671 02E8                          l4945 012A                          l4881 009F  
                        l4785 0172                          l4777 00E6                          l5489 00DF  
                        l5497 010B                          l5665 02D8                          l5593 00CC  
                        l4699 0092                          l4891 00BA                          l5667 02E3  
                        l5675 02ED                          l5659 02B8                          ?_isr 0000  
                        l4981 0057                          l4869 0073                          l5669 02E6  
                        l5677 02F8                          l5589 00C2                          l4967 0012  
                        l4991 000A                          l4887 00AC                          l4879 008F  
                        l5599 00D6                          l4977 004A                          l4969 0022  
                        l4993 001A                          l4889 00B7                          l4997 0038  
                        l5797 00DD                          l5799 00C5                          ?_pow 000F  
                        STR_1 00B5                  __CFG_WDTE$ON 0000                          STR_2 00B5  
                        u5155 0037                          u5405 0058                          u5175 0045  
                        u6055 0022                          u5335 0016                          u5185 005A  
                        u5195 006C                          u6075 002E                          u6155 001C  
                        u5355 0031                          u6085 003A                          u5605 006F  
                        u7205 0434                          u6095 0044                          u6175 002D  
                        u5375 0040                          u6335 0040                          u5455 001B  
                        u7215 0471                          u7135 02A4                          u6185 0036  
                        u6345 0052                          u7305 0573                          u7145 02EA  
                        u6355 0074                          u5635 0084                          u5731 001C  
                        u5732 001D                          u6365 0085                          u5805 004C  
                        u5733 0022                          u6445 01BF                          u7325 062F  
                        u5734 0023                          u6375 0093                          u5575 005A  
                        u5751 0043                          u6295 003C                          u7415 0049  
                        u7335 063C                          u7175 031B                          u7095 0193  
                        u5752 0044                          u5665 0099                          u5753 0049  
                        u6705 00B9                          u6625 0090                          u7425 006F  
                        u5754 004A                          u5835 007E                          u7355 06E8  
                        u7275 04FD                          u5845 0086                          u7605 00BF  
                        u6805 000F                          u6565 0055                          u7365 0796  
                        u7285 053D                          u7630 000A                          u5935 0021  
                        u6815 0016                          u6655 00AE                          u6575 0066  
                        u6745 0100                          u6585 0074                          u7465 00AC  
                        u5795 003A                          u6915 000E                          u7475 00D4  
                        u7660 000A                          u5885 00A6                          u5965 004D  
                        u6845 0016                          u7645 010D                          u7805 02B6  
                        u5895 00AE                          u6935 0028                          u6775 011E  
                        u6695 008A                          u7655 01D3                          u7815 02D6  
                        u6865 0024                          u6945 0039                          u7745 00A4  
                        u5995 006B                          u6875 0039                          u7675 005A  
                        u6965 000B                          u6885 004B                          u7685 010E  
                        u7765 0150                          u7695 002D                          u7775 0163  
                        u7785 0263                          u7795 0276                  __CFG_WRT$OFF 0000  
               __CFG_FCMEN$ON 0000                          _main 0000                  ___ftpack@arg 0000  
                ___ftpack@exp 0003                          btemp 007E                          exp@x 0003  
                        log@x 0047                 __CFG_BOREN$ON 0000                          ltemp 007E  
                        pow@x 000F                          pow@y 0012                          start 0000* 
                        ttemp 007E                          wtemp 007E                  _sprintf$1018 0000  
           ___bmul@multiplier 000F                  ___ftmul@cntr 001E                  ___ftmul@sign 001F  
             __end_of_InitApp 000E                  ___fttol@exp1 0036                         ??_exp 004E  
                       ??_log 004A                  ___fttol@lval 0032                         ??_isr 0000  
                       ??_pow 004F         __size_of_voltage_temp 0119               __end_of___aldiv 008F  
                       ?_main 0000               __end_of___awdiv 005D               __end_of___ftadd 0109  
             __end_of___awmod 004F               __end_of___ftdiv 00B8               __end_of___ftneg 0008  
             __end_of___lldiv 0060               __end_of___ftmul 00D3               ___awdiv@divisor 0003  
             __end_of___llmod 004E               __end_of___ftsub 001C               __end_of___fttol 008E  
             ___awdiv@counter 0008                         _PORTA 0005                         _TRISA 0085  
                       _TRISB 0086               ?_display_number 004D           _ConfigureOscillator 0000  
               __CFG_PWRTE$ON 0000                  ___lltoft@exp 0009                  main@junc_bin 004D  
               ___awtoft@sign 0007               __end_of_dpowers 002E                         _floor 0000  
                       _ldexp 0000                         _frexp 0000                         _errno 0000  
                       _scale 0000               __end_of_isdigit 000E                 ___ftpack@sign 0004  
                       main@i 0055                  main@thermo_v 003D                         pclath 000A  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080                         pow@yi 001C                         ttemp0 007E  
                       ttemp1 0081                         ttemp2 0084                         ttemp3 0087  
                       ttemp4 007F                         status 0003                         wtemp0 007E  
                       wtemp1 0080                         wtemp2 0082                         wtemp3 0084  
                       wtemp4 0086                         wtemp5 0088                         wtemp6 007F  
             __end_of_sprintf 017D                   exp@exponent 000C          ?_ConfigureOscillator 0000  
                 ldexp@newexp 004A                __CFG_MCLRE$OFF 0000                  _voltage_temp 0000  
             __initialization 0000            seven_segment@digit 004E                   log@exponent 004B  
                __end_of_main 02FF                        ??_main 0032                 ___fttol@sign1 0031  
        __size_of__tdiv_to_l_ 00C3       __size_of_binary_decimal 00DD                  ?_select_chip 0004  
                      ?_floor 003F                        ?_ldexp 0047                        ?_frexp 0004  
            __end_of___altoft 0042              ___llmod@dividend 0004                        ?_scale 0020  
            ___awdiv@dividend 0005              __end_of___awtoft 0025              __end_of___ftpack 006A  
            __end_of___lltoft 002F                        _SSPBUF 0013         temp_voltage@microvolt 002A  
                   ??_InitApp 0004         ??_ConfigureOscillator 0004              temp_voltage@temp 0020  
            __end_of__powers_ 007C              __end_of_buf_wait 0005                        ___bmul 0000  
           binary_decimal@rem 0028                        ___ftge 0000                     ??___aldiv 0004  
                      ___wmul 0000                 main@junc_temp 0048                     ??___awdiv 0007  
                   ??___ftadd 0036                     ??___awmod 0000                     ??___ftdiv 0010  
                   ??___ftneg 0007                     ??___lldiv 0004                     ??___ftmul 0016  
                   ??___llmod 0004                     ??___ftsub 0008                     ??___fttol 002D  
            __end_of_init_SPI 000B                        _fround 0000              ___awdiv@quotient 000A  
             ___awmod@divisor 0004                 main@not_ready 004F               ___awmod@counter 0001  
                      main@tc 0040                        floor@i 0043                        floor@x 003F  
       ___ftmul@f3_as_product 001B                     ??_isdigit 0004                        saved_w 007E  
           _voltage_temp$1013 0042             _voltage_temp$1014 0045         binary_decimal@decimal 002A  
                   ??_sprintf 0047              __end_ofexp@coeff 009A              __end_oflog@coeff 00B5  
     __end_of__initialization 001C                    ___altoft@c 0037                    ___ftadd@f1 0030  
                  ___ftadd@f2 0033                    ___ftge@ff1 0000                    ___ftge@ff2 0003  
                eval_poly@res 0044                    ___ftdiv@f1 000D                    ___ftdiv@f2 000A  
                  ___ftdiv@f3 0015                    ___ftneg@f1 0004                    ___awtoft@c 0005  
         ___bmul@multiplicand 000C                    ___ftmul@f1 0010                    ___ftmul@f2 0013  
                  ___ftsub@f1 0040                    ___ftsub@f2 003D                    ___fttol@f1 0029  
              __pcstackCOMMON 0000                  __pidataBANK2 0000                    ___lltoft@c 0005  
               __end_of_floor 0099                 __end_of_ldexp 0093                 __end_of_frexp 0042  
               __end_of_scale 02AF           seven_segment@number 0000              seven_segment@sel 0003  
            seven_segment@str 0009                    __div_to_l_ 0000               __div_to_l_@exp1 0013  
                     ??_floor 0042                       ??_ldexp 004C               __div_to_l_@cntr 0012  
                sprintf@integ 0010                       ??_frexp 0000                       ??_scale 0023  
             __div_to_l_@quot 000E                  sprintf@width 001B                    __pbssBANK2 0000  
                  __pbssBANK3 0000            __size_of_eval_poly 0079           voltage_temp@c_const 0027  
               __div_to_l_@f1 0000                 __div_to_l_@f2 0003                    __pmaintext 0000  
       voltage_temp@microvolt 003F                       ?___bmul 000C                       ?___ftge 0000  
       voltage_temp@millivolt 0020                       ?___wmul 0004                    __pintentry 0000  
                   ?___altoft 0037              ??_display_number 0024                       ?_fround 0020  
                   ?___awtoft 0005                     ?___ftpack 0000         __end_of_seven_segment 0114  
                   ?___lltoft 0005             temp_voltage@F1739 0000           select_chip@chip_sel 0004  
              _binary_decimal 0000                     ?_buf_wait 0000                    __stringtab 0000  
        __size_of_select_chip 0019                     ?_init_SPI 0000                       _InitApp 0000  
           __end_of__npowers_ 0055                    _scale$1017 0025                       ___aldiv 0000  
             __size_of___bmul 0013               __size_of___ftge 005F                       ___awdiv 0000  
                     ___ftadd 0000                       ___awmod 0000                       ___ftdiv 0000  
                     ___ftneg 0000                       ___lldiv 0000               __size_of___wmul 0029  
                     ___ftmul 0000                       ___llmod 0000                       ___ftsub 0000  
                     ___fttol 0000                    ??___altoft 003B                       _exp$668 0009  
                  ??___awtoft 0008                    ??___ftpack 0004             __end_of_eval_poly 0079  
             __size_of_fround 01A4              voltage_temp@temp 0048                    ??___lltoft 0007  
                     __ptext1 0000                       __ptext2 0000                       __ptext3 0000  
                     __ptext4 0000                       __ptext5 0000                       __ptext6 0000  
                     __ptext7 0000                       __ptext8 0000                       __ptext9 0000  
                 ?__div_to_l_ 0000                       _dpowers 0006        __end_of_binary_decimal 00DD  
                __size_of_exp 01F4                  __size_of_log 00CA                       _isdigit 0000  
                __size_of_isr 000B                  __size_of_pow 0176              ___awmod@dividend 0006  
            ___aldiv@dividend 0004                 ?_temp_voltage 0020                       _sprintf 0000  
                     clrloop0 0001                       main@val 0053                    ??_buf_wait 0004  
                     main@str 004B          end_of_initialization 001C                main@thermo_sel 0057  
                     exp@sign 000E                    ??_init_SPI 0004               ___lldiv@divisor 0000  
                     pow@sign 001B               ___lldiv@counter 000C              ___aldiv@quotient 000A  
                     psplit$0 15003B                __tdiv_to_l_@f1 0000                __tdiv_to_l_@f2 0003  
               ??__tdiv_to_l_ 0004                     _PORTBbits 0006                     _PORTCbits 0007  
             ?_binary_decimal 0020                     _TRISCbits 0087                     _TRISEbits 0089  
              ??_temp_voltage 0023   __end_of_ConfigureOscillator 0008                   ___ftdiv@exp 0018  
                  main@result 0036           __size_of__div_to_l_ 0133           temp_voltage@c_const 0000  
                  main@strval 0038                   ___ftmul@exp 001A                __end_of___bmul 0013  
              __end_of___ftge 005F                __end_of___wmul 0029               binary_decimal@i 002C  
             binary_decimal@n 0020          display_number@number 004D                __end_of_fround 01A4  
                  floor@expon 0046           start_initialization 0000                    eval_poly@d 0040  
                  eval_poly@n 0041                    eval_poly@x 003D                    ldexp@value 0047  
         __end_of__tdiv_to_l_ 00C3                   __end_of_exp 01F4                   __end_of_log 00CA  
                 __end_of_isr 000B                   __end_of_pow 0176             pnum$text6_split_1 003B  
                  frexp@value 0004               ___llmod@divisor 0000               ___llmod@counter 0005  
    __CFG_FOSC$INTRC_NOCLKOUT 0000                      ??___bmul 000D                      ??___ftge 0006  
                    ??___wmul 0008                    init_fetch0 0000                 sprintf@vd_502 000C  
                 __pdataBANK2 0000                      ??_fround 0023             __size_of___altoft 0042  
                  fround@prec 002F             __size_of___awtoft 0025             __size_of___ftpack 006A  
           __size_of___lltoft 002F                   __pbssCOMMON 0000                     ___latbits 0002  
               __pcstackBANK0 0000                 __pcstackBANK1 0000                 __pcstackBANK3 0000  
         __end_of__stringdata 00BC             __size_of_buf_wait 0005                   sprintf@_val 0013  
                 sprintf@flag 0019                   sprintf@fval 001D                   sprintf@prec 0020  
                    ?_InitApp 0000             __size_of_init_SPI 000B                     _main$1004 0046  
                   _main$1005 0043                 ?_voltage_temp 0020              main@loop_counter 0051  
                    ?___aldiv 0000          __end_of_temp_voltage 0205                      ?___awdiv 0003  
                    ?___ftadd 0030                      ?___awmod 0004                      ?___ftdiv 000A  
                    ?___ftneg 0004                      ?___lldiv 0000                      ?___ftmul 0010  
                    ?___llmod 0000                      ?___ftsub 003D                     __npowers_ 002E  
                    ?___fttol 0029                     __pstrings 0000                   __tdiv_to_l_ 0000  
                   _ldexp$715 0000                  ??__div_to_l_ 0006                      ?_isdigit 0000  
                   _eval_poly 0000                 ??_select_chip 0006                      ?_sprintf 0043  
              __size_of_floor 0099                __size_of_ldexp 0093                __size_of_frexp 0042  
              __size_of_scale 02AF               ___aldiv@divisor 0000             interrupt_function 0000  
             ___aldiv@counter 0008                ___wmul@product 0000        __size_of_seven_segment 0114  
                   clear_ram0 0000                ??_voltage_temp 0023            __end_of__div_to_l_ 0133  
         _binary_decimal$1006 0022           _binary_decimal$1007 0025              ??_binary_decimal 0008  
                 __stringbase 0005                   __stringdata 00B5                     main@i_135 0059  
           ___wmul@multiplier 0004                     main@digit 004C                    ?_eval_poly 003D  
     __size_of_display_number 0014           __end_of_select_chip 0019                     frexp@eptr 0007  
            __size_of_InitApp 000E                 voltage_temp@i 004B             voltage_temp@F1744 001E  
            __size_of___aldiv 008F              __size_of___awdiv 005D              __size_of___ftadd 0109  
            __size_of___awmod 004F              __size_of___ftdiv 00B8              __size_of___ftneg 0008  
            __size_of___lldiv 0060                      ___altoft 0000              __size_of___ftmul 00D3  
            __size_of___llmod 004E              __size_of___ftsub 001C              __size_of___fttol 008E  
                    ___awtoft 0000                      ___ftpack 0000                   _fround$1015 002C  
                 _fround$1016 0029            __end_of__stringtab 0006                      ___lltoft 0000  
           display_number@str 0000                   _isdigit$762 0004                 _seven_segment 0000  
                    _exp$1019 0006                    sprintf@exp 0017              __size_of_isdigit 000E  
                    __ptext10 0000                      __ptext11 0000                      __ptext20 0000  
                    __ptext12 0000                      __ptext21 0000                      __ptext13 0000  
                    __ptext30 0000                      __ptext22 0000                      __ptext14 0000  
                    __ptext31 0000                      __ptext23 0000                      __ptext15 0000  
                    __ptext40 0000                      __ptext32 0000                      __ptext24 0000  
                    __ptext16 0000                      __ptext41 0000                      __ptext33 0000  
                    __ptext25 0000                      __ptext17 0000                      __ptext42 0000  
                    __ptext34 0000                      __ptext26 0000                      __ptext18 0000  
                    __ptext35 0000                      __ptext27 0000                      __ptext19 0000  
                    __ptext36 0000                      __ptext28 0000                      __ptext37 0000  
                    __ptext29 0000                      __ptext38 0000                      __ptext39 0000  
           __CFG_BOR4V$BOR21V 0000                      __powers_ 0055                      _buf_wait 0000  
                    _pow$1020 0015                      _pow$1021 0018              __size_of_sprintf 0000  
                    _init_SPI 0000                 __size_of_main 02FF                     pnum$text6 0015  
       __size_of_temp_voltage 0205  __size_of_ConfigureOscillator 0008                ?_seven_segment 0000  
                    exp@coeff 007C                      log@coeff 009A                   _OSCTUNEbits 0090  
                 ??_eval_poly 0043          __end_of_voltage_temp 0119                 temp_voltage@i 0030  
                    init_ram0 0004                      isdigit@c 0005                      scale@scl 0028  
                 _select_chip 0000                  _temp_voltage 0000                      intlevel1 0000* 
                   sprintf@ap 0007              __tdiv_to_l_@exp1 000B                     sprintf@vd 0008  
            __tdiv_to_l_@cntr 000A                     sprintf@sp 0022              __tdiv_to_l_@quot 0006  
            ___lldiv@dividend 0004                     stringcode 0000                    _OSCCONbits 008F  
                wait_ms@timel 0000                  ?__tdiv_to_l_ 0000                      sprintf@c 0023  
                    sprintf@f 0043              ___lldiv@quotient 0008                      stringdir 0000  
                    stringtab 0000                  ___aldiv@sign 0009                _display_number 0000  
                  _SSPCONbits 0014  
